
// File generated by noodle version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:34:49 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I../lib -I../lib/isg -I../lib/runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -itlx_chess.h +wRelease/chesswork sha256.c tlx

toolrelease _18R1;

// int printf(const char *, ...)
F__sint_printf___P__cchar : user_defined, called {
    fnm : "printf" 'int printf(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int sprintf(char *, const char *, ...)
F__sint_sprintf___P__cchar___P__cchar : user_defined, called {
    fnm : "sprintf" 'int sprintf(char *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    llv : 0 0 0 0 0 ;
}

// int strcmp(const char *, const char *)
F__sint_strcmp___P__cchar___P__cchar : user_defined, called {
    fnm : "strcmp" 'int strcmp(const char *, const char *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// void *memset(void *, int, size_t)
F__Pvoid_memset___Pvoid___sint___uint : user_defined, called {
    fnm : "memset" 'void *memset(void *, int, size_t)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
}

// size_t strlen(const char *)
F__uint_strlen___P__cchar : user_defined, called {
    fnm : "strlen" 'size_t strlen(const char *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
}

// void sha256_transform(unsigned char *, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &)
Fvoid_sha256_transform___P__uchar_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint : user_defined, called {
    fnm : "sha256_transform" 'void sha256_transform(unsigned char *, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &, unsigned &)'; 
    arg : ( w32:i w32:i w32:i w32:o w32:i w32:o w32:i w32:o w32:i w32:o w32:i w32:o w32:i w32:o w32:i w32:o w32:i w32:o );
    loc : ( R[2] R[4] R[5] R[5] R[6] R[6] R[7] R[7] R[8] R[8] R[9] R[9] R[10] R[10] R[11] R[11] R[12] R[12] );
    frm : ( l=256 );
    llv : 1 0 0 0 0 ;
}

// void sha256(unsigned char *, unsigned, unsigned char *)
Fvoid_sha256___P__uchar___uint___P__uchar : user_defined, called {
    fnm : "sha256" 'void sha256(unsigned char *, unsigned, unsigned char *)'; 
    arg : ( w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[4] R[5] R[6] );
    frm : ( l=64 );
    llv : 1 0 0 0 0 ;
}

// void print_hash(unsigned char *)
Fvoid_print_hash___P__uchar : user_defined, called {
    fnm : "print_hash" 'void print_hash(unsigned char *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( b=4 );
    llv : 1 0 0 0 0 ;
}

// void convert_hash(unsigned char *, char *)
Fvoid_convert_hash___P__uchar___P__cchar : user_defined, called {
    fnm : "convert_hash" 'void convert_hash(unsigned char *, char *)'; 
    arg : ( w32:i w32:i w32:i );
    loc : ( R[2] R[4] R[5] );
    frm : ( b=4 );
    llv : 1 0 0 0 0 ;
}

// int main()
F_main : user_defined, called {
    fnm : "main" 'int main()'; 
    arg : ( w32:i w32:r );
    loc : ( R[2] R[3] );
    frm : ( l=100 );
    llv : 1 0 0 0 0 ;
}

// int VA0F__sint_printf___P__cchar(const char *, ...)
VA0F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA0F__sint_printf___P__cchar" 'int VA0F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA1F__sint_printf___P__cchar(const char *, ...)
VA1F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA1F__sint_printf___P__cchar" 'int VA1F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA2F__sint_sprintf___P__cchar___P__cchar(char *, const char *, ...)
VA2F__sint_sprintf___P__cchar___P__cchar : user_defined, called {
    fnm : "VA2F__sint_sprintf___P__cchar___P__cchar" 'int VA2F__sint_sprintf___P__cchar___P__cchar(char *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    llv : 0 0 0 0 0 ;
}

// int VA3F__sint_printf___P__cchar(const char *, ...)
VA3F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA3F__sint_printf___P__cchar" 'int VA3F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA4F__sint_printf___P__cchar(const char *, ...)
VA4F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA4F__sint_printf___P__cchar" 'int VA4F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA5F__sint_printf___P__cchar(const char *, ...)
VA5F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA5F__sint_printf___P__cchar" 'int VA5F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA6F__sint_printf___P__cchar(const char *, ...)
VA6F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA6F__sint_printf___P__cchar" 'int VA6F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

