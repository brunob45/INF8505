
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:30:38 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i sha256-sha256_transform_ tlx


// m6;   next: m14 (next offset: 14)
000000  1 0  "01001000000011100000000000001110"   // (R[14]) = lhi_const_1_B1 (14); 
000001  1 0  "00001000001000010000000100100100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (292,SP,SP); 
000002  1 0  "01010101110011100000000000001110"   // (R[14]) = w32_const_bor_1_B1 (R[14],14); 
000003  1 0  "01001000000011010000000000011001"   // (R[13]) = lhi_const_1_B1 (25); 
000004  1 0  "10111101110000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[14]); 
000005  1 0  "01010101101011010000000000011001"   // (R[13]) = w32_const_bor_1_B1 (R[13],25); 
000006  1 0  "10111101101000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[13]); 
000007  1 0  "00001000001011101111111011011100"   // (R[14],MC) = _pl_rd_res_reg_const_1_B1 (-292,SP); 
000008  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000009  1 0  "10111100000000000000000000010000"   // (LC) = wr_res_reg_const_1_B1 (16); 
000010  1 0  "10101000001010011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[9],SP,-4); 
000011  1 0  "10101000001010001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[8],SP,-8); 
000012  1 0  "01001000000011010000000000000000"   // (R[13]) = const_2_B3 (); 
000013  1 0  "01010101110011110000000000000000"   // R[15] = R[14]; 

// m14;   next: m19, loop target: m14 (next offset: 26)
000014  1 0  "00000000100001100000100000110001"   // (R[6],R[4]) = load__pl_const_3_B1 (R[4],DMb,DMb,DMb_stat); 
000015  1 0  "00000000100010000000100000110001"   // (R[8],R[4]) = load__pl_const_3_B1 (R[4],DMb,DMb,DMb_stat); 
000016  1 0  "00000000100010010000100000110001"   // (R[9],R[4]) = load__pl_const_3_B1 (R[4],DMb,DMb,DMb_stat); 
000017  1 0  "10001001000010000000000000010000"   // (R[8]) = _ls_const_7_B1 (R[8]); 
000018  1 0  "10001001001010010000000000001000"   // (R[9]) = _ls_const_8_B1 (R[9]); 
000019  1 0  "10001000110001100000000000011000"   // (R[6]) = _ls_const_6_B1 (R[6]); 
000020  1 0  "00000000110010000011000000001010"   // (R[6]) = _or_1_B1 (R[6],R[8]); 
000021  1 0  "00000000110010010011000000001010"   // (R[6]) = _or_1_B1 (R[6],R[9]); 
000022  1 0  "00000000100010010000100000110001"   // (R[9],R[4]) = load__pl_const_3_B1 (R[4],DMb,DMb,DMb_stat); 
000023  1 0  "00000000110010010011000000001010"   // (R[6]) = _or_2_B1 (R[6],R[9]); 
000024  1 0  "00000001111001100010000000110111"   // (R[15],DMb[-292]) = store__pl_const_1_B1 (R[6],R[15],DMb[-292]); 
000025  1 0  "00001001101011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[13]); 

// m19;   next: m62, jump target: m30 (next offset: 45)
000026  1 0  "10001001101001100000000000000010"   // (R[6]) = _ls_const_5_B1 (R[13]); 
000027  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 
000028  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000029  1 0  "10001001101010010000000000000010"   // (R[9]) = _ls_const_5_B1 (R[13]); 
000030  1 0  "00001000001011111111111011000000"   // (R[15],MC) = _pl_rd_res_reg_const_1_B1 (-320,SP); 
000031  1 0  "00001000001001001111111010100000"   // (R[4],MC) = _pl_rd_res_reg_const_1_B1 (-352,SP); 
000032  1 0  "00001000001010001111111010011100"   // (R[8],MC) = _pl_rd_res_reg_const_1_B1 (-356,SP); 
000033  1 0  "10101000001000101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[2],SP,-36); 
000034  1 0  "10101000001011001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[12],SP,-20); 
000035  1 0  "10101000001010111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[11],SP,-24); 
000036  1 0  "10101000001001111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[7],SP,-32); 
000037  1 0  "01110001101010100000000001000000"   // (R[10]) = _ge_const_1_B1 (R[13]); 
000038  1 0  "00000001001011100111000000000001"   // (R[14],) = _pl_1_B1 (R[14],R[9]); 
000039  1 0  "00000000110011110111100000000001"   // (R[15],) = _pl_1_B1 (R[15],R[6]); 
000040  1 0  "00000000100001100010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[6]); 
000041  1 0  "00000000110010000010100000000001"   // (R[5],) = _pl_1_B1 (R[8],R[6]); 
000042  1 0  "00100001010000000000000000100101"   // () = nez_br_const_1_B1 (R[10],37); 
000043  1 0  "00001000001010001111111011010100"   // (R[8],MC) = _pl_rd_res_reg_const_1_B1 (-300,SP); 
000044  1 0  "00000000110010000011100000000001"   // (R[7],) = _pl_1_B1 (R[8],R[6]); 

// m62;   next: m26 (next offset: 54)
000045  1 0  "01010100000010100000000001000000"   // (R[10]) = const_1_B2 (); 
000046  1 0  "00000001010011010110100000011000"   // (R[13],MC) = _mi_1_B1 (R[10],R[13]); 
000047  1 0  "01001000000000100000000000110110"   // (R[2]) = lhi_const_1_B1 (54); 
000048  1 0  "01001000000010110000000001010000"   // (R[11]) = lhi_const_1_B1 (80); 
000049  1 0  "01010100010000100000000000110110"   // (R[2]) = w32_const_bor_1_B1 (R[2],54); 
000050  1 0  "01010101011010100000000001010000"   // (R[10]) = w32_const_bor_1_B1 (R[11],80); 
000051  1 0  "10111101101000000000000000000000"   // (LC) = wr_res_reg_3_B1 (R[13]); 
000052  1 0  "10111100010000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[2]); 
000053  1 0  "10111101010000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[10]); 

// m26;   next: m63, loop target: m26 (next offset: 81)
000054  1 0  "00000000111011000010000000110100"   // (R[12],R[7]) = load__pl_const_2_B1 (R[7],DMb[-292]); 
000055  1 0  "10011101100011010000000000010001"   // (R[13]) = _rs_const_1_B1 (R[12]); 
000056  1 0  "10001001100010100000000000001111"   // (R[10]) = _ls_const_1_B1 (R[12]); 
000057  1 0  "00000001010011010110100000001010"   // (R[13]) = _or_1_B1 (R[13],R[10]); 
000058  1 0  "10011101100010100000000000010011"   // (R[10]) = _rs_const_2_B1 (R[12]); 
000059  1 0  "10001001100010110000000000001101"   // (R[11]) = _ls_const_2_B1 (R[12]); 
000060  1 0  "00000000100000100010000000110100"   // (R[2],R[4]) = load__pl_const_2_B1 (R[4],DMb[-292]); 
000061  1 0  "00000001010010110101000000001010"   // (R[10]) = _or_1_B1 (R[10],R[11]); 
000062  1 0  "10011100010010010000000000000111"   // (R[9]) = _rs_const_4_B1 (R[2]); 
000063  1 0  "10001000010010000000000000011001"   // (R[8]) = _ls_const_3_B1 (R[2]); 
000064  1 0  "10011100010010110000000000010010"   // (R[11]) = _rs_const_5_B1 (R[2]); 
000065  1 0  "10001000010001100000000000001110"   // (R[6]) = _ls_const_4_B1 (R[2]); 
000066  1 0  "00000001010011010110100000011010"   // (R[13]) = _er_1_B1 (R[13],R[10]); 
000067  1 0  "00000000110010110101000000001010"   // (R[10]) = _or_1_B1 (R[11],R[6]); 
000068  1 0  "10011101100011000000000000001010"   // (R[12]) = _rs_const_3_B1 (R[12]); 
000069  1 0  "00000001000010010100100000001010"   // (R[9]) = _or_1_B1 (R[9],R[8]); 
000070  1 0  "00000001111010110010000000110100"   // (R[11],R[15]) = load__pl_const_2_B1 (R[15],DMb[-292]); 
000071  1 0  "10011100010000100000000000000011"   // (R[2]) = _rs_const_6_B1 (R[2]); 
000072  1 0  "00000001100011010110100000011010"   // (R[13]) = _er_1_B1 (R[13],R[12]); 
000073  1 0  "00000001001010100101000000011010"   // (R[10]) = _er_1_B1 (R[9],R[10]); 
000074  1 0  "00000000010010100001000000011010"   // (R[2]) = _er_1_B1 (R[10],R[2]); 
000075  1 0  "00000001011011010110100000000001"   // (R[13],) = _pl_1_B1 (R[13],R[11]); 
000076  1 0  "00000000101010100010000000110100"   // (R[10],R[5]) = load__pl_const_2_B1 (R[5],DMb[-292]); 
000077  1 0  "00000000010011010001000000000001"   // (R[2],) = _pl_1_B1 (R[13],R[2]); 
000078  1 0  "00000000010010100001000000000001"   // (R[2],) = _pl_1_B1 (R[2],R[10]); 
000079  1 0  "00000001110000100010000000110111"   // (R[14],DMb[-292]) = store__pl_const_1_B1 (R[2],R[14],DMb[-292]); 
000080  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m63;   next: m60 (next offset: 81)

// m30;   next: m60 (next offset: 81)

// m60;   next: m40 (next offset: 101)
000081  1 0  "01001000000011010000000001100111"   // (R[13]) = lhi_const_1_B1 (103); 
000082  1 0  "01001000000011110000000001100101"   // (R[15]) = lhi_const_1_B1 (101); 
000083  1 0  "01010101101001110000000001100111"   // (R[7]) = w32_const_bor_1_B1 (R[13],103); 
000084  1 0  "01010101111011110000000001100101"   // (R[15]) = w32_const_bor_1_B1 (R[15],101); 
000085  1 0  "01001000000011100000000000000000"   // (R[14]) = lhi_const_1_B1 (0); 
000086  1 0  "10111101111000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[15]); 
000087  1 0  "10111100111000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[7]); 
000088  1 0  "01010000001011011111111111101000"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000089  1 0  "01010000001000101111111111111000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000090  1 0  "01010101110011100000000000000000"   // (R[14]) = w32_const_bor_1_B1 (R[14],0); 
000091  1 0  "10111100000000000000000001000000"   // (LC) = wr_res_reg_const_1_B1 (64); 
000092  1 0  "00000000000011010100100000001010"   // RG = R[13]; 
000093  1 0  "01010000001001111111111111111100"   // (RE) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000094  1 0  "00000000000000100011000000001010"   // RD = R[2]; 
000095  1 0  "01010000001001001111111111110100"   // (RB) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000096  1 0  "00001000001011111111111011011100"   // (R[15],MC) = _pl_rd_res_reg_const_1_B1 (-292,SP); 
000097  1 0  "01010000001010101111111111101100"   // (RH) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000098  1 0  "01010000001010001111111111100100"   // (RF) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000099  1 0  "01010000001001011111111111100000"   // (RC) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000100  1 0  "01010000001000111111111111110000"   // (RA) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m40;   next: m47, loop target: m40 (next offset: 104)
000101  1 0  "00000001110010110010000000110100"   // (R11,R[14]) = load__pl_const_1_B1 (R[14],DMb_stat); 
000102  1 0  "00000001111011000010000000110100"   // (R12,R[15]) = load__pl_const_2_B1 (R[15],DMb[-292]); 
000103  1 0  "00000000000000000000000000100101"   // (RA,RB,RC,RD,RE,RF,RG,RH) = sha256_ci_1_B1 (RA,RB,RC,RD,RE,RF,RG,RH,R11,R12); 

// m47 (next offset: /)
000104  1 0  "00000001001011010101100000000001"   // (R[11],) = _pl_1_B1 (R[13],RG); 
000105  1 0  "01010000001011101111111111101100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000106  1 0  "00000001010011100110000000000001"   // (R[12],) = _pl_1_B1 (R[14],RH); 
000107  1 0  "01010000001011011111111111100100"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000108  1 0  "00000001000011010101000000000001"   // (R[10],) = _pl_1_B1 (R[13],RF); 
000109  1 0  "01010000001011101111111111111100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000110  1 0  "00000000010001100100000000000001"   // (R[8],) = _pl_1_B1 (R[2],RD); 
000111  1 0  "00000000111011100100100000000001"   // (R[9],) = _pl_1_B1 (R[14],RE); 
000112  1 0  "01010000001011111111111111100000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000113  1 0  "01010000001011011111111111110100"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000114  1 0  "00000000100011010011000000000001"   // (R[6],) = _pl_1_B1 (R[13],RB); 
000115  1 0  "00000000101011110011100000000001"   // (R[7],) = _pl_1_B1 (R[15],RC); 
000116  1 0  "01010000001000101111111111011100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000117  1 0  "01010000001011101111111111110000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000118  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000119  1 0  "00000000011011100010100000000001"   // (R[5],) = _pl_1_B1 (R[14],RA); 
000120  1 0  "00001000001000011111111011011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-292,SP,SP); 

