
// File generated by darts version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:34:51 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// darts -B -I../lib +p -d -h -I../lib/runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -L +Ihex +u Release/sha256 tlx

// Release: ipd N-2018.03-SP3
.label _main_init
.function _main_init _main_init
.src_ref 0 "tlx_init.s" 5 first
	     0      "01001000000000010000000000000000" // 	lhi r1, #0
.src_ref 0 "tlx_init.s" 6 first
	     1      "01010100001000011000000000000000" // 	ori r1,r1,#32768
.src_ref 0 "tlx_init.s" 7 first
	     2      "00000000000000000000000000000000" // 	nop
.label _main
.function main _main
.src_ref 1 "sha256.c" 189 first
.src_ref 1 "sha256.c" 189 4
	     3      "00001000001000010000000001101100" // 	addi r1,r1,#108
	     4      "01001000000001000000000000000000" // 	lhi r4, #0
	     5      "01010100100001000000000100000100" // 	ori r4,r4,#260
	     6      "10101000001000101111111111111100" // 	sw r2,-4(r1)
	     7      "10101000001001001111111111111000" // 	sw r4,-8(r1)
.src_ref 1 "sha256.c" 195 9 first
.no_stack_arguments
	     8      "00101000000000000000000111001110" // 	jal #462
.delay_slot
.swstall delay_slot
	     9      "00000000000000000000000000000000" // 	nop
.src_ref 1 "sha256.c" 191 17 first
.return_address
	    10      "00001000001001101111111111011000" // 	addi r6,r1,#-40
.src_ref 1 "sha256.c" 196 20
	    11      "01010100011001010000000000000000" // 	ori r5,r3,#0
.src_ref 1 "sha256.c" 196 3 first
.no_stack_arguments
	    12      "00101000000000000000000010000110" // 	jal #134
.src_ref 1 "sha256.c" 196 10
.delay_slot
	    13      "01010000001001001111111111111000" // 	lw r4,-8(r1)
.return_address
	    14      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 1 "sha256.c" 198 3 first
	    15      "00101000000000000000000110010011" // 	jal #403
.delay_slot
	    16      "01010100100001000000110110101011" // 	ori r4,r4,#3499
.src_ref 1 "sha256.c" 199 3 first
.return_address
.no_stack_arguments
	    17      "00101000000000000000000101000011" // 	jal #323
.src_ref 1 "sha256.c" 191 17
.delay_slot
	    18      "00001000001001001111111111011000" // 	addi r4,r1,#-40
.src_ref 1 "sha256.c" 191 17
.return_address
	    19      "00001000001001001111111111011000" // 	addi r4,r1,#-40
.src_ref 1 "sha256.c" 201 3 first
.no_stack_arguments
	    20      "00101000000000000000000101011001" // 	jal #345
.src_ref 1 "sha256.c" 193 8 first
.src_ref 1 "sha256.c" 191 17
.delay_slot
	    21      "00001000001001011111111110010110" // 	addi r5,r1,#-106
.return_address
	    22      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 1 "sha256.c" 203 3 first
	    23      "00101000000000000000000110001011" // 	jal #395
.delay_slot
	    24      "01010100100001000000110110101001" // 	ori r4,r4,#3497
.src_ref 1 "sha256.c" 193 8
.src_ref 1 "sha256.c" 191 17
.return_address
	    25      "00001000001001001111111110010110" // 	addi r4,r1,#-106
	    26      "01001000000000110000000000000000" // 	lhi r3, #0
.src_ref 1 "sha256.c" 204 7 first
.no_stack_arguments
	    27      "00101000000000000000000110011110" // 	jal #414
.delay_slot
	    28      "01010100011001010000110101100011" // 	ori r5,r3,#3427
.src_ref 1 "sha256.c" 204 36
.src_ref 1 "sha256.c" 204 3
.return_address
	    29      "00010100011000000000000000000110" // 	beqz r3,#6
.delay_slot
.swstall delay_slot
	    30      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	    31      "00000000000000000000000000000000" // 	nop
	    32      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 1 "sha256.c" 207 6 first
	    33      "00101000000000000000000110000001" // 	jal #385
.delay_slot
	    34      "01010100100001000000110111100000" // 	ori r4,r4,#3552
.return_address
	    35      "00100100000000000000000000000100" // 	j #4
.delay_slot
.swstall delay_slot
	    36      "00000000000000000000000000000000" // 	nop
	    37      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 1 "sha256.c" 205 6 first
	    38      "00101000000000000000000101111100" // 	jal #380
.delay_slot
	    39      "01010100100001000000110111000110" // 	ori r4,r4,#3526
.src_ref 1 "sha256.c" 209 3
.return_address
	    40      "01010000001001001111111111111100" // 	lw r4,-4(r1)
.src_ref 1 "sha256.c" 209 3 first
.end_of_main
.rts 172
	    41      "00110000100000000000000000000000" // 	jr r4
.src_ref 1 "sha256.c" 204 39
.delay_slot
	    42      "01001000000000110000000000000000" // 	lhi r3, #0
.src_ref 1 "sha256.c" 209 3
.delay_slot
	    43      "00001000001000011111111110010100" // 	addi r1,r1,#-108
.label void_sha256_transform___P__uchar_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint
.function sha256_transform void_sha256_transform___P__uchar_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint_R__uint
.src_ref 1 "sha256.c" 34 first
	    44      "01001000000011010000000000000000" // 	lhi r13, #0
	    45      "01001000000011100000000000000000" // 	lhi r14, #0
.src_ref 1 "sha256.c" 34 5
	    46      "00001000001000010000000100100000" // 	addi r1,r1,#288
	    47      "01010101101011010000000001001000" // 	ori r13,r13,#72
	    48      "01010101110011100000000001000000" // 	ori r14,r14,#64
.src_ref 1 "sha256.c" 40 3 first
	    49      "10111101101000100000000000000000" // 	bor le,r13,#0
.src_ref 1 "sha256.c" 40 3
	    50      "10111101110000010000000000000000" // 	bor ls,r14,#0
	    51      "10101000001001111111111111101000" // 	sw r7,-24(r1)
.src_ref 1 "sha256.c" 38 41 first
	    52      "00001000001011011111111011100000" // 	addi r13,r1,#-288
.src_ref 1 "sha256.c" 42 34
	    53      "01010100100011100000000000000000" // 	ori r14,r4,#0
.src_ref 1 "sha256.c" 40 3
	    54      "10111100000000000000000000010000" // 	bor lc,r0,#16
	    55      "10101000001011001111111111111100" // 	sw r12,-4(r1)
	    56      "10101000001010111111111111111000" // 	sw r11,-8(r1)
	    57      "10101000001010101111111111110100" // 	sw r10,-12(r1)
	    58      "10101000001010011111111111110000" // 	sw r9,-16(r1)
	    59      "10101000001010001111111111101100" // 	sw r8,-20(r1)
	    60      "10101000001001101111111111100100" // 	sw r6,-28(r1)
	    61      "10101000001001011111111111100000" // 	sw r5,-32(r1)
.src_ref 1 "sha256.c" 40 9
	    62      "01001000000001110000000000000000" // 	lhi r7, #0
.src_ref 1 "sha256.c" 42 13
	    63      "01010101101011110000000000000000" // 	ori r15,r13,#0
.src_ref 1 "sha256.c" 42 34 first
.begin_of_loop
	    64      "00000001110000110000100000110001" // 	lbu r3,(r14+=1)
.src_ref 1 "sha256.c" 42 43
	    65      "00000001110001000000100000110001" // 	lbu r4,(r14+=1)
.src_ref 1 "sha256.c" 42 54
	    66      "00000001110001010000100000110001" // 	lbu r5,(r14+=1)
.src_ref 1 "sha256.c" 40 25
	    67      "01010100111010000000000000000000" // 	ori r8,r7,#0
.src_ref 1 "sha256.c" 42 65
	    68      "00000001110001100000100000110001" // 	lbu r6,(r14+=1)
.src_ref 1 "sha256.c" 42 19
	    69      "00000000000000000000000000100111" // 	RE sha256_in2,r3,r4,r5,r6
.src_ref 1 "sha256.c" 42 13
	    70      "00000001111001110010000000110111" // 	sw r7,(r15+=4)
.src_ref 1 "sha256.c" 40 25
	    71      "01010101000001000000000000000000" // 	ori r4,r8,#0
.src_ref 1 "sha256.c" 40 25
.end_of_loop
	    72      "00001000100001110000000000000001" // 	addi r7,r4,#1
	    73      "10001000111001010000000000000010" // 	slli r5,r7,#2
	    74      "10001000111010000000000000000010" // 	slli r8,r7,#2
.src_ref 1 "sha256.c" 50 47
.src_ref 1 "sha256.c" 38 41
	    75      "00001000001011111111111010100100" // 	addi r15,r1,#-348
.src_ref 1 "sha256.c" 50 56
.src_ref 1 "sha256.c" 38 41
	    76      "00001000001010011111111010100000" // 	addi r9,r1,#-352
.src_ref 1 "sha256.c" 48 3 first
	    77      "01110000111001100000000001000000" // 	sgeui r6,r7,#64
	    78      "00000001000011010100000000000001" // 	add r8,r8,r13
	    79      "00000000101011110111100000000001" // 	add r15,r5,r15
	    80      "00000000101010010100100000000001" // 	add r9,r5,r9
.src_ref 1 "sha256.c" 50 31
.src_ref 1 "sha256.c" 38 41
	    81      "00001000001001001111111011011000" // 	addi r4,r1,#-296
.src_ref 1 "sha256.c" 50 39
.src_ref 1 "sha256.c" 38 41
	    82      "00001000001011101111111011000100" // 	addi r14,r1,#-316
.src_ref 1 "sha256.c" 48 3
	    83      "00100000110000000000000000010110" // 	bnez r6,#22
.delay_slot
	    84      "00000000101011100111000000000001" // 	add r14,r5,r14
.delay_slot
	    85      "00000000100001010001100000000001" // 	add r3,r4,r5
.src_ref 1 "sha256.c" 48 3
	    86      "01010100000001100000000001000000" // 	ori r6,r0,#64
	    87      "00000000110001110011000000011000" // 	sub r6,r6,r7
	    88      "01001000000001010000000000000000" // 	lhi r5, #0
	    89      "01001000000001000000000000000000" // 	lhi r4, #0
	    90      "01010100101001010000000001011111" // 	ori r5,r5,#95
	    91      "01010100100001110000000001100111" // 	ori r7,r4,#103
.src_ref 1 "sha256.c" 48 3
	    92      "10111100110000000000000000000000" // 	bor lc,r6,#0
.src_ref 1 "sha256.c" 48 3
	    93      "10111100101000010000000000000000" // 	bor ls,r5,#0
.src_ref 1 "sha256.c" 48 3
	    94      "10111100111000100000000000000000" // 	bor le,r7,#0
.src_ref 1 "sha256.c" 50 31
.begin_of_loop
	    95      "01010100011001110000000000000000" // 	ori r7,r3,#0
.src_ref 1 "sha256.c" 50 39 first
	    96      "00000001110001000010000000110100" // 	lw r4,(r14+=4)
.src_ref 1 "sha256.c" 50 31
	    97      "00000000111000110010000000110100" // 	lw r3,(r7+=4)
.src_ref 1 "sha256.c" 50 31
	    98      "01010100111010100000000000000000" // 	ori r10,r7,#0
.src_ref 1 "sha256.c" 50 47
	    99      "00000001111001010010000000110100" // 	lw r5,(r15+=4)
.src_ref 1 "sha256.c" 50 56
	   100      "00000001001001100010000000110100" // 	lw r6,(r9+=4)
.src_ref 1 "sha256.c" 50 19
	   101      "00000000000000000000000000100110" // 	RE sha256_in1,r3,r4,r5,r6
.src_ref 1 "sha256.c" 50 13
	   102      "00000001000001110010000000110111" // 	sw r7,(r8+=4)
.src_ref 1 "sha256.c" 50 31
.end_of_loop
	   103      "01010101010000110000000000000000" // 	ori r3,r10,#0
.src_ref 1 "sha256.c" 68 8
	   104      "01010000001010001111111111110100" // 	lw r8,-12(r1)
	   105      "00100100000000000000000000000011" // 	j #3
.src_ref 1 "sha256.c" 68 8
.delay_slot
	   106      "01010000001010011111111111111000" // 	lw r9,-8(r1)
.src_ref 1 "sha256.c" 68 8
	   107      "01010000001010011111111111111000" // 	lw r9,-8(r1)
.src_ref 1 "sha256.c" 68 8
	   108      "01010000001010001111111111110100" // 	lw r8,-12(r1)
	   109      "01001000000010100000000000000000" // 	lhi r10, #0
	   110      "01010101010010100000000001111100" // 	ori r10,r10,#124
	   111      "01001000000011110000000000000000" // 	lhi r15, #0
	   112      "01001000000011100000000000000000" // 	lhi r14, #0
.src_ref 1 "sha256.c" 65 3 first
	   113      "10111101010000010000000000000000" // 	bor ls,r10,#0
	   114      "01010101111011110000000001111110" // 	ori r15,r15,#126
	   115      "01010101110011100000000000000100" // 	ori r14,r14,#4
.src_ref 1 "sha256.c" 65 3
	   116      "10111100000000000000000001000000" // 	bor lc,r0,#64
.src_ref 1 "sha256.c" 65 3
	   117      "10111101111000100000000000000000" // 	bor le,r15,#0
.src_ref 1 "sha256.c" 68 8
	   118      "01010000001001111111111111110000" // 	lw r7,-16(r1)
.src_ref 1 "sha256.c" 68 8
	   119      "01010000001001101111111111101100" // 	lw r6,-20(r1)
.src_ref 1 "sha256.c" 68 8
	   120      "01010000001001011111111111101000" // 	lw r5,-24(r1)
.src_ref 1 "sha256.c" 68 8
	   121      "01010000001001001111111111100100" // 	lw r4,-28(r1)
.src_ref 1 "sha256.c" 68 8
	   122      "01010000001000111111111111100000" // 	lw r3,-32(r1)
.src_ref 1 "sha256.c" 68 8
	   123      "01010000001010101111111111111100" // 	lw r10,-4(r1)
.src_ref 1 "sha256.c" 68 43 first
.begin_of_loop
	   124      "00000001110010110010000000110100" // 	lw r11,(r14+=4)
.src_ref 1 "sha256.c" 68 49
	   125      "00000001101011000010000000110100" // 	lw r12,(r13+=4)
.src_ref 1 "sha256.c" 68 8
.end_of_loop
	   126      "00000000000000000000000000100101" // 	sha256ci,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12
.src_ref 1 "sha256.c" 92 6
	   127      "01010000001011011111111111111100" // 	lw r13,-4(r1)
.src_ref 1 "sha256.c" 92 6 first
	   128      "00000001010011010110000000000001" // 	add r12,r10,r13
.src_ref 1 "sha256.c" 91 6
	   129      "01010000001011101111111111111000" // 	lw r14,-8(r1)
.src_ref 1 "sha256.c" 91 6 first
	   130      "00000001001011100101100000000001" // 	add r11,r9,r14
.src_ref 1 "sha256.c" 89 6
	   131      "01010000001011011111111111110000" // 	lw r13,-16(r1)
.src_ref 1 "sha256.c" 89 6 first
	   132      "00000000111011010100100000000001" // 	add r9,r7,r13
.src_ref 1 "sha256.c" 90 6
	   133      "01010000001011101111111111110100" // 	lw r14,-12(r1)
.src_ref 1 "sha256.c" 90 6 first
	   134      "00000001000011100101000000000001" // 	add r10,r8,r14
.src_ref 1 "sha256.c" 85 6
	   135      "01010000001001111111111111100000" // 	lw r7,-32(r1)
.src_ref 1 "sha256.c" 87 6
	   136      "01010000001011111111111111101000" // 	lw r15,-24(r1)
.src_ref 1 "sha256.c" 85 6
	   137      "01010100111010000000000000000000" // 	ori r8,r7,#0
.src_ref 1 "sha256.c" 87 6 first
	   138      "00000000101011110011100000000001" // 	add r7,r5,r15
.src_ref 1 "sha256.c" 88 6
	   139      "01010000001011011111111111101100" // 	lw r13,-20(r1)
.src_ref 1 "sha256.c" 86 6
	   140      "01010000001011101111111111100100" // 	lw r14,-28(r1)
.src_ref 1 "sha256.c" 85 6
	   141      "01010101000001010000000000000000" // 	ori r5,r8,#0
.src_ref 1 "sha256.c" 93 first
	   142      "00001000001000011111111011100000" // 	addi r1,r1,#-288
.src_ref 1 "sha256.c" 85 6 first
	   143      "00000000011001010010100000000001" // 	add r5,r3,r5
.src_ref 1 "sha256.c" 93 first
.rts 172
	   144      "00110000010000000000000000000000" // 	jr r2
.src_ref 1 "sha256.c" 88 6 first
.delay_slot
	   145      "00000000110011010100000000000001" // 	add r8,r6,r13
.src_ref 1 "sha256.c" 86 6 first
.delay_slot
	   146      "00000000100011100011000000000001" // 	add r6,r4,r14
.label void_sha256___P__uchar___uint___P__uchar
.function sha256 void_sha256___P__uchar___uint___P__uchar
.src_ref 1 "sha256.c" 95 first
.src_ref 1 "sha256.c" 95 5
	   147      "00001000001000010000000001101100" // 	addi r1,r1,#108
	   148      "01001000000010101011101101100111" // 	lhi r10, #-17561
	   149      "10101000001001101111111111110100" // 	sw r6,-12(r1)
	   150      "10101000001001011111111111111000" // 	sw r5,-8(r1)
	   151      "10101000001001011111111111111100" // 	sw r5,-4(r1)
	   152      "01001000000000110110101000001001" // 	lhi r3, #27145
	   153      "01010101010001101010111010000101" // 	ori r6,r10,#44677
	   154      "01001000000001110011110001101110" // 	lhi r7, #15470
	   155      "01001000000010001010010101001111" // 	lhi r8, #-23217
	   156      "01001000000010010101000100001110" // 	lhi r9, #20750
	   157      "01001000000011001001101100000101" // 	lhi r12, #-25851
	   158      "01001000000010110001111110000011" // 	lhi r11, #8067
.src_ref 1 "sha256.c" 114 19
	   159      "01010100101011100000000000000000" // 	ori r14,r5,#0
	   160      "10101000001000101111111111110000" // 	sw r2,-16(r1)
	   161      "01010100011001011110011001100111" // 	ori r5,r3,#58983
	   162      "01010100111001111111001101110010" // 	ori r7,r7,#62322
	   163      "01010101000010001111010100111010" // 	ori r8,r8,#62778
	   164      "01010101001010010101001001111111" // 	ori r9,r9,#21119
	   165      "01010101100010100110100010001100" // 	ori r10,r12,#26764
	   166      "01010101011010111101100110101011" // 	ori r11,r11,#55723
	   167      "01001000000011010101101111100000" // 	lhi r13, #23520
	   168      "00100100000000000000000000001001" // 	j #9
.delay_slot
	   169      "01010101101011001100110100011001" // 	ori r12,r13,#52505
	   170      "10101000001001001111111111101100" // 	sw r4,-20(r1)
.src_ref 1 "sha256.c" 115 7 first
.no_stack_arguments
	   171      "00101011111111111111111110000000" // 	jal #-128
.delay_slot
.swstall delay_slot
	   172      "00000000000000000000000000000000" // 	nop
.return_address
	   173      "01010000001001001111111111111000" // 	lw r4,-8(r1)
	   174      "00001000100011101111111111000000" // 	addi r14,r4,#-64
	   175      "01010000001001001111111111101100" // 	lw r4,-20(r1)
	   176      "00001000100001000000000001000000" // 	addi r4,r4,#64
	   177      "10101000001011101111111111111000" // 	sw r14,-8(r1)
.src_ref 1 "sha256.c" 114 19 first
	   178      "01110001110000110000000001000000" // 	sgeui r3,r14,#64
.src_ref 1 "sha256.c" 114 3
	   179      "00100000011000001111111111110101" // 	bnez r3,#-11
.delay_slot
.swstall delay_slot
	   180      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	   181      "00000000000000000000000000000000" // 	nop
.src_ref 1 "sha256.c" 123 6
.src_ref 1 "sha256.c" 121 15
.src_ref 1 "sha256.c" 131 6
	   182      "01010000001011101111111111111000" // 	lw r14,-8(r1)
.src_ref 1 "sha256.c" 121 15 first
	   183      "10010001110011010000000000111000" // 	sltui r13,r14,#56
.src_ref 1 "sha256.c" 121 3
	   184      "00100001101000000000000000110010" // 	bnez r13,#50
.src_ref 1 "sha256.c" 122 19
.delay_slot
	   185      "01001000000000110000000000000000" // 	lhi r3, #0
.src_ref 1 "sha256.c" 123 6 first
.delay_slot
	   186      "00000001110000000001000000010001" // 	sleu r2,r14,r0
.src_ref 1 "sha256.c" 132 21
	   187      "01010100100011110000000000000000" // 	ori r15,r4,#0
.src_ref 1 "sha256.c" 131 6 first
	   188      "00100000010000000000000000001101" // 	bnez r2,#13
.src_ref 1 "sha256.c" 98 15 first
.delay_slot
	   189      "00001000001001001111111110010100" // 	addi r4,r1,#-108
.src_ref 1 "sha256.c" 133 9
.delay_slot
	   190      "01010100100011010000000000000000" // 	ori r13,r4,#0
	   191      "01001000000011010000000000000000" // 	lhi r13, #0
	   192      "01001000000000110000000000000000" // 	lhi r3, #0
	   193      "01010101101011010000000011001000" // 	ori r13,r13,#200
	   194      "01010100011000110000000011001010" // 	ori r3,r3,#202
.src_ref 1 "sha256.c" 131 6
	   195      "10111101101000010000000000000000" // 	bor ls,r13,#0
.src_ref 1 "sha256.c" 131 6
	   196      "10111100011000100000000000000000" // 	bor le,r3,#0
.src_ref 1 "sha256.c" 131 6
	   197      "10111101110000000000000000000000" // 	bor lc,r14,#0
.src_ref 1 "sha256.c" 122 19 first
	   198      "01001000000000110000000000000000" // 	lhi r3, #0
.src_ref 1 "sha256.c" 132 13
	   199      "01010100100011010000000000000000" // 	ori r13,r4,#0
.src_ref 1 "sha256.c" 132 21 first
.begin_of_loop
	   200      "00000001111011100000100000110001" // 	lbu r14,(r15+=1)
.src_ref 1 "sha256.c" 132 13
	   201      "00000001101011100000100000110101" // 	sb r14,(r13+=1)
.src_ref 1 "sha256.c" 132 15
.end_of_loop
	   202      "00001000011000110000000000000001" // 	addi r3,r3,#1
.src_ref 1 "sha256.c" 133 11 first
	   203      "00001000011011100000000000000001" // 	addi r14,r3,#1
.src_ref 1 "sha256.c" 134 6 first
	   204      "01110001110011110000000001000000" // 	sgeui r15,r14,#64
.src_ref 1 "sha256.c" 125 15
	   205      "01010100000000100000000010000000" // 	ori r2,r0,#128
.src_ref 1 "sha256.c" 134 6
	   206      "00100001111000000000000000001100" // 	bnez r15,#12
.delay_slot
	   207      "00000000100011100001100000000001" // 	add r3,r4,r14
.src_ref 1 "sha256.c" 133 9 first
.delay_slot
	   208      "01011101101000100000000000000000" // 	sb r2,0(r13)
.src_ref 1 "sha256.c" 114 3
	   209      "01010100000011110000000001000000" // 	ori r15,r0,#64
	   210      "00000001111011100111000000011000" // 	sub r14,r15,r14
	   211      "01001000000011010000000000000000" // 	lhi r13, #0
	   212      "01001000000000100000000000000000" // 	lhi r2, #0
	   213      "01010101101011010000000011011011" // 	ori r13,r13,#219
	   214      "01010100010011110000000011011011" // 	ori r15,r2,#219
.src_ref 1 "sha256.c" 134 6 first
	   215      "10111101110000000000000000000000" // 	bor lc,r14,#0
.src_ref 1 "sha256.c" 134 6
	   216      "10111101101000010000000000000000" // 	bor ls,r13,#0
.src_ref 1 "sha256.c" 134 6
	   217      "10111101111000100000000000000000" // 	bor le,r15,#0
.swstall sha_n_L83
	   218      "00000000000000000000000000000000" // 	nop
.src_ref 1 "sha256.c" 135 12 first
.end_of_loop
.begin_of_loop
	   219      "00000000011000000000100000110101" // 	sb r0,(r3+=1)
.src_ref 1 "sha256.c" 136 6 first
.no_stack_arguments
	   220      "00101011111111111111111101001111" // 	jal #-177
.delay_slot
.swstall delay_slot
	   221      "00000000000000000000000000000000" // 	nop
.return_address
	   222      "10101000001001101111111111010100" // 	sw r6,-44(r1)
	   223      "10101000001011001111111111100000" // 	sw r12,-32(r1)
	   224      "10101000001010111111111111111000" // 	sw r11,-8(r1)
	   225      "10101000001010101111111111101100" // 	sw r10,-20(r1)
	   226      "10101000001010011111111111011100" // 	sw r9,-36(r1)
	   227      "10101000001010001111111111101000" // 	sw r8,-24(r1)
	   228      "10101000001001111111111111100100" // 	sw r7,-28(r1)
	   229      "10101000001001011111111111011000" // 	sw r5,-40(r1)
.src_ref 1 "sha256.c" 98 15
	   230      "00001000001001001111111110010100" // 	addi r4,r1,#-108
.src_ref 1 "sha256.c" 121 15
	   231      "01010100000001100000000000111000" // 	ori r6,r0,#56
.src_ref 1 "sha256.c" 137 6 first
.no_stack_arguments
	   232      "00101000000000000000000011011101" // 	jal #221
.src_ref 1 "sha256.c" 122 19
.delay_slot
	   233      "01001000000001010000000000000000" // 	lhi r5, #0
.return_address
	   234      "00100100000000000000000000101101" // 	j #45
.src_ref 1 "sha256.c" 141 35
.delay_slot
	   235      "01010000001001101111111111111100" // 	lw r6,-4(r1)
	   236      "10101000001010111111111111111000" // 	sw r11,-8(r1)
	   237      "10101000001010101111111111101100" // 	sw r10,-20(r1)
	   238      "10101000001010001111111111101000" // 	sw r8,-24(r1)
.src_ref 1 "sha256.c" 98 15
	   239      "00001000001011011111111110010100" // 	addi r13,r1,#-108
.src_ref 1 "sha256.c" 123 6 first
	   240      "00100000010000000000000000001100" // 	bnez r2,#12
.delay_slot
	   241      "10101000001001111111111111100100" // 	sw r7,-28(r1)
.src_ref 1 "sha256.c" 125 9
.delay_slot
	   242      "01010101101001110000000000000000" // 	ori r7,r13,#0
	   243      "01001000000001110000000000000000" // 	lhi r7, #0
	   244      "01001000000010000000000000000000" // 	lhi r8, #0
	   245      "01010100111001110000000011111101" // 	ori r7,r7,#253
.src_ref 1 "sha256.c" 123 6
	   246      "10111100111000100000000000000000" // 	bor le,r7,#0
	   247      "01010101000010000000000011111011" // 	ori r8,r8,#251
.src_ref 1 "sha256.c" 123 6
	   248      "10111101110000000000000000000000" // 	bor lc,r14,#0
.src_ref 1 "sha256.c" 123 6
	   249      "10111101000000010000000000000000" // 	bor ls,r8,#0
.src_ref 1 "sha256.c" 124 13
	   250      "01010101101001110000000000000000" // 	ori r7,r13,#0
.src_ref 1 "sha256.c" 124 21 first
.begin_of_loop
	   251      "00000000100010000000100000110001" // 	lbu r8,(r4+=1)
.src_ref 1 "sha256.c" 124 13
	   252      "00000000111010000000100000110101" // 	sb r8,(r7+=1)
.src_ref 1 "sha256.c" 124 15
.end_of_loop
	   253      "00001000011000110000000000000001" // 	addi r3,r3,#1
	   254      "10101000001011001111111111100000" // 	sw r12,-32(r1)
.src_ref 1 "sha256.c" 125 11 first
	   255      "00001000011011000000000000000001" // 	addi r12,r3,#1
	   256      "10101000001001011111111111011000" // 	sw r5,-40(r1)
.src_ref 1 "sha256.c" 126 6 first
	   257      "01110001100010000000000000111000" // 	sgeui r8,r12,#56
	   258      "10101000001010011111111111011100" // 	sw r9,-36(r1)
.src_ref 1 "sha256.c" 125 15
	   259      "01010100000010100000000010000000" // 	ori r10,r0,#128
.src_ref 1 "sha256.c" 121 15
	   260      "01010100000001010000000000111000" // 	ori r5,r0,#56
.src_ref 1 "sha256.c" 126 6
	   261      "00100001000000000000000000001110" // 	bnez r8,#14
.src_ref 1 "sha256.c" 125 9 first
.delay_slot
	   262      "01011100111010100000000000000000" // 	sb r10,0(r7)
.delay_slot
	   263      "00000001100011010101100000000001" // 	add r11,r12,r13
	   264      "00000000101011000010100000011000" // 	sub r5,r5,r12
	   265      "01001000000010010000000000000000" // 	lhi r9, #0
	   266      "01001000000001110000000000000000" // 	lhi r7, #0
	   267      "01010101001010010000000100010001" // 	ori r9,r9,#273
	   268      "01010100111011000000000100010001" // 	ori r12,r7,#273
.src_ref 1 "sha256.c" 126 6 first
	   269      "10111100101000000000000000000000" // 	bor lc,r5,#0
.src_ref 1 "sha256.c" 126 6
	   270      "10111101001000010000000000000000" // 	bor ls,r9,#0
.src_ref 1 "sha256.c" 126 6
	   271      "10111101100000100000000000000000" // 	bor le,r12,#0
.swstall sha_n_L83
	   272      "00000000000000000000000000000000" // 	nop
.src_ref 1 "sha256.c" 127 13 first
.end_of_loop
.begin_of_loop
	   273      "00000001011000000000100000110101" // 	sb r0,(r11+=1)
	   274      "10101000001001101111111111010100" // 	sw r6,-44(r1)
	   275      "00100100000000000000000000000100" // 	j #4
.src_ref 1 "sha256.c" 141 35
.delay_slot
	   276      "01010000001001101111111111111100" // 	lw r6,-4(r1)
	   277      "10101000001001101111111111010100" // 	sw r6,-44(r1)
.swstall dm_addr_conflict
	   278      "00000000000000000000000000000000" // 	nop
.src_ref 1 "sha256.c" 141 35
	   279      "01010000001001101111111111111100" // 	lw r6,-4(r1)
.src_ref 1 "sha256.c" 141 35 first
	   280      "10001000110001100000000000000011" // 	slli r6,r6,#3
.src_ref 1 "sha256.c" 144 20 first
	   281      "10011100110001010000000000001000" // 	srli r5,r6,#8
.src_ref 1 "sha256.c" 143 6 first
.src_ref 1 "sha256.c" 143 11 first
	   282      "01011100001001101111111111010011" // 	sb r6,-45(r1)
.src_ref 1 "sha256.c" 145 20 first
	   283      "10011100110010010000000000010000" // 	srli r9,r6,#16
.src_ref 1 "sha256.c" 144 6 first
.src_ref 1 "sha256.c" 144 11 first
	   284      "01011100001001011111111111010010" // 	sb r5,-46(r1)
.src_ref 1 "sha256.c" 145 6 first
.src_ref 1 "sha256.c" 145 11 first
	   285      "01011100001010011111111111010001" // 	sb r9,-47(r1)
.src_ref 1 "sha256.c" 146 20 first
	   286      "10011100110001100000000000011000" // 	srli r6,r6,#24
.src_ref 1 "sha256.c" 146 6
	   287      "01011100001001101111111111010000" // 	sb r6,-48(r1)
.src_ref 1 "sha256.c" 147 6 first
	   288      "01011100001000001111111111001111" // 	sb r0,-49(r1)
.src_ref 1 "sha256.c" 148 6 first
	   289      "01011100001000001111111111001110" // 	sb r0,-50(r1)
.src_ref 1 "sha256.c" 149 6 first
	   290      "01011100001000001111111111001101" // 	sb r0,-51(r1)
.src_ref 1 "sha256.c" 150 6 first
	   291      "01011100001000001111111111001100" // 	sb r0,-52(r1)
.src_ref 1 "sha256.c" 98 15
	   292      "00001000001001001111111110010100" // 	addi r4,r1,#-108
.src_ref 1 "sha256.c" 151 38
	   293      "01010000001011001111111111100000" // 	lw r12,-32(r1)
.src_ref 1 "sha256.c" 151 36
	   294      "01010000001010111111111111111000" // 	lw r11,-8(r1)
.src_ref 1 "sha256.c" 151 34
	   295      "01010000001010101111111111101100" // 	lw r10,-20(r1)
.src_ref 1 "sha256.c" 151 32
	   296      "01010000001010011111111111011100" // 	lw r9,-36(r1)
.src_ref 1 "sha256.c" 151 30
	   297      "01010000001010001111111111101000" // 	lw r8,-24(r1)
.src_ref 1 "sha256.c" 151 28
	   298      "01010000001001111111111111100100" // 	lw r7,-28(r1)
.src_ref 1 "sha256.c" 151 24
	   299      "01010000001001011111111111011000" // 	lw r5,-40(r1)
.src_ref 1 "sha256.c" 151 3 first
.no_stack_arguments
	   300      "00101011111111111111111011111111" // 	jal #-257
.src_ref 1 "sha256.c" 151 26
.delay_slot
	   301      "01010000001001101111111111010100" // 	lw r6,-44(r1)
.return_address
	   302      "01001000000000110000000000000000" // 	lhi r3, #0
	   303      "01001000000001000000000000000000" // 	lhi r4, #0
	   304      "01010100011000110000000100110111" // 	ori r3,r3,#311
	   305      "01010100100001000000000101010000" // 	ori r4,r4,#336
.src_ref 1 "sha256.c" 155 3 first
	   306      "10111100011000010000000000000000" // 	bor ls,r3,#0
.src_ref 1 "sha256.c" 155 3
	   307      "10111100100000100000000000000000" // 	bor le,r4,#0
.src_ref 1 "sha256.c" 155 3
	   308      "10111100000000000000000000000100" // 	bor lc,r0,#4
.src_ref 1 "sha256.c" 156 10
	   309      "01010000001001001111111111110100" // 	lw r4,-12(r1)
.src_ref 1 "sha256.c" 146 23
	   310      "01010100000000110000000000011000" // 	ori r3,r0,#24
.src_ref 1 "sha256.c" 156 22 first
.begin_of_loop
	   311      "00000000101000110111000000010111" // 	srl r14,r5,r3
.src_ref 1 "sha256.c" 156 35
	   312      "00010001110011100000000011111111" // 	andi r14,r14,#255
.src_ref 1 "sha256.c" 157 22 first
	   313      "00000000110000110110100000010111" // 	srl r13,r6,r3
.src_ref 1 "sha256.c" 156 10 first
	   314      "00000000100011100010000000110101" // 	sb r14,(r4+=4)
.src_ref 1 "sha256.c" 157 35 first
	   315      "00010001101011010000000011111111" // 	andi r13,r13,#255
.src_ref 1 "sha256.c" 158 22 first
	   316      "00000000111000110111100000010111" // 	srl r15,r7,r3
.src_ref 1 "sha256.c" 157 10 first
	   317      "00000000100011010010000000110101" // 	sb r13,(r4+=4)
.src_ref 1 "sha256.c" 158 35 first
	   318      "00010001111011110000000011111111" // 	andi r15,r15,#255
.src_ref 1 "sha256.c" 158 10
	   319      "00000000100011110010000000110101" // 	sb r15,(r4+=4)
.src_ref 1 "sha256.c" 159 22 first
	   320      "00000001000000110111000000010111" // 	srl r14,r8,r3
.src_ref 1 "sha256.c" 159 35
	   321      "00010001110011110000000011111111" // 	andi r15,r14,#255
.src_ref 1 "sha256.c" 159 10
	   322      "00000000100011110010000000110101" // 	sb r15,(r4+=4)
.src_ref 1 "sha256.c" 160 22 first
	   323      "00000001001000110110100000010111" // 	srl r13,r9,r3
.src_ref 1 "sha256.c" 160 35
	   324      "00010001101011110000000011111111" // 	andi r15,r13,#255
.src_ref 1 "sha256.c" 161 22 first
	   325      "00000001010000110111000000010111" // 	srl r14,r10,r3
.src_ref 1 "sha256.c" 160 10 first
	   326      "00000000100011110010000000110101" // 	sb r15,(r4+=4)
.src_ref 1 "sha256.c" 162 22 first
	   327      "00000001011000110110100000010111" // 	srl r13,r11,r3
.src_ref 1 "sha256.c" 161 35 first
	   328      "00010001110011100000000011111111" // 	andi r14,r14,#255
.src_ref 1 "sha256.c" 163 22 first
	   329      "00000001100000110111100000010111" // 	srl r15,r12,r3
.src_ref 1 "sha256.c" 161 10 first
	   330      "00000000100011100010000000110101" // 	sb r14,(r4+=4)
.src_ref 1 "sha256.c" 162 35 first
	   331      "00010001101011010000000011111111" // 	andi r13,r13,#255
.src_ref 1 "sha256.c" 162 10
	   332      "00000000100011010010000000110101" // 	sb r13,(r4+=4)
.src_ref 1 "sha256.c" 163 35 first
	   333      "00010001111011100000000011111111" // 	andi r14,r15,#255
.src_ref 1 "sha256.c" 163 10
	   334      "01011100100011100000000000000000" // 	sb r14,0(r4)
	   335      "00001000011000111111111111111000" // 	addi r3,r3,#-8
.end_of_loop
	   336      "00001000100001001111111111100101" // 	addi r4,r4,#-27
.src_ref 1 "sha256.c" 165
	   337      "01010000001001101111111111110000" // 	lw r6,-16(r1)
.src_ref 1 "sha256.c" 165 first
.rts 172
	   338      "00110000110000000000000000000000" // 	jr r6
.src_ref 1 "sha256.c" 165
.delay_slot
	   339      "00001000001000011111111110010100" // 	addi r1,r1,#-108
.delay_slot
.swstall delay_slot
	   340      "00000000000000000000000000000000" // 	nop
.label void_print_hash___P__uchar
.function print_hash void_print_hash___P__uchar
.src_ref 1 "sha256.c" 172 first
.src_ref 1 "sha256.c" 172 5
	   341      "00001000001000010000000000010000" // 	addi r1,r1,#16
	   342      "01001000000001100000000000000000" // 	lhi r6, #0
	   343      "01001000000001010000000000000000" // 	lhi r5, #0
	   344      "01001000000000110000000000000000" // 	lhi r3, #0
	   345      "01010100110001100000000101101000" // 	ori r6,r6,#360
	   346      "01010100101001010000000101100010" // 	ori r5,r5,#354
	   347      "01010100011000110000110110100100" // 	ori r3,r3,#3492
	   348      "10101000001000111111111111111000" // 	sw r3,-8(r1)
	   349      "10101000001000101111111111110100" // 	sw r2,-12(r1)
	   350      "10101000001001001111111111110000" // 	sw r4,-16(r1)
.src_ref 1 "sha256.c" 175 3 first
	   351      "10111100110000100000000000000000" // 	bor le,r6,#0
.src_ref 1 "sha256.c" 175 3
	   352      "10111100101000010000000000000000" // 	bor ls,r5,#0
.src_ref 1 "sha256.c" 175 3
	   353      "10111100000000000000000000100000" // 	bor lc,r0,#32
.src_ref 1 "sha256.c" 176 24
.begin_of_loop
	   354      "01010000001000111111111111110000" // 	lw r3,-16(r1)
.src_ref 1 "sha256.c" 176 24 first
	   355      "00000000011001010000100000110001" // 	lbu r5,(r3+=1)
	   356      "10101000001001011111111111111100" // 	sw r5,-4(r1)
	   357      "10101000001000111111111111110000" // 	sw r3,-16(r1)
.src_ref 1 "sha256.c" 176 6
	   358      "00101000000000000000000000111100" // 	jal #60
.src_ref 1 "sha256.c" 176 13
.delay_slot
	   359      "01010000001001001111111111111000" // 	lw r4,-8(r1)
.end_of_loop
.return_address
.swstall sha_n_L93
	   360      "00000000000000000000000000000000" // 	nop
	   361      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 1 "sha256.c" 177 3
	   362      "01010000001000101111111111110100" // 	lw r2,-12(r1)
	   363      "01010100100001000000110110101001" // 	ori r4,r4,#3497
.src_ref 1 "sha256.c" 177 3 first
.tail_call
	   364      "00100100000000000000000000110110" // 	j #54
.src_ref 1 "sha256.c" 178 first
.delay_slot
	   365      "00001000001000011111111111110000" // 	addi r1,r1,#-16
.label void_convert_hash___P__uchar___P__cchar
.function convert_hash void_convert_hash___P__uchar___P__cchar
.src_ref 1 "sha256.c" 180 first
.src_ref 1 "sha256.c" 180 5
	   366      "00001000001000010000000000010100" // 	addi r1,r1,#20
.src_ref 1 "sha256.c" 184 32
	   367      "01010100100001100000000000000000" // 	ori r6,r4,#0
.src_ref 1 "sha256.c" 184 19
	   368      "01010100101001000000000000000000" // 	ori r4,r5,#0
	   369      "01001000000001010000000000000000" // 	lhi r5, #0
	   370      "01001000000000110000000000000000" // 	lhi r3, #0
	   371      "01001000000001110000000000000000" // 	lhi r7, #0
	   372      "01010100101001010000000110000100" // 	ori r5,r5,#388
	   373      "01010100011000110000000101111100" // 	ori r3,r3,#380
	   374      "01010100111001110000110110100100" // 	ori r7,r7,#3492
	   375      "10101000001001111111111111110100" // 	sw r7,-12(r1)
	   376      "10101000001000101111111111111000" // 	sw r2,-8(r1)
.src_ref 1 "sha256.c" 183 3 first
	   377      "10111100101000100000000000000000" // 	bor le,r5,#0
.src_ref 1 "sha256.c" 183 3
	   378      "10111100011000010000000000000000" // 	bor ls,r3,#0
.src_ref 1 "sha256.c" 183 3
	   379      "10111100000000000000000000100000" // 	bor lc,r0,#32
.src_ref 1 "sha256.c" 184 32 first
.begin_of_loop
	   380      "00000000110000110000100000110001" // 	lbu r3,(r6+=1)
	   381      "10101000001000111111111111111100" // 	sw r3,-4(r1)
	   382      "10101000001001101111111111110000" // 	sw r6,-16(r1)
	   383      "10101000001001001111111111101100" // 	sw r4,-20(r1)
.src_ref 1 "sha256.c" 184 11
	   384      "00101000000000000000000000101000" // 	jal #40
.src_ref 1 "sha256.c" 184 20
.delay_slot
	   385      "01010000001001011111111111110100" // 	lw r5,-12(r1)
.src_ref 1 "sha256.c" 184 8
.return_address
	   386      "01010000001001001111111111101100" // 	lw r4,-20(r1)
.src_ref 1 "sha256.c" 184 32
	   387      "01010000001001101111111111110000" // 	lw r6,-16(r1)
.src_ref 1 "sha256.c" 184 8
.end_of_loop
	   388      "00000000011001000010000000000001" // 	add r4,r3,r4
.src_ref 1 "sha256.c" 186
	   389      "01010000001001011111111111111000" // 	lw r5,-8(r1)
.src_ref 1 "sha256.c" 186 first
.rts 172
	   390      "00110000101000000000000000000000" // 	jr r5
.src_ref 1 "sha256.c" 185 3 first
.delay_slot
	   391      "01011100100000000000000000000000" // 	sb r0,0(r4)
.src_ref 1 "sha256.c" 186 first
.delay_slot
	   392      "00001000001000011111111111101100" // 	addi r1,r1,#-20
.label _hosted_clib_io
.function _hosted_clib_io _hosted_clib_io
.src_ref 2 "stdio.c" 93 first
.src_ref 3 "stdio.c" 83 first
.src_ref 2 "stdio.c" 95 first
	   393      "00000000000000000000000000000000" // 	nop
.src_ref 3 "stdio.c" 84 first
	   394      "00000000000000000000000000000000" // 	nop
.src_ref 3 "stdio.c" 85 first
	   395      "00000000000000000000000000000000" // 	nop
.src_ref 3 "stdio.c" 87 first
	   396      "00000000000000000000000000000000" // 	nop
.src_ref 2 "stdio.c" 96 17
	   397      "01010100000000110000000000010000" // 	ori r3,r0,#16
.src_ref 2 "stdio.c" 97 4 first
.rts 172
	   398      "00110000010000000000000000000000" // 	jr r2
.src_ref 2 "stdio.c" 96 5 first
.delay_slot
	   399      "10101000100000110000000000000000" // 	sw r3,0(r4)
.delay_slot
.swstall delay_slot
	   400      "00000000000000000000000000000000" // 	nop
.label __sint_vfprintf___PFILE___P__cchar___Pvoid
.function vfprintf __sint_vfprintf___PFILE___P__cchar___Pvoid
.src_ref 2 "stdio.c" 316 first
.src_ref 2 "stdio.c" 318 11
	   401      "01010100100000110000000000000000" // 	ori r3,r4,#0
.src_ref 2 "stdio.c" 316 4
	   402      "00001000001000010000000001001000" // 	addi r1,r1,#72
.src_ref 2 "stdio.c" 318 11 first
	   403      "01010000011010000000000000000000" // 	lw r8,0(r3)
.src_ref 2 "stdio.c" 318 11
	   404      "00001000001001001111111110111000" // 	addi r4,r1,#-72
.src_ref 2 "stdio.c" 318 11
	   405      "00001000000000111111111111111111" // 	addi r3,r0,#-1
.src_ref 2 "stdio.c" 318 11
	   406      "01010100000001110000000000000010" // 	ori r7,r0,#2
.src_ref 2 "stdio.c" 318 11
	   407      "10101000001010001111111110111100" // 	sw r8,-68(r1)
.src_ref 2 "stdio.c" 318 11
	   408      "10101000001001011111111111001100" // 	sw r5,-52(r1)
.src_ref 2 "stdio.c" 318 11
	   409      "10101000001001101111111111111000" // 	sw r6,-8(r1)
.src_ref 2 "stdio.c" 318 11
	   410      "10101000001000111111111111000000" // 	sw r3,-64(r1)
.src_ref 2 "stdio.c" 318 11
	   411      "10101000100001110000000000000000" // 	sw r7,0(r4)
	   412      "10101000001000101111111111111100" // 	sw r2,-4(r1)
.src_ref 2 "stdio.c" 318 11
.no_stack_arguments
	   413      "00101011111111111111111111101011" // 	jal #-21
.delay_slot
.swstall delay_slot
	   414      "00000000000000000000000000000000" // 	nop
.src_ref 2 "stdio.c" 318 4
.return_address
	   415      "01010000001001001111111111111100" // 	lw r4,-4(r1)
.src_ref 2 "stdio.c" 318 4
.rts 172
	   416      "00110000100000000000000000000000" // 	jr r4
.src_ref 2 "stdio.c" 318 11
.delay_slot
	   417      "01010000001000111111111111000000" // 	lw r3,-64(r1)
.src_ref 2 "stdio.c" 318 4
.delay_slot
	   418      "00001000001000011111111110111000" // 	addi r1,r1,#-72
.label __sint_printf___P__cchar
.function printf __sint_printf___P__cchar
.src_ref 2 "stdio.c" 330 first
	   419      "01001000000001100000000000000000" // 	lhi r6, #0
	   420      "01010100110000110000111100000100" // 	ori r3,r6,#3844
.src_ref 2 "stdio.c" 330 4
	   421      "00001000001001100000000000000000" // 	addi r6,r1,#0
.src_ref 2 "stdio.c" 334 13
	   422      "01010100100001010000000000000000" // 	ori r5,r4,#0
.src_ref 2 "stdio.c" 334 13 first
.tail_call
	   423      "00100111111111111111111111101001" // 	j #-23
.src_ref 2 "stdio.c" 334 13
.delay_slot
	   424      "01010000011001000000000000000000" // 	lw r4,0(r3)
.label __sint_sprintf___P__cchar___P__cchar
.function sprintf __sint_sprintf___P__cchar___P__cchar
.src_ref 2 "stdio.c" 716 first
.src_ref 2 "stdio.c" 716 4
	   425      "00001000001000010000000001001000" // 	addi r1,r1,#72
.src_ref 2 "stdio.c" 720 13
	   426      "01010100100001110000000000000000" // 	ori r7,r4,#0
.src_ref 2 "stdio.c" 716 4
	   427      "00001000001001001111111110111000" // 	addi r4,r1,#-72
.src_ref 2 "stdio.c" 720 13
	   428      "00001000000000111111111111111111" // 	addi r3,r0,#-1
.src_ref 2 "stdio.c" 720 13
	   429      "01010100000001100000000000010111" // 	ori r6,r0,#23
.src_ref 2 "stdio.c" 720 13 first
	   430      "10101000001001111111111111100100" // 	sw r7,-28(r1)
.src_ref 2 "stdio.c" 720 13
	   431      "10101000001001011111111111001100" // 	sw r5,-52(r1)
.src_ref 2 "stdio.c" 720 13
	   432      "10101000001000111111111111000000" // 	sw r3,-64(r1)
.src_ref 2 "stdio.c" 720 13
	   433      "10101000001001001111111111111000" // 	sw r4,-8(r1)
.src_ref 2 "stdio.c" 720 13
	   434      "10101000100001100000000000000000" // 	sw r6,0(r4)
	   435      "10101000001000101111111111111100" // 	sw r2,-4(r1)
.src_ref 2 "stdio.c" 720 13
.no_stack_arguments
	   436      "00101011111111111111111111010100" // 	jal #-44
.delay_slot
.swstall delay_slot
	   437      "00000000000000000000000000000000" // 	nop
.src_ref 2 "stdio.c" 722 4
.return_address
	   438      "01010000001001001111111111111100" // 	lw r4,-4(r1)
.src_ref 2 "stdio.c" 722 4 first
.rts 172
	   439      "00110000100000000000000000000000" // 	jr r4
.src_ref 2 "stdio.c" 720 13 first
.delay_slot
	   440      "01010000001000111111111111000000" // 	lw r3,-64(r1)
.src_ref 2 "stdio.c" 722 4 first
.delay_slot
	   441      "00001000001000011111111110111000" // 	addi r1,r1,#-72
.label __sint_strcmp___P__cchar___P__cchar
.function strcmp __sint_strcmp___P__cchar___P__cchar
.src_ref 2 "string.c" 95 first
.src_ref 2 "string.c" 98 11 first
	   442      "00000000100000110000100000110000" // 	lb r3,(r4+=1)
.src_ref 2 "string.c" 99 11 first
	   443      "00000000101001100000100000110000" // 	lb r6,(r5+=1)
.src_ref 2 "string.c" 100 8 first
	   444      "00000000011001100011100000010101" // 	sne r7,r3,r6
.src_ref 2 "string.c" 100 20
	   445      "00000000011000000100000000001011" // 	seq r8,r3,r0
.src_ref 2 "string.c" 100 14
	   446      "00000000111010000011100000001010" // 	or r7,r7,r8
.src_ref 2 "string.c" 100 1
	   447      "00010100111000001111111111111001" // 	beqz r7,#-7
.delay_slot
.swstall delay_slot
	   448      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	   449      "00000000000000000000000000000000" // 	nop
.src_ref 2 "string.c" 101 32 first
	   450      "00010000110001010000000011111111" // 	andi r5,r6,#255
.src_ref 2 "string.c" 101 5
.rts 172
	   451      "00110000010000000000000000000000" // 	jr r2
.src_ref 2 "string.c" 101 12
.delay_slot
	   452      "00010000011001000000000011111111" // 	andi r4,r3,#255
.src_ref 2 "string.c" 101 30
.delay_slot
	   453      "00000000100001010001100000011000" // 	sub r3,r4,r5
.label __Pvoid_memset___Pvoid___sint___uint
.function memset __Pvoid_memset___Pvoid___sint___uint
.src_ref 2 "string.c" 312 first
.src_ref 2 "string.c" 316 3
	   454      "01010100100000110000000000000000" // 	ori r3,r4,#0
.src_ref 2 "string.c" 315 4 first
	   455      "00000000110000000010000000010001" // 	sleu r4,r6,r0
.src_ref 2 "string.c" 315 4
	   456      "00100000100000000000000000001010" // 	bnez r4,#10
.delay_slot
.swstall delay_slot
	   457      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	   458      "00000000000000000000000000000000" // 	nop
	   459      "01001000000001110000000000000000" // 	lhi r7, #0
	   460      "01001000000001000000000000000000" // 	lhi r4, #0
.src_ref 2 "string.c" 315 4
	   461      "10111100110000000000000000000000" // 	bor lc,r6,#0
	   462      "01010100111001110000000111010011" // 	ori r7,r7,#467
	   463      "01010100100001000000000111010011" // 	ori r4,r4,#467
.src_ref 2 "string.c" 315 4
	   464      "10111100111000010000000000000000" // 	bor ls,r7,#0
.src_ref 2 "string.c" 315 4
	   465      "10111100100000100000000000000000" // 	bor le,r4,#0
.src_ref 2 "string.c" 316 3
	   466      "01010100011001100000000000000000" // 	ori r6,r3,#0
.src_ref 2 "string.c" 316 3 first
.end_of_loop
.begin_of_loop
	   467      "00000000110001010000100000110101" // 	sb r5,(r6+=1)
.src_ref 2 "string.c" 317 4 first
.rts 172
	   468      "00110000010000000000000000000000" // 	jr r2
.delay_slot
.swstall delay_slot
	   469      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	   470      "00000000000000000000000000000000" // 	nop
.label __uint_strlen___P__cchar
.function strlen __uint_strlen___P__cchar
.src_ref 2 "string.c" 325 first
.src_ref 2 "string.c" 328 11
	   471      "01010100100000110000000000000000" // 	ori r3,r4,#0
.src_ref 2 "string.c" 328 11 first
	   472      "00000000011001010000100000110000" // 	lb r5,(r3+=1)
.src_ref 2 "string.c" 328 4
	   473      "00100000101000001111111111111101" // 	bnez r5,#-3
.delay_slot
.swstall delay_slot
	   474      "00000000000000000000000000000000" // 	nop
.delay_slot
.swstall delay_slot
	   475      "00000000000000000000000000000000" // 	nop
.src_ref 2 "string.c" 329 4 first
.rts 172
	   476      "00110000010000000000000000000000" // 	jr r2
.src_ref 2 "string.c" 329 14
.delay_slot
	   477      "00001000011000111111111111111111" // 	addi r3,r3,#-1
.src_ref 2 "string.c" 329 19
.delay_slot
	   478      "00000000011001000001100000011000" // 	sub r3,r3,r4
.dir 0 "%PROCDIR%"
.dir 1 "/users/Cours/inf8505/12/Documents/inf8505/lab2/sha256/sha256"
.dir 2 "%PROCDIR%/runtime/src"
.dir 3 "%PROCDIR%/runtime/%PROCDIR%/runtime/src"
