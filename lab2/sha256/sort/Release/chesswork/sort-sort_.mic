
// File generated by mist version N-2018.03#7d02e3ca79#180723, Fri Jan 11 21:30:27 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I/users/benacer/Desktop/sha256_orig/sha256/lib -I/users/benacer/Desktop/sha256_orig/sha256/lib/isg -r +f +i sort-sort_ tlx


// m17, jump target: m1 (next offset: 9)
000000  1 0  "00001000001000010000000000011000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (24,SP,SP); 
000001  1 0  "00001000101000111111111111111111"   // (R[3],MC) = _pl_const_2_B1 (R[5]); 
000002  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000003  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000004  1 0  "10101000001001011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[5],SP,-4); 
000005  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000006  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000007  1 0  "00100100000000000000000000010000"   // () = j_const_1_B1 (16); 
000008  1 0  "01001000000001010000000000000000"   // (R[5]) = const_1_B3 (); 

// m11;   next: m12 (next offset: 13)
000009  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000010  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000011  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m12 subroutine call;   next: m13 (next offset: 13)

// m13;   next: m1 (next offset: 24)
000013  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000014  1 0  "10001000011001010000000000000010"   // (R[5]) = _ls_const_1_B1 (R[3]); 
000015  1 0  "00000000100001010010100000000001"   // (R[5],) = _pl_1_B1 (R[4],R[5]); 
000016  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000017  1 0  "01010000101010000000000000000000"   // (R[8]) = load_1_B1 (R[5],DMb); 
000018  1 0  "01010000110000110000000000000000"   // (R[3]) = load_1_B1 (R[6],DMb); 
000019  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000020  1 0  "00000000110010000010000000110111"   // (R[6],DMb) = store__pl_const_1_B1 (R[8],R[6],DMb); 
000021  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000022  1 0  "00001000111001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[7]); 
000023  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m1;   next: m14 (next offset: 24)

// m14;   next: m20, jump target: m11 (next offset: 28)
000024  1 0  "00000000101000110001100000010011"   // (R[3]) = _lt_1_B1 (R[5],R[3]); 
000025  1 0  "00100000011000001111111111101110"   // () = nez_br_const_1_B1 (R[3],-18); 
000026  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000027  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m20 (next offset: /)
000028  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000029  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000030  1 0  "00001000001000011111111111101000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-24,SP,SP); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

