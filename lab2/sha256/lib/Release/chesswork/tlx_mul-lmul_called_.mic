
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:23 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../. -I../.././isg -r +f +i tlx_mul-lmul_called_ tlx


// m32;   next: m134 (next offset: 11)
000000  1 0  "01001000000010000000000000001011"   // (R[8]) = lhi_const_1_B1 (11); 
000001  1 0  "01001000000000110000000000011100"   // (R[3]) = lhi_const_1_B1 (28); 
000002  1 0  "01010101000010000000000000001011"   // (R[8]) = w32_const_bor_1_B1 (R[8],11); 
000003  1 0  "01010100011000110000000000011100"   // (R[3]) = w32_const_bor_1_B1 (R[3],28); 
000004  1 0  "01001000000010100000000000000000"   // (R[10]) = const_1_B3 (); 
000005  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[8]); 
000006  1 0  "10111100011000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[3]); 
000007  1 0  "10111100000000000000000001000000"   // (LC) = wr_res_reg_const_1_B1 (64); 
000008  1 0  "01010101010000110000000000000000"   // R[3] = R[10]; 
000009  1 0  "01010101010010010000000000000000"   // R[9] = R[10]; 
000010  1 0  "01010101010010000000000000000000"   // R[8] = R[10]; 

// m134;   next: m66, jump target: m15 (next offset: 17)
000011  1 0  "00010000111010110000000000000001"   // (R[11]) = _ad_const_1_B1 (R[7]); 
000012  1 0  "00000001011000000101100000010101"   // (R[11]) = nez_1_B1 (R[11]); 
000013  1 0  "00000001011000000101100000001010"   // (R[11]) = lor_const_1_B3 (R[11]); 
000014  1 0  "00010101011000000000000000000101"   // () = eqz_br_const_1_B1 (R[11],5); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m66;   next: m91 (next offset: 21)
000017  1 0  "00000000011001010001100000000001"   // (R[3],MC) = add_1_B1 (R[3],R[5]); 
000018  1 0  "00000000100010010100100000000010"   // (R[9],MC) = addx_1_B1 (R[9],R[4],MC); 
000019  1 0  "01010101001010000000000000000000"   // R[8] = R[9]; 
000020  1 0  "01010100011010100000000000000000"   // R[10] = R[3]; 

// m15;   next: m91 (next offset: 21)

// m91;   next: m24, loop target: m134 (next offset: 29)
000021  1 0  "10011100101011000000000000011111"   // (R[12]) = _rs_const_1_B1 (R[5]); 
000022  1 0  "10001000110010110000000000011111"   // (R[11]) = _ls_const_2_B1 (R[6]); 
000023  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000024  1 0  "10011100111001110000000000000001"   // (R[7]) = _rs_const_2_B1 (R[7]); 
000025  1 0  "10001000101001010000000000000001"   // (R[5]) = _ls_const_1_B1 (R[5]); 
000026  1 0  "10011000110001100000000000000001"   // (R[6]) = _rs_const_3_B1 (R[6]); 
000027  1 0  "00000000100011000010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[12]); 
000028  1 0  "00000000111010110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[11]); 

// m24 (next offset: /)
000029  1 0  "10101000001010001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[8],SP,-8); 
000030  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000031  1 0  "10101000001010101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[10],SP,-4); 
000032  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

