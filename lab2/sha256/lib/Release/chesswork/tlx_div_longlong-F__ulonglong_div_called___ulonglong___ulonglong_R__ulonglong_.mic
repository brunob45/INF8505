
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:12 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../. -I../.././isg -r +f +i tlx_div_longlong-F__ulonglong_div_called___ulonglong___ulonglong_R__ulonglong_ tlx


// m196;   next: m64, jump target: m249 (next offset: 7)
000000  1 0  "00000000110000000100000000001011"   // (R[8]) = eqz_1_B1 (R[6]); 
000001  1 0  "00000000110000000100100000010011"   // (R[9]) = _lt_const_1_B2 (R[6]); 
000002  1 0  "00000001000000000100000000000011"   // (R[8]) = land_const_1_B2 (R[8]); 
000003  1 0  "00000001000010010100100000001010"   // (R[9]) = lor_1_B1 (R[9],R[8]); 
000004  1 0  "00100001001000000000000000100001"   // () = nez_br_const_1_B1 (R[9],33); 
000005  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000006  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m64;   next: m274 (next offset: 16)
000007  1 0  "01001000000010000000000000010000"   // (R[8]) = lhi_const_1_B1 (16); 
000008  1 0  "01010101000010000000000000010000"   // (R[8]) = w32_const_bor_1_B1 (R[8],16); 
000009  1 0  "01001000000010010000000000100100"   // (R[9]) = lhi_const_1_B1 (36); 
000010  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[8]); 
000011  1 0  "01010101001010010000000000100100"   // (R[9]) = w32_const_bor_1_B1 (R[9],36); 
000012  1 0  "10111101001000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[9]); 
000013  1 0  "01001000000010000000000000000000"   // (R[8]) = const_2_B3 (); 
000014  1 0  "10111100000000000000000001000000"   // (LC) = wr_res_reg_const_1_B1 (64); 
000015  1 0  "01010101000010010000000000000000"   // R[9] = R[8]; 

// m274;   next: m158, jump target: m26 (next offset: 33)
000016  1 0  "10011101001010100000000000011111"   // (R[10]) = _rs_const_1_B1 (R[9]); 
000017  1 0  "10011100100000110000000000011111"   // (R[3]) = _rs_const_1_B1 (R[4]); 
000018  1 0  "10001001001010010000000000000001"   // (R[9]) = _ls_const_1_B1 (R[9]); 
000019  1 0  "10001001000010000000000000000001"   // (R[8]) = _ls_const_1_B1 (R[8]); 
000020  1 0  "00000000011010010100100000001010"   // (R[9]) = _or_1_B1 (R[9],R[3]); 
000021  1 0  "00000001000010100100000000001010"   // (R[8]) = _or_1_B1 (R[8],R[10]); 
000022  1 0  "10011100101000110000000000011111"   // (R[3]) = _rs_const_1_B1 (R[5]); 
000023  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000024  1 0  "00000000110010000101000000001011"   // (R[10]) = _eq_1_B1 (R[6],R[8]); 
000025  1 0  "00000000111010010101100000010001"   // (R[11]) = _le_1_B1 (R[7],R[9]); 
000026  1 0  "00000000011001000010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[3]); 
000027  1 0  "00000000110010000110000000010100"   // (R[12]) = _lt_1_B1 (R[6],R[8]); 
000028  1 0  "00000001010010110101000000000011"   // (R[10]) = land_1_B1 (R[10],R[11]); 
000029  1 0  "00000001010011000001100000001010"   // (R[3]) = lor_1_B1 (R[12],R[10]); 
000030  1 0  "00010100011000000000000000000100"   // () = eqz_br_const_1_B1 (R[3],4); 
000031  1 0  "10001000101001010000000000000001"   // (R[5]) = _ls_const_1_B1 (R[5]); 
000032  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m158;   next: m281 (next offset: 36)
000033  1 0  "00000001001001110100100000011000"   // (R[9],MC) = sub_1_B1 (R[9],R[7]); 
000034  1 0  "01010100101001010000000000000001"   // (R[5]) = _or_const_1_B1 (R[5]); 
000035  1 0  "00000001000001100100000000011001"   // (R[8],MC) = subx_1_B1 (R[8],R[6],MC); 

// m26;   next: m281 (next offset: 36)

// m281;   next: m280, loop target: m274 (next offset: 37)
000036  1 0  "00000000000000000000000000000000"  .swstall "builtin_control"   // () = vd_nop_ID (); 

// m280, jump target: m36 (next offset: 39)
000037  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m249;   next: m88, jump target: m12 (next offset: 49)
000039  1 0  "00000000100001100100100000001011"   // (R[9]) = _eq_1_B1 (R[6],R[4]); 
000040  1 0  "00000000111001010100000000010001"   // (R[8]) = _le_1_B1 (R[7],R[5]); 
000041  1 0  "00000001000010010100100000000011"   // (R[9]) = land_1_B1 (R[9],R[8]); 
000042  1 0  "00000000110001000001100000010100"   // (R[3]) = _lt_1_B1 (R[6],R[4]); 
000043  1 0  "00000000011010010001100000001010"   // (R[3]) = lor_1_B1 (R[3],R[9]); 
000044  1 0  "01010100101010010000000000000000"   // R[9] = R[5]; 
000045  1 0  "01010100100010000000000000000000"   // R[8] = R[4]; 
000046  1 0  "00010100011000000000000000000100"   // () = eqz_br_const_1_B1 (R[3],4); 
000047  1 0  "01001000000001000000000000000000"   // (R[4]) = const_2_B3 (); 
000048  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m88;   next: m36 (next offset: 52)
000049  1 0  "00000001001001110100100000011000"   // (R[9],MC) = sub_1_B1 (R[9],R[7]); 
000050  1 0  "00000001000001100100000000011001"   // (R[8],MC) = subx_1_B1 (R[8],R[6],MC); 
000051  1 0  "01010100000001010000000000000001"   // (R[5]) = const_1_B2 (); 

// m12;   next: m36 (next offset: 52)

// m36 (next offset: /)
000052  1 0  "10101000001001011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[5],SP,-4); 
000053  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000054  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

