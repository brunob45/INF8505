
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:56 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_atan_ tlx


// m154;   next: m38, jump target: m161 (next offset: 10)
000000  1 0  "01001000000001110111111111111111"   // (R[7]) = lhi_const_1_B1 (32767); 
000001  1 0  "00001000001000010000000001010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (84,SP,SP); 
000002  1 0  "01010100111001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[7],65535); 
000003  1 0  "00000000100001100011100000000011"   // (R[7]) = _ad_1_B1 (R[4],R[6]); 
000004  1 0  "01001000000000110100010000010000"   // (R[3]) = const_14_B1 (); 
000005  1 0  "00000000111000110001100000001100"   // (R[3]) = _ge_1_B1 (R[7],R[3]); 
000006  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 
000007  1 0  "00100000011000000000000101101011"   // () = nez_br_const_1_B1 (R[3],363); 
000008  1 0  "10101000001001001111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[4],SP,-92); 
000009  1 0  "10101000001001011111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[5],SP,-88); 

// m38;   next: m135, jump target: m42 (next offset: 15)
000010  1 0  "01001000000001010011111111011100"   // (R[5]) = const_10_B1 (); 
000011  1 0  "00000000111001010010100000010011"   // (R[5]) = _lt_2_B1 (R[7],R[5]); 
000012  1 0  "00100000101000000000000001101110"   // () = nez_br_const_1_B1 (R[5],110); 
000013  1 0  "01010000001000111111111110101000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m135;   next: m69, jump target: m62 (next offset: 21)
000015  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[6]); 
000016  1 0  "01001000000001000011111111110011"   // (R[4]) = const_7_B1 (); 
000017  1 0  "00000000111001000010000000010011"   // (R[4]) = _lt_2_B1 (R[7],R[4]); 
000018  1 0  "00100000100000000000000000101110"   // () = nez_br_const_1_B1 (R[4],46); 
000019  1 0  "10101000001001101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[6],SP,-16); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m69;   next: m296, jump target: m267 (next offset: 27)
000021  1 0  "01001000000001000100000000000011"   // (R[4]) = lhi_const_1_B1 (16387); 
000022  1 0  "01010100100001001000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],32768); 
000023  1 0  "00000000111001000010000000010011"   // (R[4]) = _lt_1_B1 (R[7],R[4]); 
000024  1 0  "00100000100000000000000000001010"   // () = nez_br_const_1_B1 (R[4],10); 
000025  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m296;   next: m297 (next offset: 30)
000027  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 
000028  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000029  1 0  "01001000000001001011111111110000"   // (R[4]) = const_1_B1 (); 

// m297 subroutine call;   next: m640 (next offset: 30)

// m640, jump target: m402 (next offset: 36)
000030  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000031  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000032  1 0  "01010100000001000000000000000011"   // (R[4]) = const_11_B2 (); 
000033  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000034  1 0  "00100100000000000000000001110110"   // () = j_const_1_B1 (118); 
000035  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m267;   next: m268 (next offset: 41)
000036  1 0  "01010000001001011111111110101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000037  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000038  1 0  "01001000000001110000000000000000"   // (R[7]) = const_15_B3 (); 
000039  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000040  1 0  "01001000000001100011111111111000"   // (R[6]) = const_3_B1 (); 

// m268 subroutine call;   next: m277 (next offset: 41)

// m277;   next: m278 (next offset: 50)
000041  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000042  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000043  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000044  1 0  "01001000000001000011111111111000"   // (R[4]) = const_3_B1 (); 
000045  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000046  1 0  "01010000001001111111111110101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000047  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 

// m278 subroutine call;   next: m281 (next offset: 50)

// m281;   next: m282 (next offset: 55)
000050  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000051  1 0  "01001000000001000011111111110000"   // (R[4]) = const_12_B1 (); 
000052  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 
000053  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000054  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m282 subroutine call;   next: m291 (next offset: 55)

// m291;   next: m292 (next offset: 60)
000055  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000056  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000057  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000058  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000059  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m292 subroutine call;   next: m634 (next offset: 60)

// m634, jump target: m402 (next offset: 66)
000060  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000061  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000062  1 0  "01010100000001000000000000000010"   // (R[4]) = const_2_B2 (); 
000063  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000064  1 0  "00100100000000000000000001011000"   // () = j_const_1_B1 (88); 
000065  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m62;   next: m244, jump target: m211 (next offset: 71)
000066  1 0  "01001000000001000011111111100110"   // (R[4]) = const_6_B1 (); 
000067  1 0  "00000000111001000010000000010011"   // (R[4]) = _lt_2_B1 (R[7],R[4]); 
000068  1 0  "00100000100000000000000000011001"   // () = nez_br_const_1_B1 (R[4],25); 
000069  1 0  "01001000000001110000000000000000"   // (R[7]) = const_15_B3 (); 
000070  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m244;   next: m245 (next offset: 75)
000071  1 0  "01010000001001011111111110101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000072  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000073  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000074  1 0  "01001000000001100011111111110000"   // (R[6]) = const_12_B1 (); 

// m245 subroutine call;   next: m254 (next offset: 75)

// m254;   next: m255 (next offset: 84)
000075  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000076  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000077  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000078  1 0  "01001000000001100011111111110000"   // (R[6]) = const_12_B1 (); 
000079  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000080  1 0  "01010000001001011111111110101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000081  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000082  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000083  1 0  "01001000000001110000000000000000"   // (R[7]) = const_15_B3 (); 

// m255 subroutine call;   next: m258 (next offset: 84)

// m258;   next: m259 (next offset: 89)
000084  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000085  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000086  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000087  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000088  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m259 subroutine call;   next: m633 (next offset: 89)

// m633, jump target: m402 (next offset: 95)
000089  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000090  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000091  1 0  "01010100000001000000000000000001"   // (R[4]) = const_4_B2 (); 
000092  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000093  1 0  "00100100000000000000000000111011"   // () = j_const_1_B1 (59); 
000094  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m211;   next: m212 (next offset: 99)
000095  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 
000096  1 0  "01010000001001111111111110101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000097  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000098  1 0  "01001000000001000100000000000000"   // (R[4]) = const_5_B1 (); 

// m212 subroutine call;   next: m221 (next offset: 99)

// m221;   next: m222 (next offset: 104)
000099  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000100  1 0  "01001000000001100011111111110000"   // (R[6]) = const_12_B1 (); 
000101  1 0  "01001000000001110000000000000000"   // (R[7]) = const_15_B3 (); 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m222 subroutine call;   next: m226 (next offset: 104)

// m226;   next: m227 (next offset: 113)
000104  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000105  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000106  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000107  1 0  "01001000000001000100000000000000"   // (R[4]) = const_5_B1 (); 
000108  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000109  1 0  "01010000001001111111111110101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000110  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000111  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000112  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 

// m227 subroutine call;   next: m236 (next offset: 113)

// m236;   next: m237 (next offset: 118)
000113  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000114  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000115  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m237 subroutine call;   next: m646 (next offset: 118)

// m646, jump target: m402 (next offset: 124)
000118  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000119  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000120  1 0  "01001000000001000000000000000000"   // (R[4]) = const_15_B3 (); 
000121  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000122  1 0  "00100100000000000000000000011110"   // () = j_const_1_B1 (30); 
000123  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m42;   next: m203, jump target: m54 (next offset: 129)
000124  1 0  "01001000000001010011111000100000"   // (R[5]) = const_9_B1 (); 
000125  1 0  "00000000111001010010100000001100"   // (R[5]) = _ge_1_B1 (R[7],R[5]); 
000126  1 0  "00100000101000000000000000010100"   // () = nez_br_const_1_B1 (R[5],20); 
000127  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000128  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m203;   next: m204 (next offset: 136)
000129  1 0  "01001000000001110111111000110111"   // (R[7]) = lhi_const_1_B1 (32311); 
000130  1 0  "01001000000001011000100000000000"   // (R[5]) = lhi_const_1_B1 (-30720); 
000131  1 0  "01010100111001001110010000111100"   // (R[4]) = w32_const_bor_1_B1 (R[7],58428); 
000132  1 0  "01010100101001010111010110011100"   // (R[5]) = w32_const_bor_1_B1 (R[5],30108); 
000133  1 0  "01010000001001101111111110100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000134  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000135  1 0  "01010000001001111111111110101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 

// m204 subroutine call;   next: m201 (next offset: 136)

// m201;   next: m141 (next offset: 141)
000136  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000137  1 0  "01001000000001000011111111110000"   // (R[4]) = const_12_B1 (); 
000138  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 
000139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000140  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m141 subroutine call;   next: m145 (next offset: 141)

// m145;   next: m51, jump target: m52 (next offset: 144)
000141  1 0  "00010100011000000000000000000101"   // () = eqz_br_const_1_B1 (R[3],5); 
000142  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000143  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m51 (next offset: 148)
000144  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000145  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000146  1 0  "00001000001000011111111110101100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-84,SP,SP); 
000147  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m52;   next: m638 (next offset: 148)

// m638;   next: m632 (next offset: 148)

// m54;   next: m632 (next offset: 148)

// m632;   next: m402 (next offset: 153)
000148  1 0  "01010000001001111111111110101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000149  1 0  "01010000001001101111111110100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000150  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000151  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000152  1 0  "00001000000001001111111111111111"   // (R[4]) = const_8_B1 (); 

// m402;   next: m403 (next offset: 157)
000153  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000154  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000155  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000156  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m403 subroutine call;   next: m413 (next offset: 157)

// m413;   next: m414 (next offset: 164)
000157  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000158  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000159  1 0  "10101000001001111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[7],SP,-28); 
000160  1 0  "10101000001001101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[6],SP,-32); 
000161  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000162  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000163  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m414 subroutine call;   next: m418 (next offset: 164)

// m418;   next: m419 (next offset: 195)
000164  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000165  1 0  "01010100100001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[4],0); 
000166  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000167  1 0  "00000000111010010010000000110100"   // (R[9],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000168  1 0  "00000000111000110110000000110100"   // (R[3],R[7]) = load__pl_const_3_B1 (R[7],DMb); 
000169  1 0  "00000000111010000010000000110100"   // (R[8],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000170  1 0  "00000000111010100110000000110100"   // (R[10],R[7]) = load__pl_const_3_B1 (R[7],DMb); 
000171  1 0  "00000000111010110010000000110100"   // (R[11],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000172  1 0  "00000000111011000110000000110100"   // (R[12],R[7]) = load__pl_const_3_B1 (R[7],DMb); 
000173  1 0  "00000000111011010010000000110100"   // (R[13],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000174  1 0  "00000000111011100110000000110100"   // (R[14],R[7]) = load__pl_const_3_B1 (R[7],DMb); 
000175  1 0  "00000000111011110010000000110100"   // (R[15],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000176  1 0  "00000000111000100110000000110100"   // (R[2],R[7]) = load__pl_const_3_B1 (R[7],DMb); 
000177  1 0  "00000000111001100010000000110100"   // (R[6],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000178  1 0  "10101000001010011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[9],SP,-64); 
000179  1 0  "00001000111010011111111110110100"   // (R[9],MC) = _pl_const_1_B1 (R[7]); 
000180  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000181  1 0  "10101000001010011111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[9],SP,-68); 
000182  1 0  "10101000001000101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[2],SP,-36); 
000183  1 0  "10101000001011111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[15],SP,-40); 
000184  1 0  "10101000001011101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[14],SP,-44); 
000185  1 0  "10101000001011011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[13],SP,-48); 
000186  1 0  "10101000001011001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[12],SP,-52); 
000187  1 0  "10101000001010111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[11],SP,-56); 
000188  1 0  "10101000001010101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[10],SP,-60); 
000189  1 0  "10101000001010001111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[8],SP,-72); 
000190  1 0  "10101000001000111111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[3],SP,-80); 
000191  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000192  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000193  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000194  1 0  "01010000111001110000000000000000"   // (R[7]) = load_1_B1 (R[7],DMb); 

// m419 subroutine call;   next: m428 (next offset: 195)

// m428;   next: m429 (next offset: 200)
000195  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000196  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000197  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000199  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m429 subroutine call;   next: m433 (next offset: 200)

// m433;   next: m434 (next offset: 205)
000200  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000201  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000202  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000203  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000204  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m434 subroutine call;   next: m443 (next offset: 205)

// m443;   next: m444 (next offset: 210)
000205  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000206  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000207  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000208  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000209  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m444 subroutine call;   next: m448 (next offset: 210)

// m448;   next: m449 (next offset: 215)
000210  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000211  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000212  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000213  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000214  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m449 subroutine call;   next: m458 (next offset: 215)

// m458;   next: m459 (next offset: 220)
000215  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000216  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000217  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m459 subroutine call;   next: m463 (next offset: 220)

// m463;   next: m464 (next offset: 225)
000220  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000221  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000222  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000223  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000224  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m464 subroutine call;   next: m473 (next offset: 225)

// m473;   next: m474 (next offset: 230)
000225  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000226  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000227  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000228  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000229  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m474 subroutine call;   next: m478 (next offset: 230)

// m478;   next: m479 (next offset: 235)
000230  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000231  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000232  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000233  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000234  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m479 subroutine call;   next: m488 (next offset: 235)

// m488;   next: m489 (next offset: 240)
000235  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000236  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000237  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000238  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000239  1 0  "01010000001001011111111110110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 

// m489 subroutine call;   next: m493 (next offset: 240)

// m493;   next: m494 (next offset: 245)
000240  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000241  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000242  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000243  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000244  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m494 subroutine call;   next: m497 (next offset: 245)

// m497;   next: m498 (next offset: 271)
000245  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000246  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000247  1 0  "00000000100000110010000000110100"   // (R[3],R[4]) = load__pl_const_2_B1 (R[4],DMb); 
000248  1 0  "00000000100010010110000000110100"   // (R[9],R[4]) = load__pl_const_3_B1 (R[4],DMb); 
000249  1 0  "00000000100010100010000000110100"   // (R[10],R[4]) = load__pl_const_2_B1 (R[4],DMb); 
000250  1 0  "00000000100010110110000000110100"   // (R[11],R[4]) = load__pl_const_3_B1 (R[4],DMb); 
000251  1 0  "00000000100011000010000000110100"   // (R[12],R[4]) = load__pl_const_2_B1 (R[4],DMb); 
000252  1 0  "00000000100011010110000000110100"   // (R[13],R[4]) = load__pl_const_3_B1 (R[4],DMb); 
000253  1 0  "00000000100011100010000000110100"   // (R[14],R[4]) = load__pl_const_2_B1 (R[4],DMb); 
000254  1 0  "00000000100000100110000000110100"   // (R[2],R[4]) = load__pl_const_3_B1 (R[4],DMb); 
000255  1 0  "01010000001011111111111111111000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000256  1 0  "01010000100001100000000000000000"   // (R[6]) = load_1_B1 (R[4],DMb); 
000257  1 0  "01010000100001110000000000000100"   // (R[7]) = load__pl_const_1_B1 (R[4],DMb); 
000258  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000259  1 0  "10101000001000101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[2],SP,-28); 
000260  1 0  "10101000001011101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[14],SP,-32); 
000261  1 0  "10101000001011011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[13],SP,-36); 
000262  1 0  "10101000001011001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[12],SP,-40); 
000263  1 0  "10101000001010111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[11],SP,-44); 
000264  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000265  1 0  "10101000001010011111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[9],SP,-52); 
000266  1 0  "10101000001010001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[8],SP,-56); 
000267  1 0  "10101000001011111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[15],SP,-60); 
000268  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000269  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000270  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 

// m498 subroutine call;   next: m507 (next offset: 271)

// m507;   next: m508 (next offset: 276)
000271  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000272  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000273  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000274  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000275  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m508 subroutine call;   next: m512 (next offset: 276)

// m512;   next: m513 (next offset: 281)
000276  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000277  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000278  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000279  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000280  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m513 subroutine call;   next: m522 (next offset: 281)

// m522;   next: m523 (next offset: 286)
000281  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000282  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000283  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000284  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000285  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m523 subroutine call;   next: m527 (next offset: 286)

// m527;   next: m528 (next offset: 291)
000286  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000287  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000288  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000289  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000290  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m528 subroutine call;   next: m537 (next offset: 291)

// m537;   next: m538 (next offset: 296)
000291  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000292  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000293  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000294  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000295  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m538 subroutine call;   next: m542 (next offset: 296)

// m542;   next: m543 (next offset: 301)
000296  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000297  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000298  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000299  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000300  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m543 subroutine call;   next: m552 (next offset: 301)

// m552;   next: m553 (next offset: 306)
000301  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000302  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000303  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000304  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000305  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m553 subroutine call;   next: m557 (next offset: 306)

// m557;   next: m558 (next offset: 311)
000306  1 0  "01010000001001001111111110101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000307  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000308  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000309  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000310  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m558 subroutine call;   next: m567 (next offset: 311)

// m567;   next: m568 (next offset: 316)
000311  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000312  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000313  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000314  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000315  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m568 subroutine call;   next: m572 (next offset: 316)

// m572;   next: m573 (next offset: 321)
000316  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000317  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000318  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000319  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000320  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m573 subroutine call;   next: m400 (next offset: 321)

// m400;   next: m602, jump target: m579 (next offset: 326)
000321  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000322  1 0  "00000000100000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[4]); 
000323  1 0  "00100000101000000000000000100111"   // () = nez_br_const_1_B1 (R[5],39); 
000324  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000325  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m602;   next: m603 (next offset: 342)
000326  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000327  1 0  "01010100101001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[5],0); 
000328  1 0  "10001000100001000000000000000011"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000329  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000330  1 0  "00000000100001110011100000000001"   // (R[7],) = _pl_1_B1 (R[7],R[4]); 
000331  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000332  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000333  1 0  "01010000111010000000000000000000"   // (R[8]) = load_1_B1 (R[7],DMb); 
000334  1 0  "01010000111000110000000000000100"   // (R[3]) = load__pl_const_1_B1 (R[7],DMb); 
000335  1 0  "01010000100001100000000000000000"   // (R[6]) = load_1_B1 (R[4],DMb); 
000336  1 0  "01010000100001110000000000000100"   // (R[7]) = load__pl_const_1_B1 (R[4],DMb); 
000337  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000338  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000339  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000340  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000341  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m603 subroutine call;   next: m612 (next offset: 342)

// m612;   next: m613 (next offset: 347)
000342  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000343  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000344  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000345  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000346  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m613 subroutine call;   next: m617 (next offset: 347)

// m617;   next: m618 (next offset: 352)
000347  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000348  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000349  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000350  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000351  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m618 subroutine call;   next: m600 (next offset: 352)

// m600;   next: m624, jump target: m86 (next offset: 357)
000352  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000353  1 0  "00000000100000000010000000001100"   // (R[4]) = _ge_const_1_B2 (R[4]); 
000354  1 0  "00100000100000000000000000000110"   // () = nez_br_const_1_B1 (R[4],6); 
000355  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000356  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m624;   next: m625 (next offset: 360)
000357  1 0  "01001000000001000000000000000000"   // (R[4]) = const_15_B3 (); 
000358  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000359  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 

// m625 subroutine call;   next: m643 (next offset: 360)

// m643, jump target: m645 (next offset: 362)
000360  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000361  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m86, jump target: m645 (next offset: 364)
000362  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000363  1 0  "10101000001001101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[6],SP,-8); 

// m579;   next: m580 (next offset: 369)
000364  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000365  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000366  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000367  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000368  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m580 subroutine call;   next: m647 (next offset: 369)

// m647;   next: m645 (next offset: 370)
000369  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m645, jump target: m91 (next offset: 372)
000370  1 0  "00100100000000000000000000110111"   // () = j_const_1_B1 (55); 
000371  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m161;   next: m164, jump target: m26 (next offset: 381)
000372  1 0  "01001000000000110111111111110000"   // (R[3]) = const_13_B1 (); 
000373  1 0  "00000000011001110011000000001011"   // (R[6]) = _eq_1_B1 (R[7],R[3]); 
000374  1 0  "00000000101000000100000000010101"   // (R[8]) = nez_1_B1 (R[5]); 
000375  1 0  "00000000111000110011100000001110"   // (R[7]) = _gt_1_B1 (R[7],R[3]); 
000376  1 0  "00000000110010000011000000000011"   // (R[6]) = land_1_B1 (R[6],R[8]); 
000377  1 0  "00000000110001110011100000001010"   // (R[7]) = lor_1_B1 (R[7],R[6]); 
000378  1 0  "00010100111000000000000000001011"   // () = eqz_br_const_2_B1 (R[7],11); 
000379  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000380  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m164;   next: m165 (next offset: 384)
000381  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000382  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000383  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 

// m165 subroutine call;   next: m25 (next offset: 384)

// m25 (next offset: 391)
000384  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000385  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000386  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000387  1 0  "10101000001001111111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[7],SP,-92); 
000388  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000389  1 0  "10101000001001001111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[4],SP,-88); 
000390  1 0  "00001000001000011111111110101100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-84,SP,SP); 

// m26;   next: m28 (next offset: 391)

// m28;   next: m191, jump target: m176 (next offset: 402)
000391  1 0  "01001000000001110000000000011000"   // (R[7]) = lhi_const_1_B1 (24); 
000392  1 0  "01010100111000110000000000011000"   // (R[3]) = w32_const_bor_1_B1 (R[7],24); 
000393  1 0  "01001000000001010000000000011000"   // (R[5]) = lhi_const_1_B1 (24); 
000394  1 0  "01010100101001100000000000011000"   // (R[6]) = w32_const_bor_1_B1 (R[5],24); 
000395  1 0  "01010000011001010000000000000000"   // (R[5]) = load_1_B1 (R[3],DMb); 
000396  1 0  "00000000100000000010000000001110"   // (R[4]) = _gt_const_1_B2 (R[4]); 
000397  1 0  "01010000110001110000000000000100"   // (R[7]) = load__pl_const_1_B1 (R[6],DMb); 
000398  1 0  "01010000011000110000000000000100"   // (R[3]) = load__pl_const_1_B1 (R[3],DMb); 
000399  1 0  "00100000100000000000000000001101"   // () = nez_br_const_1_B1 (R[4],13); 
000400  1 0  "01010000110001100000000000000000"   // (R[6]) = load_1_B1 (R[6],DMb); 
000401  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 

// m191;   next: m192 (next offset: 406)
000402  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000403  1 0  "01001000000001000000000000000000"   // (R[4]) = const_15_B3 (); 
000404  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000405  1 0  "01001000000001010000000000000000"   // (R[5]) = const_15_B3 (); 

// m192 subroutine call;   next: m195 (next offset: 406)

// m195;   next: m196 (next offset: 411)
000406  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000407  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000408  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000409  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000410  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m196 subroutine call;   next: m636 (next offset: 411)

// m636, jump target: m91 (next offset: 414)
000411  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000412  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000413  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m176;   next: m177 (next offset: 419)
000414  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000415  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 
000416  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000417  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000418  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m177 subroutine call;   next: m34 (next offset: 419)

// m34 (next offset: 426)
000419  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000420  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000421  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000422  1 0  "10101000001001111111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[7],SP,-92); 
000423  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000424  1 0  "10101000001001001111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[4],SP,-88); 
000425  1 0  "00001000001000011111111110101100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-84,SP,SP); 

// m91 (next offset: /)
000426  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000427  1 0  "10101000001001001111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[4],SP,-92); 
000428  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000429  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000430  1 0  "00001000001000011111111110101100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-84,SP,SP); 

