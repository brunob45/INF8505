
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:56 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_acos_ tlx


// m157;   next: m23, jump target: m162 (next offset: 15)
000000  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000001  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000002  1 0  "00000000100001100011100000000011"   // (R[7]) = _ad_1_B1 (R[4],R[6]); 
000003  1 0  "00001000001000010000000001110100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (116,SP,SP); 
000004  1 0  "01001000000010000101010001000100"   // (R[8]) = lhi_const_1_B1 (21572); 
000005  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000006  1 0  "01001000000001000011111111110000"   // (R[4]) = const_5_B1 (); 
000007  1 0  "01001000000000110100000000001001"   // (R[3]) = lhi_const_1_B1 (16393); 
000008  1 0  "01010101000010010010110100011000"   // (R[9]) = w32_const_bor_1_B1 (R[8],11544); 
000009  1 0  "00000000111001000100000000001100"   // (R[8]) = _ge_1_B1 (R[7],R[4]); 
000010  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000011  1 0  "01010100011000110010000111111011"   // (R[3]) = w32_const_bor_1_B1 (R[3],8699); 
000012  1 0  "00100001000000000000001000101000"   // () = nez_br_const_1_B1 (R[8],552); 
000013  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000014  1 0  "10101000001010011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[9],SP,-12); 

// m23;   next: m38, jump target: m27 (next offset: 84)
000015  1 0  "01001000000011000011111101001001"   // (R[12]) = lhi_const_1_B1 (16201); 
000016  1 0  "01001000000010110111010100000001"   // (R[11]) = lhi_const_1_B1 (29953); 
000017  1 0  "01001000000010101011111110100100"   // (R[10]) = lhi_const_1_B1 (-16476); 
000018  1 0  "01010101100011001110111111100000"   // (R[12]) = w32_const_bor_1_B1 (R[12],61408); 
000019  1 0  "01010101011010111011001010001000"   // (R[11]) = w32_const_bor_1_B1 (R[11],45704); 
000020  1 0  "01010101010010101000001000101000"   // (R[10]) = w32_const_bor_1_B1 (R[10],33320); 
000021  1 0  "01001000000010011011010101101000"   // (R[9]) = lhi_const_1_B1 (-19096); 
000022  1 0  "01001000000010000011111111001001"   // (R[8]) = lhi_const_1_B1 (16329); 
000023  1 0  "01001000000000110000111010001000"   // (R[3]) = lhi_const_1_B1 (3720); 
000024  1 0  "01010101001010011000111100111011"   // (R[9]) = w32_const_bor_1_B1 (R[9],36667); 
000025  1 0  "01010101000010001100000101010101"   // (R[8]) = w32_const_bor_1_B1 (R[8],49493); 
000026  1 0  "01010100011000110100010001010101"   // (R[3]) = w32_const_bor_1_B1 (R[3],17493); 
000027  1 0  "10101000001010101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[10],SP,-32); 
000028  1 0  "10101000001010111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[11],SP,-24); 
000029  1 0  "10101000001011001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[12],SP,-28); 
000030  1 0  "01001000000011000011111100000010"   // (R[12]) = lhi_const_1_B1 (16130); 
000031  1 0  "01001000000011010000110111111101"   // (R[13]) = lhi_const_1_B1 (3581); 
000032  1 0  "01001000000010111011111111010100"   // (R[11]) = lhi_const_1_B1 (-16428); 
000033  1 0  "01001000000010100000001111101011"   // (R[10]) = lhi_const_1_B1 (1003); 
000034  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000035  1 0  "10101000001010001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[8],SP,-44); 
000036  1 0  "10101000001010011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[9],SP,-36); 
000037  1 0  "01010101100011000011110111100001"   // (R[12]) = w32_const_bor_1_B1 (R[12],15841); 
000038  1 0  "01010101101011011111011100001001"   // (R[13]) = w32_const_bor_1_B1 (R[13],63241); 
000039  1 0  "01010101011010111101011000010010"   // (R[11]) = w32_const_bor_1_B1 (R[11],54802); 
000040  1 0  "01010101010010100110111101111101"   // (R[10]) = w32_const_bor_1_B1 (R[10],28541); 
000041  1 0  "01001000000010010011111111000101"   // (R[9]) = lhi_const_1_B1 (16325); 
000042  1 0  "01001000000010000101010101010101"   // (R[8]) = lhi_const_1_B1 (21845); 
000043  1 0  "01001000000000111001110001011001"   // (R[3]) = lhi_const_1_B1 (-25511); 
000044  1 0  "01010101001010010101010101010101"   // (R[9]) = w32_const_bor_1_B1 (R[9],21845); 
000045  1 0  "01010101000010000101010101010101"   // (R[8]) = w32_const_bor_1_B1 (R[8],21845); 
000046  1 0  "01010100011000111000101011001000"   // (R[3]) = w32_const_bor_1_B1 (R[3],35528); 
000047  1 0  "10101000001010101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[10],SP,-60); 
000048  1 0  "10101000001010111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[11],SP,-56); 
000049  1 0  "10101000001011011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[13],SP,-40); 
000050  1 0  "10101000001011001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[12],SP,-52); 
000051  1 0  "01001000000000100011111110110011"   // (R[2]) = lhi_const_1_B1 (16307); 
000052  1 0  "01001000000011111011000100101110"   // (R[15]) = lhi_const_1_B1 (-20178); 
000053  1 0  "01001000000011101011111111100110"   // (R[14]) = lhi_const_1_B1 (-16410); 
000054  1 0  "01001000000011010001101110001101"   // (R[13]) = lhi_const_1_B1 (7053); 
000055  1 0  "01001000000011000100000000000000"   // (R[12]) = lhi_const_1_B1 (16384); 
000056  1 0  "01001000000010111100000000000011"   // (R[11]) = lhi_const_1_B1 (-16381); 
000057  1 0  "01001000000010100001110010001010"   // (R[10]) = lhi_const_1_B1 (7306); 
000058  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000059  1 0  "10101000001010001111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[8],SP,-72); 
000060  1 0  "10101000001010011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[9],SP,-64); 
000061  1 0  "01001000000000110011111111100000"   // (R[3]) = const_3_B1 (); 
000062  1 0  "01010100010000101011100011000101"   // (R[2]) = w32_const_bor_1_B1 (R[2],47301); 
000063  1 0  "01010101111011111001001010000010"   // (R[15]) = w32_const_bor_1_B1 (R[15],37506); 
000064  1 0  "01010101110011100000011001101100"   // (R[14]) = w32_const_bor_1_B1 (R[14],1644); 
000065  1 0  "01010101101011010000000101011001"   // (R[13]) = w32_const_bor_1_B1 (R[13],345); 
000066  1 0  "01010101100011000010101011100101"   // (R[12]) = w32_const_bor_1_B1 (R[12],10981); 
000067  1 0  "01010101011010110011101000100111"   // (R[11]) = w32_const_bor_1_B1 (R[11],14887); 
000068  1 0  "01010101010010100010110101001011"   // (R[10]) = w32_const_bor_1_B1 (R[10],11595); 
000069  1 0  "01001000000010010011110010010001"   // (R[9]) = lhi_const_1_B1 (15505); 
000070  1 0  "01001000000010000011001100010100"   // (R[8]) = lhi_const_1_B1 (13076); 
000071  1 0  "00000000111000110001100000010011"   // (R[3]) = _lt_1_B1 (R[7],R[3]); 
000072  1 0  "01010101001010011010011000100110"   // (R[9]) = w32_const_bor_1_B1 (R[9],42534); 
000073  1 0  "01010101000010000101110000000111"   // (R[8]) = w32_const_bor_1_B1 (R[8],23559); 
000074  1 0  "10101000001010101111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[10],SP,-84); 
000075  1 0  "10101000001010111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[11],SP,-88); 
000076  1 0  "10101000001011001111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[12],SP,-92); 
000077  1 0  "10101000001011011111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[13],SP,-96); 
000078  1 0  "10101000001011101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[14],SP,-100); 
000079  1 0  "10101000001011111111111110011000"   // (__spill_DMw[-104]) = stack_store_bndl_B3 (R[15],SP,-104); 
000080  1 0  "10101000001000101111111110010100"   // (__spill_DMw[-108]) = stack_store_bndl_B3 (R[2],SP,-108); 
000081  1 0  "00100000011000000000000101001111"   // () = nez_br_const_1_B1 (R[3],335); 
000082  1 0  "10101000001010011111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[9],SP,-80); 
000083  1 0  "10101000001010001111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[8],SP,-76); 

// m38;   next: m629, jump target: m419 (next offset: 88)
000084  1 0  "00000000110000000001100000010011"   // (R[3]) = _lt_const_1_B2 (R[6]); 
000085  1 0  "00100000011000000000000010101110"   // () = nez_br_const_1_B1 (R[3],174); 
000086  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000087  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 

// m629;   next: m630 (next offset: 90)
000088  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m630 subroutine call;   next: m639 (next offset: 90)

// m639;   next: m640 (next offset: 95)
000090  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000091  1 0  "01001000000001100011111111100000"   // (R[6]) = const_3_B1 (); 
000092  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 
000093  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000094  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m640 subroutine call;   next: m627 (next offset: 95)

// m627;   next: m49 (next offset: 101)
000095  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000096  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000097  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000098  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m49 subroutine call;   next: m718 (next offset: 101)

// m718;   next: m719 (next offset: 110)
000101  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000102  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000103  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000104  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000105  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000106  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000107  1 0  "10101000001010001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[8],SP,-52); 
000108  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000109  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m719 subroutine call;   next: m728 (next offset: 110)

// m728;   next: m729 (next offset: 115)
000110  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000111  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000112  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000113  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000114  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m729 subroutine call;   next: m733 (next offset: 115)

// m733;   next: m734 (next offset: 120)
000115  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000116  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000117  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000118  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000119  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m734 subroutine call;   next: m743 (next offset: 120)

// m743;   next: m744 (next offset: 125)
000120  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000121  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000122  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000123  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000124  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m744 subroutine call;   next: m748 (next offset: 125)

// m748;   next: m749 (next offset: 130)
000125  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000126  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000127  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000128  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000129  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m749 subroutine call;   next: m758 (next offset: 130)

// m758;   next: m759 (next offset: 135)
000130  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000131  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000132  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000133  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000134  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m759 subroutine call;   next: m763 (next offset: 135)

// m763;   next: m764 (next offset: 140)
000135  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000136  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000137  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000138  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000139  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m764 subroutine call;   next: m773 (next offset: 140)

// m773;   next: m774 (next offset: 145)
000140  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000141  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000142  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000143  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000144  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m774 subroutine call;   next: m778 (next offset: 145)

// m778;   next: m779 (next offset: 150)
000145  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000146  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000147  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000148  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000149  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m779 subroutine call;   next: m788 (next offset: 150)

// m788;   next: m789 (next offset: 155)
000150  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000151  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000152  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000153  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000154  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m789 subroutine call;   next: m793 (next offset: 155)

// m793;   next: m794 (next offset: 160)
000155  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000156  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000157  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000158  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000159  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m794 subroutine call;   next: m803 (next offset: 160)

// m803;   next: m804 (next offset: 169)
000160  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000161  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000162  1 0  "01010000001001101111111110010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000163  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000164  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000165  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000166  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000167  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000168  1 0  "01010000001001111111111110011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 

// m804 subroutine call;   next: m807 (next offset: 169)

// m807;   next: m808 (next offset: 174)
000169  1 0  "01010000001001001111111110011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-100],SP,-100); 
000170  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000171  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000172  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000173  1 0  "01010000001001011111111110100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-96],SP,-96); 

// m808 subroutine call;   next: m817 (next offset: 174)

// m817;   next: m818 (next offset: 179)
000174  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000175  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000176  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000177  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000178  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m818 subroutine call;   next: m822 (next offset: 179)

// m822;   next: m823 (next offset: 184)
000179  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000180  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000181  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000183  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m823 subroutine call;   next: m832 (next offset: 184)

// m832;   next: m833 (next offset: 189)
000184  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000185  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000186  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000187  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000188  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m833 subroutine call;   next: m837 (next offset: 189)

// m837;   next: m838 (next offset: 194)
000189  1 0  "01010000001001001111111110101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000190  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000191  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000192  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000193  1 0  "01010000001001011111111110101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 

// m838 subroutine call;   next: m847 (next offset: 194)

// m847;   next: m848 (next offset: 199)
000194  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000195  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000196  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000197  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000198  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m848 subroutine call;   next: m852 (next offset: 199)

// m852;   next: m853 (next offset: 204)
000199  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000200  1 0  "01001000000001000011111111110000"   // (R[4]) = const_5_B1 (); 
000201  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000202  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000203  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m853 subroutine call;   next: m862 (next offset: 204)

// m862;   next: m863 (next offset: 209)
000204  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000205  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000206  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000207  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000208  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m863 subroutine call;   next: m867 (next offset: 209)

// m867;   next: m868 (next offset: 214)
000209  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000210  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000211  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000212  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000213  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m868 subroutine call;   next: m687 (next offset: 214)

// m687;   next: m688 (next offset: 223)
000214  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000215  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000216  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 
000217  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000218  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000219  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000220  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000221  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000222  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m688 subroutine call;   next: m697 (next offset: 223)

// m697;   next: m698 (next offset: 228)
000223  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000224  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000225  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000226  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000227  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m698 subroutine call;   next: m702 (next offset: 228)

// m702;   next: m703 (next offset: 237)
000228  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000229  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 
000230  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 
000231  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000232  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000233  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000234  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000235  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000236  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m703 subroutine call;   next: m713 (next offset: 237)

// m713;   next: m714 (next offset: 242)
000237  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000238  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000239  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000240  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000241  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m714 subroutine call;   next: m871 (next offset: 242)

// m871;   next: m872 (next offset: 247)
000242  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000243  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000244  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000245  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000246  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m872 subroutine call;   next: m881 (next offset: 247)

// m881;   next: m882 (next offset: 252)
000247  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000248  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000249  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000250  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000251  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m882 subroutine call;   next: m886 (next offset: 252)

// m886;   next: m887 (next offset: 257)
000252  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000253  1 0  "01001000000001000100000000000000"   // (R[4]) = const_1_B1 (); 
000254  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000255  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000256  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m887 subroutine call;   next: m891 (next offset: 257)

// m891, jump target: m55 (next offset: 261)
000257  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000258  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000259  1 0  "00100100000000000000000101001110"   // () = j_const_1_B1 (334); 
000260  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m419;   next: m420 (next offset: 263)
000261  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000262  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m420 subroutine call;   next: m429 (next offset: 263)

// m429;   next: m430 (next offset: 268)
000263  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000264  1 0  "01001000000001100011111111100000"   // (R[6]) = const_3_B1 (); 
000265  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 
000266  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000267  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m430 subroutine call;   next: m434 (next offset: 268)

// m434;   next: m435 (next offset: 276)
000268  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000269  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000270  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000271  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000272  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 
000273  1 0  "10101000001001001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[4],SP,-52); 
000274  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000275  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m435 subroutine call;   next: m444 (next offset: 276)

// m444;   next: m445 (next offset: 281)
000276  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000277  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000278  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000279  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000280  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m445 subroutine call;   next: m449 (next offset: 281)

// m449;   next: m450 (next offset: 286)
000281  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000282  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000283  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000284  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000285  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m450 subroutine call;   next: m459 (next offset: 286)

// m459;   next: m460 (next offset: 291)
000286  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000287  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000288  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000289  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000290  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m460 subroutine call;   next: m464 (next offset: 291)

// m464;   next: m465 (next offset: 296)
000291  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000292  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000293  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000294  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000295  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m465 subroutine call;   next: m474 (next offset: 296)

// m474;   next: m475 (next offset: 301)
000296  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000297  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000298  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000299  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000300  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m475 subroutine call;   next: m479 (next offset: 301)

// m479;   next: m480 (next offset: 306)
000301  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000302  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000303  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000304  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000305  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m480 subroutine call;   next: m489 (next offset: 306)

// m489;   next: m490 (next offset: 311)
000306  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000307  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000308  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000309  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000310  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m490 subroutine call;   next: m494 (next offset: 311)

// m494;   next: m495 (next offset: 316)
000311  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000312  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000313  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000314  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000315  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m495 subroutine call;   next: m504 (next offset: 316)

// m504;   next: m505 (next offset: 321)
000316  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000317  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000318  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000319  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000320  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m505 subroutine call;   next: m509 (next offset: 321)

// m509;   next: m510 (next offset: 326)
000321  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000322  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000323  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000324  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000325  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m510 subroutine call;   next: m519 (next offset: 326)

// m519;   next: m520 (next offset: 335)
000326  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000327  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000328  1 0  "01010000001001101111111110010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000329  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000330  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000331  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000332  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000333  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000334  1 0  "01010000001001111111111110011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 

// m520 subroutine call;   next: m523 (next offset: 335)

// m523;   next: m524 (next offset: 340)
000335  1 0  "01010000001001001111111110011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-100],SP,-100); 
000336  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000337  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000338  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000339  1 0  "01010000001001011111111110100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-96],SP,-96); 

// m524 subroutine call;   next: m533 (next offset: 340)

// m533;   next: m534 (next offset: 345)
000340  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000341  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000342  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000343  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000344  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m534 subroutine call;   next: m538 (next offset: 345)

// m538;   next: m539 (next offset: 350)
000345  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000346  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000347  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000348  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000349  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m539 subroutine call;   next: m548 (next offset: 350)

// m548;   next: m549 (next offset: 355)
000350  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000351  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000352  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000353  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000354  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m549 subroutine call;   next: m553 (next offset: 355)

// m553;   next: m554 (next offset: 360)
000355  1 0  "01010000001001001111111110101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000356  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000357  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000358  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000359  1 0  "01010000001001011111111110101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 

// m554 subroutine call;   next: m563 (next offset: 360)

// m563;   next: m564 (next offset: 365)
000360  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000361  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000362  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000363  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000364  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m564 subroutine call;   next: m568 (next offset: 365)

// m568;   next: m569 (next offset: 370)
000365  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000366  1 0  "01001000000001000011111111110000"   // (R[4]) = const_5_B1 (); 
000367  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000368  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000369  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m569 subroutine call;   next: m417 (next offset: 370)

// m417;   next: m43 (next offset: 377)
000370  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000371  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000372  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000373  1 0  "10101000001001101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[6],SP,-32); 
000374  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000375  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000376  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m43 subroutine call;   next: m578 (next offset: 377)

// m578;   next: m579 (next offset: 386)
000377  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000378  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000379  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000380  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000381  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000382  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000383  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000384  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000385  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m579 subroutine call;   next: m588 (next offset: 386)

// m588;   next: m589 (next offset: 391)
000386  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000387  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000388  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000389  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000390  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m589 subroutine call;   next: m594 (next offset: 391)

// m594;   next: m595 (next offset: 396)
000391  1 0  "01010000001001101111111110110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 
000392  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000393  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000394  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000395  1 0  "01010000001001111111111110110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m595 subroutine call;   next: m604 (next offset: 396)

// m604;   next: m605 (next offset: 401)
000396  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000397  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000398  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000399  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000400  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m605 subroutine call;   next: m609 (next offset: 401)

// m609;   next: m610 (next offset: 406)
000401  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000402  1 0  "01001000000001000100000000000000"   // (R[4]) = const_1_B1 (); 
000403  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000404  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000405  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m610 subroutine call;   next: m619 (next offset: 406)

// m619;   next: m620 (next offset: 411)
000406  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000407  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000408  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000409  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000410  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m620 subroutine call;   next: m46 (next offset: 411)

// m46 (next offset: 418)
000411  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000412  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000413  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000414  1 0  "10101000001001101111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[6],SP,-124); 
000415  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000416  1 0  "10101000001001011111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[5],SP,-120); 
000417  1 0  "00001000001000011111111110001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-116,SP,SP); 

// m27;   next: m33, jump target: m34 (next offset: 425)
000418  1 0  "01001000000000110011110001100000"   // (R[3]) = const_2_B1 (); 
000419  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000420  1 0  "10101000001001101111111110010000"   // (__spill_DMw[-112]) = stack_store_bndl_B3 (R[6],SP,-112); 
000421  1 0  "00000000111000110011100000001110"   // (R[7]) = _gt_1_B1 (R[7],R[3]); 
000422  1 0  "00100000111000000000000000000111"   // () = nez_br_const_1_B1 (R[7],7); 
000423  1 0  "01001000000001000011111111111001"   // (R[4]) = lhi_const_1_B1 (16377); 
000424  1 0  "01010100100001000010000111111011"   // (R[4]) = w32_const_bor_1_B1 (R[4],8699); 

// m33 (next offset: 431)
000425  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000426  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000427  1 0  "10101000001001001111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[4],SP,-124); 
000428  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000429  1 0  "10101000001001101111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[6],SP,-120); 
000430  1 0  "00001000001000011111111110001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-116,SP,SP); 

// m34;   next: m211 (next offset: 431)

// m211;   next: m212 (next offset: 435)
000431  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000432  1 0  "10101000001001001111111110001100"   // (__spill_DMw[-116]) = stack_store_bndl_B3 (R[4],SP,-116); 
000433  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000434  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m212 subroutine call;   next: m221 (next offset: 435)

// m221;   next: m222 (next offset: 443)
000435  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000436  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000437  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000438  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000439  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 
000440  1 0  "10101000001001001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[4],SP,-52); 
000441  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000442  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m222 subroutine call;   next: m226 (next offset: 443)

// m226;   next: m227 (next offset: 448)
000443  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000444  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000445  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000446  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000447  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m227 subroutine call;   next: m236 (next offset: 448)

// m236;   next: m237 (next offset: 453)
000448  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000449  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000450  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000451  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000452  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m237 subroutine call;   next: m241 (next offset: 453)

// m241;   next: m242 (next offset: 458)
000453  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000454  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000455  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000456  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000457  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m242 subroutine call;   next: m251 (next offset: 458)

// m251;   next: m252 (next offset: 463)
000458  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000459  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000460  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000461  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000462  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m252 subroutine call;   next: m256 (next offset: 463)

// m256;   next: m257 (next offset: 468)
000463  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000464  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000465  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000466  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000467  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m257 subroutine call;   next: m266 (next offset: 468)

// m266;   next: m267 (next offset: 473)
000468  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000469  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000470  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000471  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000472  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m267 subroutine call;   next: m271 (next offset: 473)

// m271;   next: m272 (next offset: 478)
000473  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000474  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000475  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000476  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000477  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m272 subroutine call;   next: m281 (next offset: 478)

// m281;   next: m282 (next offset: 483)
000478  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000479  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000480  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000481  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000482  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m282 subroutine call;   next: m286 (next offset: 483)

// m286;   next: m287 (next offset: 488)
000483  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000484  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000485  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000486  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000487  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m287 subroutine call;   next: m296 (next offset: 488)

// m296;   next: m297 (next offset: 493)
000488  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000489  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000490  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000491  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000492  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m297 subroutine call;   next: m301 (next offset: 493)

// m301;   next: m302 (next offset: 502)
000493  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000494  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000495  1 0  "01010000001001101111111110010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000496  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000497  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000498  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000499  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000500  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000501  1 0  "01010000001001111111111110011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 

// m302 subroutine call;   next: m311 (next offset: 502)

// m311;   next: m312 (next offset: 507)
000502  1 0  "01010000001001001111111110011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-100],SP,-100); 
000503  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000504  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000505  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000506  1 0  "01010000001001011111111110100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-96],SP,-96); 

// m312 subroutine call;   next: m316 (next offset: 507)

// m316;   next: m317 (next offset: 512)
000507  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000508  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000509  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000510  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000511  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m317 subroutine call;   next: m326 (next offset: 512)

// m326;   next: m327 (next offset: 517)
000512  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000513  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000514  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000515  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000516  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m327 subroutine call;   next: m331 (next offset: 517)

// m331;   next: m332 (next offset: 522)
000517  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000518  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000519  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000520  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000521  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m332 subroutine call;   next: m341 (next offset: 522)

// m341;   next: m342 (next offset: 527)
000522  1 0  "01010000001001001111111110101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 
000523  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000524  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000525  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000526  1 0  "01010000001001011111111110101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 

// m342 subroutine call;   next: m346 (next offset: 527)

// m346;   next: m347 (next offset: 532)
000527  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000528  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000529  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000530  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000531  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m347 subroutine call;   next: m356 (next offset: 532)

// m356;   next: m357 (next offset: 537)
000532  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000533  1 0  "01001000000001000011111111110000"   // (R[4]) = const_5_B1 (); 
000534  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000535  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000536  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m357 subroutine call;   next: m361 (next offset: 537)

// m361;   next: m362 (next offset: 542)
000537  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000538  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000539  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000540  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000541  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m362 subroutine call;   next: m371 (next offset: 542)

// m371;   next: m372 (next offset: 547)
000542  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 
000543  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000544  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000545  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000546  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m372 subroutine call;   next: m376 (next offset: 547)

// m376;   next: m377 (next offset: 552)
000547  1 0  "01010000001001001111111110110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 
000548  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000549  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000550  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000551  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m377 subroutine call;   next: m386 (next offset: 552)

// m386;   next: m387 (next offset: 557)
000552  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 
000553  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000554  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000555  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000556  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m387 subroutine call;   next: m391 (next offset: 557)

// m391;   next: m392 (next offset: 562)
000557  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000558  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000559  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000560  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000561  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m392 subroutine call;   next: m895 (next offset: 562)

// m895, jump target: m55 (next offset: 566)
000562  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000563  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000564  1 0  "00100100000000000000000000011101"   // () = j_const_1_B1 (29); 
000565  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m162;   next: m11, jump target: m19 (next offset: 572)
000566  1 0  "01001000000001001100000000010000"   // (R[4]) = const_4_B1 (); 
000567  1 0  "00000000100001110010000000000001"   // (R[4],) = _pl_1_B1 (R[7],R[4]); 
000568  1 0  "00000000100001010011100000001010"   // (R[7]) = _or_1_B1 (R[4],R[5]); 
000569  1 0  "00100000111000000000000000001100"   // () = nez_br_const_2_B1 (R[7],12); 
000570  1 0  "01001000000001000000000000000000"   // (R[4]) = const_6_B3 (); 
000571  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m11;   next: m15, jump target: m14 (next offset: 576)
000572  1 0  "00000000110000000011000000001110"   // (R[6]) = _gt_const_1_B2 (R[6]); 
000573  1 0  "00100000110000000000000000000101"   // () = nez_br_const_1_B1 (R[6],5); 
000574  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000575  1 0  "10101000001001001111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[4],SP,-124); 

// m15;   next: m18 (next offset: 580)
000576  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000577  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000578  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000579  1 0  "10101000001001101111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[6],SP,-124); 

// m14;   next: m18 (next offset: 580)

// m18 (next offset: 583)
000580  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000581  1 0  "10101000001001001111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[4],SP,-120); 
000582  1 0  "00001000001000011111111110001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-116,SP,SP); 

// m19;   next: m169 (next offset: 583)

// m169;   next: m170 (next offset: 586)
000583  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000584  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000585  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m170 subroutine call;   next: m179 (next offset: 586)

// m179;   next: m180 (next offset: 591)
000586  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000587  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000588  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000589  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000590  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m180 subroutine call;   next: m894 (next offset: 591)

// m894;   next: m55 (next offset: 594)
000591  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000592  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000593  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m55 (next offset: /)
000594  1 0  "10101000001001001111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[4],SP,-124); 
000595  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000596  1 0  "10101000001001101111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[6],SP,-120); 
000597  1 0  "00001000001000011111111110001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-116,SP,SP); 

