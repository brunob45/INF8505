
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i strtol-strtol_ tlx


// m504;   next: m330 (next offset: 7)
000000  1 0  "00001000001000010000000000111000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (56,SP,SP); 
000001  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000002  1 0  "01010100011010010000000000000000"   // (R[9]) = w32_const_bor_1_B1 (R[3],0); 
000003  1 0  "01010100100001110000000000000000"   // R[7] = R[4]; 
000004  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000005  1 0  "10101000001010011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[9],SP,-8); 
000006  1 0  "01010100000000110000000000000001"   // (R[3]) = const_10_B2 (); 

// m330;   next: m23, jump target: m330 (next offset: 14)
000007  1 0  "00000000111010000000100000110001"   // (R[8],R[7]) = load__pl_const_1_B1 (R[7],DMb); 
000008  1 0  "00000001000010010101000000000001"   // (R[10],) = _pl_2_B1 (R[9],R[8]); 
000009  1 0  "00111001010010100000000000000000"   // (R[10]) = load_1_B1 (R[10],DMb_stat); 
000010  1 0  "00010001010010100000000001000000"   // (R[10]) = _ad_const_4_B1 (R[10]); 
000011  1 0  "00100001010000001111111111111010"   // () = br_nez_const_1_B1 (R[10],-6); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23;   next: m28, jump target: m26 (next offset: 23)
000014  1 0  "01010100111010100000000000000000"   // R[10] = R[7]; 
000015  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000016  1 0  "01100101000010110000000000101101"   // (R[11]) = _eq_const_5_B1 (R[8]); 
000017  1 0  "00000000111010010000100000110000"   // (R[9],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000018  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000019  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000020  1 0  "00100001011000000000000000001011"   // () = nez_br_const_1_B1 (R[11],11); 
000021  1 0  "10101000001001111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[7],SP,-28); 
000022  1 0  "10101000001010011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[9],SP,-24); 

// m28;   next: m31, jump target: m32 (next offset: 27)
000023  1 0  "10010101000001010000000000101011"   // (R[5]) = _ne_const_1_B1 (R[8]); 
000024  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000025  1 0  "01001000000000110000000000000000"   // (R[3]) = const_9_B3 (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m31;   next: m508 (next offset: 29)
000027  1 0  "01010100111010100000000000000000"   // R[10] = R[7]; 
000028  1 0  "01010101001010000000000000000000"   // R[8] = R[9]; 

// m32;   next: m508 (next offset: 29)

// m508;   next: m353 (next offset: 33)
000029  1 0  "10101000001010001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[8],SP,-24); 
000030  1 0  "01010101010001110000000000000000"   // R[7] = R[10]; 
000031  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 
000032  1 0  "01010101000010010000000000000000"   // R[9] = R[8]; 

// m26;   next: m353 (next offset: 33)

// m353;   next: m62, jump target: m63 (next offset: 46)
000033  1 0  "00000000110000000010100000001011"   // (R[5]) = eqz_1_B1 (R[6]); 
000034  1 0  "00110100111010000000000000000000"   // (R[8]) = load_2_B1 (R[7],DMb); 
000035  1 0  "01100100110001110000000000010000"   // (R[7]) = _eq_const_2_B1 (R[6]); 
000036  1 0  "01100101000001000000000001011000"   // (R[4]) = _eq_const_4_B1 (R[8]); 
000037  1 0  "01100101001010010000000000110000"   // (R[9]) = _eq_const_1_B1 (R[9]); 
000038  1 0  "01100101000010000000000001111000"   // (R[8]) = _eq_const_3_B1 (R[8]); 
000039  1 0  "00000000101001110010100000001010"   // (R[5]) = lor_1_B1 (R[5],R[7]); 
000040  1 0  "00000000101010010010100000000011"   // (R[5]) = land_1_B1 (R[5],R[9]); 
000041  1 0  "00000000100010000010000000001010"   // (R[4]) = lor_1_B1 (R[8],R[4]); 
000042  1 0  "00000000100001010010000000000011"   // (R[4]) = land_1_B1 (R[5],R[4]); 
000043  1 0  "00010100100000000000000000001001"   // () = eqz_br_const_2_B1 (R[4],9); 
000044  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000045  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 

// m62;   next: m356 (next offset: 54)
000046  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000047  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000048  1 0  "00001000101001000000000000000001"   // (R[4],MC) = _pl_const_3_B1 (R[5]); 
000049  1 0  "01010100000001010000000000010000"   // (R[5]) = const_8_B2 (); 
000050  1 0  "00000000100001100000100000110000"   // (R[6],R[4]) = load__pl_const_2_B1 (R[4],DMb); 
000051  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
000052  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
000053  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m63;   next: m356 (next offset: 54)

// m356;   next: m69, jump target: m75 (next offset: 57)
000054  1 0  "00100000101000000000000000001000"   // () = br_nez_const_1_B1 (R[5],8); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m69;   next: m73, jump target: m72 (next offset: 62)
000057  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000058  1 0  "01100100100001000000000000110000"   // (R[4]) = _eq_const_1_B1 (R[4]); 
000059  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000060  1 0  "01010100000001010000000000001000"   // (R[5]) = const_7_B2 (); 
000061  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m73;   next: m509 (next offset: 64)
000062  1 0  "01010100000001010000000000001010"   // (R[5]) = const_6_B2 (); 
000063  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m72;   next: m509 (next offset: 64)

// m509;   next: m359 (next offset: 64)

// m75;   next: m359 (next offset: 64)

// m359;   next: m81, jump target: m80 (next offset: 68)
000064  1 0  "01001000000001001000000000000000"   // (R[4]) = const_5_B1 (); 
000065  1 0  "00100000011000000000000000000010"   // () = br_nez_const_1_B1 (R[3],2); 
000066  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000067  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 

// m81;   next: m445 (next offset: 69)
000068  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m80;   next: m445 (next offset: 69)

// m445;   next: m446 (next offset: 72)
000069  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000070  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000071  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m446 subroutine call;   next: m510 (next offset: 72)

// m510;   next: m87, jump target: m94 (next offset: 76)
000072  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000073  1 0  "00010100101000000000000000001011"   // () = eqz_br_const_1_B1 (R[5],11); 
000074  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000075  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m87;   next: m90, jump target: m91 (next offset: 80)
000076  1 0  "00000000110000000010100000010000"   // (R[5]) = _le_const_1_B2 (R[6]); 
000077  1 0  "00100000101000000000000000000110"   // () = nez_br_const_1_B1 (R[5],6); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90;   next: m93 (next offset: 85)
000080  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000081  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_3_B1 (R[5]); 
000082  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "00000000110001000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[4]); 
000084  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 

// m91;   next: m93 (next offset: 85)

// m93;   next: m503 (next offset: 86)
000085  1 0  "00000000000001100011000000011000"   // (R[6],MC) = _mi_const_1_B1 (R[6]); 

// m94;   next: m503 (next offset: 86)

// m503;   next: m366 (next offset: 97)
000086  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000087  1 0  "01010100101001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[5],0); 
000088  1 0  "01010000001010101111111111101000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000089  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000090  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000091  1 0  "01001000000010000000000000000000"   // (R[8]) = const_9_B3 (); 
000092  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000093  1 0  "10101000001001101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[6],SP,-28); 
000094  1 0  "10101000001010001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[8],SP,-44); 
000095  1 0  "01001000000001000000000000000000"   // (R[4]) = const_9_B3 (); 
000096  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m366;   next: m370, jump target: m118 (next offset: 104)
000097  1 0  "00010001010010110000000011111111"   // (R[11]) = __uchar_1_B1 (R[10]); 
000098  1 0  "00000000011010110101100000000001"   // (R[11],) = _pl_2_B1 (R[3],R[11]); 
000099  1 0  "00111001011010110000000000000000"   // (R[11]) = load_1_B1 (R[11],DMb_stat); 
000100  1 0  "00010001011011000000000000000100"   // (R[12]) = _ad_const_3_B1 (R[11]); 
000101  1 0  "00100001100000000000000000001100"   // () = br_nez_const_1_B1 (R[12],12); 
000102  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000103  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m370;   next: m374, jump target: m2 (next offset: 108)
000104  1 0  "00010001011011000000000000000011"   // (R[12]) = _ad_const_2_B1 (R[11]); 
000105  1 0  "00010101100000000000000001001100"   // () = eqz_br_const_1_B1 (R[12],76); 
000106  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000107  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m374;   next: m152, jump target: m151 (next offset: 112)
000108  1 0  "00010001011011000000000000000010"   // (R[12]) = _ad_const_1_B1 (R[11]); 
000109  1 0  "00100001100000000000000000000010"   // () = br_nez_const_1_B1 (R[12],2); 
000110  1 0  "01010100000010110000000000110111"   // (R[11]) = const_1_B2 (); 
000111  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m152;   next: m154 (next offset: 113)
000112  1 0  "01010100000010110000000001010111"   // (R[11]) = const_2_B2 (); 

// m151;   next: m154 (next offset: 113)

// m154, jump target: m159 (next offset: 115)
000113  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000114  1 0  "00000001010010110101000000011000"   // (R[10],MC) = _mi_1_B1 (R[10],R[11]); 

// m118;   next: m159 (next offset: 116)
000115  1 0  "00001001010010101111111111010000"   // (R[10],MC) = _pl_const_2_B1 (R[10]); 

// m159;   next: m164, jump target: m2 (next offset: 120)
000116  1 0  "00000001010001010101100000001100"   // (R[11]) = _ge_1_B1 (R[10],R[5]); 
000117  1 0  "00100001011000000000000001000000"   // () = nez_br_const_1_B1 (R[11],64); 
000118  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000119  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m164;   next: m166 (next offset: 120)

// m166;   next: m430, jump target: m169 (next offset: 124)
000120  1 0  "00000001000000000101100000010011"   // (R[11]) = _lt_const_1_B2 (R[8]); 
000121  1 0  "00100001011000000000000000111010"   // () = nez_br_const_1_B1 (R[11],58); 
000122  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000123  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m430;   next: m431 (next offset: 134)
000124  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000125  1 0  "01010000001000111111111111011000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000126  1 0  "00000000011001000001100000001011"   // (R[3]) = _eq_1_B1 (R[4],R[3]); 
000127  1 0  "00000001010001100011000000001110"   // (R[6]) = _gt_1_B1 (R[10],R[6]); 
000128  1 0  "00000000011001100011000000000011"   // (R[6]) = land_1_B1 (R[3],R[6]); 
000129  1 0  "10101000001001101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[6],SP,-52); 
000130  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000131  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000132  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000133  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m431 subroutine call;   next: m514 (next offset: 134)

// m514;   next: m388, jump target: m381 (next offset: 139)
000134  1 0  "01010000001001101111111111100000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000135  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000136  1 0  "00100000110000000000000000010111"   // () = br_nez_const_1_B1 (R[6],23); 
000137  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000138  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m388;   next: m210, jump target: m209 (next offset: 144)
000139  1 0  "00000000100001010010100000001110"   // (R[5]) = _gt_1_B1 (R[4],R[5]); 
000140  1 0  "00000000101001110010000000001010"   // (R[4]) = lor_1_B1 (R[5],R[7]); 
000141  1 0  "00100000100000000000000000001000"   // () = nez_br_const_1_B1 (R[4],8); 
000142  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000143  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m210, jump target: m515 (next offset: 151)
000144  1 0  "00000000011001010010000000000001"   // (R[4],) = _pl_1_B1 (R[3],R[5]); 
000145  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000146  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000147  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000148  1 0  "01010100000010000000000000000001"   // (R[8]) = const_10_B2 (); 
000149  1 0  "00100100000000000000000000011111"   // () = j_const_1_B1 (31); 
000150  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m209, jump target: m515 (next offset: 161)
000151  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000152  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000153  1 0  "01010100000001100000000000100010"   // (R[6]) = const_4_B2 (); 
000154  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000155  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_2_B1 (R[6],R[5],DMb_stat); 
000156  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000157  1 0  "00001000000010001111111111111111"   // (R[8]) = const_3_B1 (); 
000158  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000159  1 0  "00100100000000000000000000010101"   // () = j_const_1_B1 (21); 
000160  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m381;   next: m191, jump target: m190 (next offset: 166)
000161  1 0  "00000000100001010010100000010011"   // (R[5]) = _lt_1_B1 (R[4],R[5]); 
000162  1 0  "00000000101001110010000000001010"   // (R[4]) = lor_1_B1 (R[5],R[7]); 
000163  1 0  "00100000100000000000000000000111"   // () = nez_br_const_1_B1 (R[4],7); 
000164  1 0  "01010100000010000000000000000001"   // (R[8]) = const_10_B2 (); 
000165  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m191, jump target: m515 (next offset: 172)
000166  1 0  "00000000011001010010000000011000"   // (R[4],MC) = _mi_1_B1 (R[3],R[5]); 
000167  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000168  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000169  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000170  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000171  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m190;   next: m515 (next offset: 181)
000172  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000173  1 0  "01010100000001100000000000100010"   // (R[6]) = const_4_B2 (); 
000174  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_2_B1 (R[6],R[5],DMb_stat); 
000175  1 0  "01001000000001001000000000000000"   // (R[4]) = const_5_B1 (); 
000176  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000177  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000178  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000179  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000180  1 0  "00001000000010001111111111111111"   // (R[8]) = const_3_B1 (); 

// m515;   next: m214 (next offset: 181)

// m169;   next: m214 (next offset: 181)

// m214, jump target: m366 (next offset: 183)
000181  1 0  "00100111111111111111111110101011"   // () = j_const_1_B1 (-85); 
000182  1 0  "00000000111010100000100000110001"   // (R[10],R[7]) = load__pl_const_1_B1 (R[7],DMb); 

// m2;   next: m391 (next offset: 183)

// m391;   next: m394, jump target: m231 (next offset: 187)
000183  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000184  1 0  "00010100101000000000000000000110"   // () = eqz_br_const_1_B1 (R[5],6); 
000185  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000186  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m394;   next: m227, jump target: m228 (next offset: 190)
000187  1 0  "00010101000000000000000000000010"   // () = eqz_br_const_1_B1 (R[8],2); 
000188  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000189  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m227;   next: m230 (next offset: 191)
000190  1 0  "00001000111001001111111111111111"   // (R[4],MC) = _pl_const_1_B1 (R[7]); 

// m228;   next: m230 (next offset: 191)

// m230;   next: m234 (next offset: 192)
000191  1 0  "10101000101001000000000000000000"   // (DMb) = store_1_B1 (R[4],R[5],DMb); 

// m231;   next: m234 (next offset: 192)

// m234 (next offset: /)
000192  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000193  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000194  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000195  1 0  "00001000001000011111111111001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-56,SP,SP); 
000196  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

