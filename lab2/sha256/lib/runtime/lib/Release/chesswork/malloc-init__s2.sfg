
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:47 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i malloc-init_ tlx

[
    0 : __malloc_void_init typ=iword bnd=i stl=PM
   20 : __sp typ=w32 bnd=b stl=SP
   24 : __malloc_sentinel typ=w08 bnd=i sz=4 algn=4 stl=DMb_stat tref=__PMBlock__DMb_stat
   26 : __malloc_pool typ=w08 bnd=i sz=16400 algn=4 stl=DMb tref=__A16400__cchar_DMb
   29 : __extDMb_MBlock__head typ=w08 bnd=b stl=DMb
   31 : __extDMb_MBlock__u typ=w08 bnd=b stl=DMb
   38 : __ptr_sentinel typ=w32 val=0a bnd=m adro=24
   40 : __ptr_pool typ=w32 val=0a bnd=m adro=26
   41 : __la typ=w32 bnd=p tref=w32__
  108 : __ct_1024 typ=w32 val=1024f bnd=m
  131 : __fchtmp typ=w32 bnd=m
  164 : __fchtmp typ=w32 bnd=m
  199 : __ct_m2147483648 typ=int16p val=-32768f bnd=m
  204 : __shv___ptr_pool typ=w32 bnd=m
  217 : __either typ=bool bnd=m
  218 : __trgt typ=int16 val=2j bnd=m
  222 : __seff typ=any bnd=m
  229 : __ptr_sentinel_part_0 typ=int16p val=0a bnd=m
  230 : __ptr_sentinel_part_1 typ=uint16 val=0a bnd=m
  231 : __ptr_pool_part_0 typ=int16p val=0a bnd=m
  232 : __ptr_pool_part_1 typ=uint16 val=0a bnd=m
  233 : __inl_L typ=w32 bnd=m tref=w32__
  236 : __tmp typ=w32 bnd=m
]
F__malloc_void_init {
    #23 off=0 nxt=6 tgt=7
    (__sp.19 var=20) source ()  <32>;
    (__malloc_sentinel.23 var=24) source ()  <36>;
    (__malloc_pool.25 var=26) source ()  <38>;
    (__extDMb_MBlock__head.28 var=29) source ()  <41>;
    (__extDMb_MBlock__u.30 var=31) source ()  <43>;
    (__la.40 var=41 stl=R off=2) inp ()  <53>;
    (__trgt.379 var=218) const_inp ()  <460>;
    <33> {
      (__shv___ptr_pool.348 var=204 stl=aluC __seff.409 var=222 stl=aluM) _pl_const_1_B1 (__ptr_pool.422)  <488>;
      (__ptr_pool.422 var=40 stl=aluA) aluA_2_dr_move_R_2_w32 (__ptr_pool.487)  <565>;
      (__seff.424 var=222 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.409)  <566>;
      (__shv___ptr_pool.426 var=204 stl=R off=4) R_2_dr_move_aluC_2_w32 (__shv___ptr_pool.348)  <568>;
    } stp=2;
    <34> {
      (__malloc_sentinel.73 var=24) store_1_B1 (__shv___ptr_pool.445 __ptr_sentinel.446 __malloc_sentinel.23)  <489>;
      (__shv___ptr_pool.445 var=204 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__shv___ptr_pool.426)  <587>;
      (__ptr_sentinel.446 var=38 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__ptr_sentinel.486)  <588>;
    } stp=14;
    <35> {
      (__extDMb_MBlock__head.98 var=29 __extDMb_MBlock__u.99 var=31 __malloc_pool.100 var=26) store_2_B1 (__ct_m2147483648.451 __shv___ptr_pool.425 __extDMb_MBlock__head.28 __extDMb_MBlock__u.30 __malloc_pool.25)  <490>;
      (__shv___ptr_pool.425 var=204 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__shv___ptr_pool.426)  <567>;
      (__ct_m2147483648.451 var=199 stl=dmw_wr) dmw_wr_2_dr_move_R_2_int16p (__ct_m2147483648.452)  <592>;
    } stp=4;
    <36> {
      (__extDMb_MBlock__head.113 var=29 __extDMb_MBlock__u.114 var=31 __malloc_pool.115 var=26) store__pl_const_3_B1 (__shv___ptr_pool.427 __ptr_pool.428 __extDMb_MBlock__head.98 __extDMb_MBlock__u.99 __malloc_pool.100)  <491>;
      (__shv___ptr_pool.427 var=204 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__shv___ptr_pool.426)  <569>;
      (__ptr_pool.428 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <570>;
    } stp=5;
    <37> {
      (__extDMb_MBlock__head.128 var=29 __extDMb_MBlock__u.129 var=31 __malloc_pool.130 var=26) store__pl_const_4_B1 (__shv___ptr_pool.429 __ptr_pool.430 __extDMb_MBlock__head.113 __extDMb_MBlock__u.114 __malloc_pool.115)  <492>;
      (__shv___ptr_pool.429 var=204 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__shv___ptr_pool.426)  <571>;
      (__ptr_pool.430 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <572>;
    } stp=6;
    <38> {
      (__extDMb_MBlock__head.155 var=29 __extDMb_MBlock__u.156 var=31 __malloc_pool.157 var=26) store_3_B1 (__ct_1024.454 __ptr_pool.431 __extDMb_MBlock__head.128 __extDMb_MBlock__u.129 __malloc_pool.130)  <493>;
      (__ptr_pool.431 var=40 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__ptr_pool.487)  <573>;
      (__ct_1024.454 var=108 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__ct_1024.455)  <594>;
    } stp=8;
    <39> {
      (__fchtmp.173 var=131 stl=dmw_rd) load__pl_const_1_B1 (__ptr_pool.432 __extDMb_MBlock__head.155 __extDMb_MBlock__u.156 __malloc_pool.157)  <494>;
      (__ptr_pool.432 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <574>;
      (__fchtmp.434 var=131 stl=R off=5) R_2_dr_move_dmw_rd_2_w32 (__fchtmp.173)  <576>;
    } stp=10;
    <40> {
      () eqz_br_const_1_B1 (__fchtmp.433 __trgt.379)  <495>;
      (__fchtmp.433 var=131 stl=eqA) eqA_2_dr_move_R_2_w32 (__fchtmp.434)  <575>;
    } stp=12;
    <51> {
      (__ct_m2147483648.453 var=199 stl=__CTaluU_int16p_cstP16_EX) const_2_B1 ()  <538>;
      (__ct_m2147483648.452 var=199 stl=R off=5) R_2_dr_move___CTaluU_int16p_cstP16_EX_2_int16p (__ct_m2147483648.453)  <593>;
    } stp=3;
    <53> {
      (__ct_1024.457 var=108 stl=aluB) const_1_B2 ()  <542>;
      (__ct_1024.455 var=108 stl=R off=5) R_2_dr_move_aluB_2_MC_2_w32_B1 (__ct_1024.457)  <595>;
    } stp=7;
    (__ptr_sentinel.470 var=38) const ()  <551>;
    (__ptr_sentinel_part_0.471 var=229 __ptr_sentinel_part_1.472 var=230) void___complex_ctpat_tie_w32_int16p_uint16 (__ptr_sentinel.470)  <552>;
    <61> {
      (__inl_L.473 var=233 stl=aluC) w32_const_bor_1_B1 (__tmp.475 __ptr_sentinel_part_1.472)  <553>;
      (__ptr_sentinel.486 var=38 stl=R off=6) R_2_dr_move_aluC_2_w32 (__inl_L.473)  <555>;
      (__tmp.475 var=236 stl=aluA) aluA_2_dr_move_R_2_w32 (__tmp.476)  <556>;
    } stp=11;
    <62> {
      (__tmp.477 var=236 stl=aluC) lhi_const_1_B1 (__ptr_sentinel_part_0.471)  <554>;
      (__tmp.476 var=236 stl=R off=6) R_2_dr_move_aluC_2_w32 (__tmp.477)  <557>;
    } stp=9;
    (__ptr_pool.478 var=40) const ()  <558>;
    (__ptr_pool_part_0.479 var=231 __ptr_pool_part_1.480 var=232) void___complex_ctpat_tie_w32_int16p_uint16 (__ptr_pool.478)  <559>;
    <63> {
      (__inl_L.481 var=233 stl=aluC) w32_const_bor_1_B1 (__tmp.483 __ptr_pool_part_1.480)  <560>;
      (__ptr_pool.487 var=40 stl=R off=3) R_2_dr_move_aluC_2_w32 (__inl_L.481)  <562>;
      (__tmp.483 var=236 stl=aluA) aluA_2_dr_move_R_2_w32 (__tmp.484)  <563>;
    } stp=1;
    <64> {
      (__tmp.485 var=236 stl=aluC) lhi_const_1_B1 (__ptr_pool_part_0.479)  <561>;
      (__tmp.484 var=236 stl=R off=3) R_2_dr_move_aluC_2_w32 (__tmp.485)  <564>;
    } stp=0;
    <65> {
      () vd_nop_ID ()  <605>;
    } stp=13;
    if {
        {
            () if_expr (__either.373)  <219>;
            (__either.373 var=217) undefined ()  <453>;
        } #5
        {
        } #7 off=16 nxt=11
        {
            <28> {
              (__extDMb_MBlock__head.239 var=29 __extDMb_MBlock__u.240 var=31 __malloc_pool.241 var=26) store__pl_const_2_B1 (__ptr_pool.436 __fchtmp.435 __extDMb_MBlock__head.155 __extDMb_MBlock__u.156 __malloc_pool.157)  <483>;
              (__fchtmp.435 var=131 stl=aguA) aguA_1_dr_move_R_1_w32 (__fchtmp.434)  <577>;
              (__ptr_pool.436 var=40 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__ptr_pool.487)  <578>;
            } stp=0;
        } #6 off=15 nxt=11
        {
            (__malloc_pool.242 var=26) merge (__malloc_pool.157 __malloc_pool.241)  <240>;
            (__extDMb_MBlock__head.243 var=29) merge (__extDMb_MBlock__head.155 __extDMb_MBlock__head.239)  <241>;
            (__extDMb_MBlock__u.244 var=31) merge (__extDMb_MBlock__u.156 __extDMb_MBlock__u.240)  <242>;
        } #8
    } #4
    #11 off=16 nxt=-2
    () sink (__sp.19)  <294>;
    () sink (__malloc_sentinel.73)  <298>;
    () sink (__malloc_pool.293)  <300>;
    () sink (__extDMb_MBlock__head.291)  <303>;
    () sink (__extDMb_MBlock__u.292)  <305>;
    <22> {
      (__fchtmp.254 var=164 stl=dmw_rd) load__pl_const_1_B1 (__ptr_pool.437 __extDMb_MBlock__head.243 __extDMb_MBlock__u.244 __malloc_pool.242)  <477>;
      (__ptr_pool.437 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <579>;
      (__fchtmp.439 var=164 stl=R off=5) R_2_dr_move_dmw_rd_2_w32 (__fchtmp.254)  <581>;
    } stp=1;
    <23> {
      (__extDMb_MBlock__head.265 var=29 __extDMb_MBlock__u.266 var=31 __malloc_pool.267 var=26) store__pl_const_1_B1 (__fchtmp.438 __ptr_pool.440 __extDMb_MBlock__head.243 __extDMb_MBlock__u.244 __malloc_pool.242)  <478>;
      (__fchtmp.438 var=164 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__fchtmp.439)  <580>;
      (__ptr_pool.440 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <582>;
    } stp=2;
    <25> {
      (__extDMb_MBlock__head.278 var=29 __extDMb_MBlock__u.279 var=31 __malloc_pool.280 var=26) store__pl_const_2_B1 (__shv___ptr_pool.441 __ptr_pool.442 __extDMb_MBlock__head.265 __extDMb_MBlock__u.266 __malloc_pool.267)  <480>;
      (__shv___ptr_pool.441 var=204 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__shv___ptr_pool.426)  <583>;
      (__ptr_pool.442 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <584>;
    } stp=3;
    <26> {
      (__extDMb_MBlock__head.291 var=29 __extDMb_MBlock__u.292 var=31 __malloc_pool.293 var=26) store__pl_const_3_B1 (__ptr_pool.443 __ptr_pool.444 __extDMb_MBlock__head.278 __extDMb_MBlock__u.279 __malloc_pool.280)  <481>;
      (__ptr_pool.443 var=40 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__ptr_pool.487)  <585>;
      (__ptr_pool.444 var=40 stl=aguA) aguA_1_dr_move_R_1_w32 (__ptr_pool.487)  <586>;
    } stp=5;
    <27> {
      () __rts_jr_1_B1 (__la.448)  <482>;
      (__la.448 var=41 stl=trgt) trgt_2_dr_move_R_2_w32 (__la.40)  <589>;
    } stp=4;
    <66> {
      () vd_nop_ID ()  <606>;
    } stp=6;
    <67> {
      () vd_nop_ID ()  <607>;
    } stp=0;
    35 -> 53 del=0;
} #0
0 : '../runtime/src/malloc.c';
----------
0 : (0,103:0,0);
4 : (0,112:4,34);
6 : (0,112:4,35);
7 : (0,112:4,37);
11 : (0,113:0,47);
23 : (0,112:4,34);
----------
219 : (0,112:4,34);
240 : (0,112:4,39);
241 : (0,112:4,39);
242 : (0,112:4,39);
477 : (0,112:4,40) (0,107:12,0);
478 : (0,112:4,40) (0,112:4,0);
480 : (0,112:4,41) (0,112:4,0);
481 : (0,112:4,42) (0,107:12,0);
482 : (0,113:0,47);
483 : (0,112:4,35);
488 : (0,105:30,0);
489 : (0,105:4,1);
490 : (0,106:4,9);
491 : (0,107:20,14) (0,107:12,0);
492 : (0,108:20,15) (0,108:20,0);
493 : (0,111:4,24);
494 : (0,112:4,34) (0,107:12,0);
495 : (0,112:4,34);
538 : (0,106:4,0);
542 : (0,111:21,0);

