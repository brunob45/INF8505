
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:43 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_floor_ tlx


// m217;   next: m218 (next offset: 11)
000000  1 0  "00001000001000010000000000100000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (32,SP,SP); 
000001  1 0  "01001000000010001000100000000000"   // (R[8]) = lhi_const_1_B1 (-30720); 
000002  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000003  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000004  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000005  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000006  1 0  "01001000000000110111111000110111"   // (R[3]) = lhi_const_1_B1 (32311); 
000007  1 0  "01010101000001010111010110011100"   // (R[5]) = w32_const_bor_1_B1 (R[8],30108); 
000008  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000009  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000010  1 0  "01010100011001001110010000111100"   // (R[4]) = w32_const_bor_1_B1 (R[3],58428); 

// m218 subroutine call;   next: m213 (next offset: 11)

// m213;   next: m192 (next offset: 25)
000011  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000012  1 0  "10011000101000110000000000010100"   // (R[3]) = _rs_const_1_B1 (R[5]); 
000013  1 0  "00010000011000110000011111111111"   // (R[3]) = _ad_const_1_B1 (R[3]); 
000014  1 0  "00001000011000111111110000000001"   // (R[3],MC) = _pl_const_3_B1 (R[3]); 
000015  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000016  1 0  "10001100011000110000000000010100"   // (R[3]) = _lt_const_2_B1 (R[3]); 
000017  1 0  "00000000101000000010100000001100"   // (R[5]) = _ge_const_1_B2 (R[5]); 
000018  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000019  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000020  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000021  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000022  1 0  "01001000000001000000000000000000"   // (R[4]) = const_6_B3 (); 
000023  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000024  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 

// m192 subroutine call;   next: m196 (next offset: 25)

// m196;   next: m53, jump target: m7 (next offset: 29)
000025  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000026  1 0  "00100000101000000000000000111001"   // () = nez_br_const_1_B1 (R[5],57); 
000027  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m53;   next: m121, jump target: m57 (next offset: 33)
000029  1 0  "01110100100001100000000000110011"   // (R[6]) = _gt_const_1_B1 (R[4]); 
000030  1 0  "00100000110000000000000000100111"   // () = nez_br_const_1_B1 (R[6],39); 
000031  1 0  "00001000000001111111111111111111"   // (R[7]) = const_5_B1 (); 
000032  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m121;   next: m71, jump target: m72 (next offset: 39)
000033  1 0  "00001000100001101111111111101100"   // (R[6],MC) = _pl_const_2_B1 (R[4]); 
000034  1 0  "00000000111001100100000000010111"   // (R[8]) = _rs_1_B1 (R[7],R[6]); 
000035  1 0  "00000000101010000011000000000011"   // (R[6]) = _ad_1_B1 (R[5],R[8]); 
000036  1 0  "00100000110000000000000000000111"   // () = nez_br_const_2_B1 (R[6],7); 
000037  1 0  "01010000001010011111111111100000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m71 (next offset: 45)
000039  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000040  1 0  "01010000001000111111111111101100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000041  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000042  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000043  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000044  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m72;   next: m257 (next offset: 45)

// m257;   next: m247, jump target: m98 (next offset: 48)
000045  1 0  "00010100011000000000000000010110"   // () = br_eqz_const_1_B1 (R[3],22); 
000046  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m247;   next: m82, jump target: m95 (next offset: 51)
000048  1 0  "00100001001000000000000000010001"   // () = nez_br_const_1_B1 (R[9],17); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m82;   next: m87, jump target: m85 (next offset: 55)
000051  1 0  "01100100100010010000000000010100"   // (R[9]) = _eq_const_1_B1 (R[4]); 
000052  1 0  "00100001001000000000000000001100"   // () = nez_br_const_1_B1 (R[9],12); 
000053  1 0  "00001000110000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[6]); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m87;   next: m90, jump target: m91 (next offset: 64)
000055  1 0  "01010100000010010000000000110100"   // (R[9]) = const_1_B2 (); 
000056  1 0  "00000001001001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[9],R[4]); 
000057  1 0  "01010100000010010000000000000001"   // (R[9]) = const_2_B2 (); 
000058  1 0  "00000001001001000010000000010010"   // (R[4]) = _ls_1_B1 (R[9],R[4]); 
000059  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000060  1 0  "00000000100001010100100000001101"   // (R[9]) = _ge_1_B1 (R[4],R[5]); 
000061  1 0  "00100001001000000000000000000010"   // () = nez_br_const_1_B1 (R[9],2); 
000062  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90;   next: m255 (next offset: 65)
000064  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 

// m91;   next: m255 (next offset: 65)

// m255;   next: m256 (next offset: 66)
000065  1 0  "01010100110000110000000000000000"   // R[3] = R[6]; 

// m85;   next: m256 (next offset: 66)

// m256;   next: m153 (next offset: 67)
000066  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 

// m95;   next: m153 (next offset: 67)

// m153;   next: m258 (next offset: 69)
000067  1 0  "00000000111010000001100000011010"   // (R[3]) = _er_1_B1 (R[8],R[7]); 
000068  1 0  "00000000011001010010100000000011"   // (R[5]) = _ad_1_B1 (R[5],R[3]); 

// m98;   next: m258 (next offset: 69)

// m258, jump target: m104 (next offset: 71)
000069  1 0  "00100100000000000000000001001011"   // () = j_const_1_B1 (75); 
000070  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 

// m57;   next: m224, jump target: m61 (next offset: 75)
000071  1 0  "10010100100001000000010000000000"   // (R[4]) = _ne_const_1_B1 (R[4]); 
000072  1 0  "00100000100000000000000000000111"   // () = nez_br_const_1_B1 (R[4],7); 
000073  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000074  1 0  "01010000001000111111111111101100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m224;   next: m225 (next offset: 78)
000075  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000076  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000077  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m225 subroutine call;   next: m254 (next offset: 78)

// m254;   next: m64 (next offset: 81)
000078  1 0  "01010000001000111111111111101100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000079  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000080  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m61;   next: m64 (next offset: 81)

// m64 (next offset: 85)
000081  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000082  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000083  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000084  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m7;   next: m115, jump target: m246 (next offset: 89)
000085  1 0  "00000000100000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[4]); 
000086  1 0  "00100000101000000000000000100010"   // () = nez_br_const_1_B1 (R[5],34); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m115;   next: m35, jump target: m36 (next offset: 99)
000089  1 0  "01001000000001010000000000001111"   // (R[5]) = lhi_const_1_B1 (15); 
000090  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000091  1 0  "00000000101001000010100000010111"   // (R[5]) = _rs_1_B1 (R[5],R[4]); 
000092  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000093  1 0  "00000000101001100100000000000011"   // (R[8]) = _ad_1_B1 (R[6],R[5]); 
000094  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000095  1 0  "00000000111010000100100000001010"   // (R[9]) = _or_1_B1 (R[8],R[7]); 
000096  1 0  "00100001001000000000000000000110"   // () = nez_br_const_2_B1 (R[9],6); 
000097  1 0  "01010000001010001111111111100000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000098  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m35 (next offset: 104)
000099  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000100  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000101  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000102  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000103  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m36;   next: m251 (next offset: 104)

// m251;   next: m244, jump target: m49 (next offset: 107)
000104  1 0  "00010100011000000000000000001110"   // () = br_eqz_const_1_B1 (R[3],14); 
000105  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000106  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m244;   next: m45, jump target: m46 (next offset: 110)
000107  1 0  "00100001000000000000000000000110"   // () = nez_br_const_1_B1 (R[8],6); 
000108  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000109  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m45, jump target: m150 (next offset: 115)
000110  1 0  "01001000000000110000000000010000"   // (R[3]) = const_3_B1 (); 
000111  1 0  "00000000011001000001100000010111"   // (R[3]) = _rs_2_B1 (R[3],R[4]); 
000112  1 0  "00000000011001100011000000000001"   // (R[6],) = _pl_1_B1 (R[6],R[3]); 
000113  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000114  1 0  "00001000000000111111111111111111"   // (R[3]) = const_5_B1 (); 

// m46;   next: m150 (next offset: 116)
000115  1 0  "00001000000000111111111111111111"   // (R[3]) = const_5_B1 (); 

// m150, jump target: m104 (next offset: 120)
000116  1 0  "00000000011001010010100000011010"   // (R[5]) = _er_1_B1 (R[5],R[3]); 
000117  1 0  "10101000001000001111111111011100"   // (dmw_wr) = const_6_B5 (); (__spill_DMw[-36]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-36); 
000118  1 0  "00100100000000000000000000011010"   // () = j_const_1_B1 (26); 
000119  1 0  "00000000101001100011000000000011"   // (R[6]) = _ad_1_B1 (R[6],R[5]); 

// m49, jump target: m104 (next offset: 122)
000120  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000121  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 

// m246;   next: m243, jump target: m27 (next offset: 125)
000122  1 0  "00010100011000000000000000010010"   // () = br_eqz_const_1_B1 (R[3],18); 
000123  1 0  "01001000000001100000000000000000"   // (R[6]) = const_6_B3 (); 
000124  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m243;   next: m109, jump target: m104 (next offset: 129)
000125  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000126  1 0  "00100000101000000000000000010001"   // () = nez_br_const_1_B1 (R[5],17); 
000127  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000128  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m109;   next: m23, jump target: m24 (next offset: 138)
000129  1 0  "01001000000001010111111111111111"   // (R[5]) = lhi_const_1_B1 (32767); 
000130  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000131  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000132  1 0  "00000000101001100001100000000011"   // (R[3]) = _ad_1_B1 (R[6],R[5]); 
000133  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000134  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[5]); 
000135  1 0  "00010100011000000000000000000011"   // () = br_eqz_const_1_B1 (R[3],3); 
000136  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000137  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23;   next: m248 (next offset: 140)
000138  1 0  "01001000000001010000000000000000"   // (R[5]) = const_6_B3 (); 
000139  1 0  "01001000000001101011111111110000"   // (R[6]) = const_4_B1 (); 

// m24;   next: m248 (next offset: 140)

// m248, jump target: m104 (next offset: 142)
000140  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000141  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 

// m27;   next: m104 (next offset: 145)
000142  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000143  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000144  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 

// m104 (next offset: /)
000145  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000146  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000147  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000148  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000149  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

