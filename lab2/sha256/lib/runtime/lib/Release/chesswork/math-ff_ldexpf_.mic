
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:43 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_ldexpf_ tlx


// m69;   next: m73, jump target: m24 (next offset: 11)
000000  1 0  "00001000001000010000000000011000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (24,SP,SP); 
000001  1 0  "01001000000001100111111110000000"   // (R[6]) = const_5_B1 (); 
000002  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_2_B1 (R[4],R[6]); 
000003  1 0  "01001000000000110000110110100010"   // (R[3]) = lhi_const_1_B1 (3490); 
000004  1 0  "10011000110001100000000000010111"   // (R[6]) = _rs_const_1_B1 (R[6]); 
000005  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000006  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000007  1 0  "01010100011000110100001001100000"   // (R[3]) = w32_const_bor_1_B1 (R[3],16992); 
000008  1 0  "00100000110000000000000000100000"   // () = nez_br_const_2_B1 (R[6],32); 
000009  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000010  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 

// m73;   next: m12, jump target: m13 (next offset: 17)
000011  1 0  "01001000000001010111111111111111"   // (R[5]) = lhi_const_1_B1 (32767); 
000012  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000013  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000014  1 0  "00100000101000000000000000000110"   // () = nez_br_const_2_B1 (R[5],6); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m12 (next offset: 22)
000017  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000018  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000019  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000020  1 0  "00001000001000011111111111101000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-24,SP,SP); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m13;   next: m81 (next offset: 22)

// m81;   next: m82 (next offset: 24)
000022  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000023  1 0  "01001000000001010100110000000000"   // (R[5]) = const_4_B1 (); 

// m82 subroutine call;   next: m79 (next offset: 24)

// m79;   next: m85, jump target: m22 (next offset: 34)
000024  1 0  "01001000000001101111111111111111"   // (R[6]) = lhi_const_1_B1 (-1); 
000025  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000026  1 0  "01001000000001000111111110000000"   // (R[4]) = const_5_B1 (); 
000027  1 0  "01010100110001100011110010110000"   // (R[6]) = w32_const_bor_1_B1 (R[6],15536); 
000028  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_2_B1 (R[3],R[4]); 
000029  1 0  "00000000101001100011100000001100"   // (R[7]) = _ge_1_B1 (R[5],R[6]); 
000030  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000031  1 0  "00100000111000000000000000001000"   // () = nez_br_const_1_B1 (R[7],8); 
000032  1 0  "10011000100001000000000000010111"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000033  1 0  "00001000100001101111111111100111"   // (R[6],MC) = _pl_const_2_B1 (R[4]); 

// m85;   next: m86 (next offset: 37)
000034  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000035  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000036  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m86 subroutine call;   next: m21 (next offset: 37)

// m21 (next offset: 41)
000037  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000038  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000039  1 0  "00001000001000011111111111101000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-24,SP,SP); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m22;   next: m119 (next offset: 41)

// m119;   next: m26 (next offset: 42)
000041  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m24;   next: m26 (next offset: 42)

// m26;   next: m99, jump target: m89 (next offset: 46)
000042  1 0  "01100100110000110000000011111111"   // (R[3]) = _eq_const_1_B1 (R[6]); 
000043  1 0  "00100000011000000000000000110010"   // () = nez_br_const_1_B1 (R[3],50); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m99;   next: m100 (next offset: 55)
000046  1 0  "01001000000000111000000000000000"   // (R[3]) = const_3_B1 (); 
000047  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_2_B1 (R[4],R[3]); 
000048  1 0  "00000000101001100011000000000001"   // (R[6],) = _pl_1_B1 (R[6],R[5]); 
000049  1 0  "01001000000001000111000101001001"   // (R[4]) = lhi_const_1_B1 (29001); 
000050  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000051  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
000052  1 0  "01010100100001001111001011001010"   // (R[4]) = w32_const_bor_1_B1 (R[4],62154); 
000053  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000054  1 0  "00000000011001000010100000001010"   // (R[5]) = _or_1_B1 (R[3],R[4]); 

// m100 subroutine call;   next: m97 (next offset: 55)

// m97;   next: m36, jump target: m60 (next offset: 60)
000055  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000056  1 0  "01110100100001010000000011111110"   // (R[5]) = _gt_const_2_B1 (R[4]); 
000057  1 0  "00100000101000000000000000100110"   // () = nez_br_const_1_B1 (R[5],38); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m36;   next: m41, jump target: m39 (next offset: 68)
000060  1 0  "01001000000001101000000001111111"   // (R[6]) = lhi_const_1_B1 (-32641); 
000061  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000062  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000063  1 0  "00000000101001100010100000000011"   // (R[5]) = _ad_1_B1 (R[5],R[6]); 
000064  1 0  "00000000100000000011000000001110"   // (R[6]) = _gt_const_1_B2 (R[4]); 
000065  1 0  "00100000110000000000000000011001"   // () = nez_br_const_1_B1 (R[6],25); 
000066  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m41;   next: m115, jump target: m45 (next offset: 72)
000068  1 0  "10000000100001111111111111100111"   // (R[7]) = _le_const_1_B1 (R[4]); 
000069  1 0  "00100000111000000000000000001000"   // () = nez_br_const_1_B1 (R[7],8); 
000070  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000071  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m115;   next: m116 (next offset: 77)
000072  1 0  "00001000100001000000000000011001"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 
000073  1 0  "10001000100001000000000000010111"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000074  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[5],R[4]); 
000075  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000076  1 0  "01001000000001010011001100000000"   // (R[5]) = const_1_B1 (); 

// m116 subroutine call;   next: m122 (next offset: 77)

// m122, jump target: m60 (next offset: 79)
000077  1 0  "00100100000000000000000000010011"   // () = j_const_1_B1 (19); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m45;   next: m106, jump target: m51 (next offset: 84)
000079  1 0  "01010100000001001100001101010000"   // (R[4]) = const_2_B1 (); 
000080  1 0  "00000000110001000010100000001110"   // (R[5]) = _gt_1_B1 (R[6],R[4]); 
000081  1 0  "00100000101000000000000000000101"   // () = nez_br_const_1_B1 (R[5],5); 
000082  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m106;   next: m107 (next offset: 86)
000084  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000085  1 0  "00000000100001100010100000001010"   // (R[5]) = _or_1_B1 (R[6],R[4]); 

// m107 subroutine call;   next: m120 (next offset: 86)

// m120, jump target: m60 (next offset: 88)
000086  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m51 (next offset: 92)
000088  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000089  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000090  1 0  "00001000001000011111111111101000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-24,SP,SP); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m39, jump target: m60 (next offset: 95)
000092  1 0  "10001000100001000000000000010111"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000093  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000094  1 0  "00000000100001010001100000001010"   // (R[3]) = _or_1_B1 (R[5],R[4]); 

// m89;   next: m90 (next offset: 97)
000095  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000096  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m90 subroutine call;   next: m126 (next offset: 97)

// m126;   next: m60 (next offset: 97)

// m60 (next offset: /)
000097  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000098  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000099  1 0  "00001000001000011111111111101000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-24,SP,SP); 
000100  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

