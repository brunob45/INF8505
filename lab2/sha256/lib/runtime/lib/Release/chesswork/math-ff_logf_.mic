
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:53 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_logf_ tlx


// m3;   next: m92, jump target: m26 (next offset: 6)
000000  1 0  "01001000000000110000000010000000"   // (R[3]) = const_9_B1 (); 
000001  1 0  "00000000100000110011000000001100"   // (R[6]) = _ge_1_B1 (R[4],R[3]); 
000002  1 0  "00001000001000010000000000101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (44,SP,SP); 
000003  1 0  "00100000110000000000000000100000"   // () = nez_br_const_1_B1 (R[6],32); 
000004  1 0  "01001000000001010000000000000000"   // (R[5]) = const_8_B3 (); 
000005  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 

// m92;   next: m124, jump target: m14 (next offset: 12)
000006  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000007  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000008  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000009  1 0  "00100000011000000000000000001000"   // () = nez_br_const_2_B1 (R[3],8); 
000010  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m124;   next: m125 (next offset: 15)
000012  1 0  "01001000000001010000000000000000"   // (R[5]) = const_8_B3 (); 
000013  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000014  1 0  "01001000000001001100110000000000"   // (R[4]) = const_7_B1 (); 

// m125 subroutine call;   next: m13 (next offset: 15)

// m13 (next offset: 19)
000015  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000016  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000017  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m14;   next: m16 (next offset: 19)

// m16;   next: m131, jump target: m23 (next offset: 23)
000019  1 0  "00000000100000000001100000001100"   // (R[3]) = _ge_const_1_B2 (R[4]); 
000020  1 0  "00100000011000000000000000001010"   // () = nez_br_const_1_B1 (R[3],10); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000022  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m131;   next: m132 (next offset: 25)
000023  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000024  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m132 subroutine call;   next: m135 (next offset: 25)

// m135;   next: m136 (next offset: 28)
000025  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000026  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000027  1 0  "01001000000001010000000000000000"   // (R[5]) = const_8_B3 (); 

// m136 subroutine call;   next: m22 (next offset: 28)

// m22 (next offset: 32)
000028  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000029  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000030  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23;   next: m141 (next offset: 32)

// m141;   next: m142 (next offset: 34)
000032  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000033  1 0  "01001000000001010100110000000000"   // (R[5]) = const_6_B1 (); 

// m142 subroutine call;   next: m139 (next offset: 34)

// m139;   next: m28 (next offset: 37)
000034  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000035  1 0  "00001000000001011111111111100111"   // (R[5]) = const_5_B1 (); 
000036  1 0  "01001000000000110000000010000000"   // (R[3]) = const_9_B1 (); 

// m26;   next: m28 (next offset: 37)

// m28;   next: m168, jump target: m145 (next offset: 42)
000037  1 0  "01001000000001100111111110000000"   // (R[6]) = const_4_B1 (); 
000038  1 0  "00000000100001100011000000001100"   // (R[6]) = _ge_1_B1 (R[4],R[6]); 
000039  1 0  "00100000110000000000000011111000"   // () = nez_br_const_1_B1 (R[6],248); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m168;   next: m169 (next offset: 61)
000042  1 0  "01001000000001100000000001111111"   // (R[6]) = lhi_const_1_B1 (127); 
000043  1 0  "01010100110001111111111111111111"   // (R[7]) = w32_const_bor_1_B1 (R[6],65535); 
000044  1 0  "10011000100001100000000000010111"   // (R[6]) = _rs_const_1_B1 (R[4]); 
000045  1 0  "00000000100001110010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[7]); 
000046  1 0  "10101000001001111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[7],SP,-8); 
000047  1 0  "01001000000010000000000001001010"   // (R[8]) = lhi_const_1_B1 (74); 
000048  1 0  "01010101000001111111101100100000"   // (R[7]) = w32_const_bor_1_B1 (R[8],64288); 
000049  1 0  "00000000100001110011100000000001"   // (R[7],) = _pl_1_B1 (R[4],R[7]); 
000050  1 0  "00001000110001101111111110000001"   // (R[6],MC) = _pl_const_2_B1 (R[6]); 
000051  1 0  "00000000011001110011100000000011"   // (R[7]) = _ad_2_B1 (R[7],R[3]); 
000052  1 0  "00000000101001100011000000000001"   // (R[6],) = _pl_1_B1 (R[5],R[6]); 
000053  1 0  "10011000111000110000000000010111"   // (R[3]) = _rs_const_1_B1 (R[7]); 
000054  1 0  "00000000011001100001100000000001"   // (R[3],) = _pl_1_B1 (R[6],R[3]); 
000055  1 0  "01001000000001010011111110000000"   // (R[5]) = const_3_B1 (); 
000056  1 0  "00000000101001110011100000011010"   // (R[7]) = _er_1_B1 (R[7],R[5]); 
000057  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000058  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000059  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000060  1 0  "00000000100001110010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[7]); 

// m169 subroutine call;   next: m172 (next offset: 61)

// m172;   next: m173 (next offset: 69)
000061  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000062  1 0  "00001000100001000000000000001111"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 
000063  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000064  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000065  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000066  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000067  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000068  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m173 subroutine call;   next: m176 (next offset: 69)

// m176;   next: m177 (next offset: 74)
000069  1 0  "01001000000001000011111100110001"   // (R[4]) = lhi_const_1_B1 (16177); 
000070  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000071  1 0  "01010100100001010111000110000000"   // (R[5]) = w32_const_bor_1_B1 (R[4],29056); 
000072  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000073  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m177 subroutine call;   next: m180 (next offset: 74)

// m180;   next: m181 (next offset: 79)
000074  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000075  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000076  1 0  "01001000000001010011011100010111"   // (R[5]) = lhi_const_1_B1 (14103); 
000077  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000078  1 0  "01010100101001011111011111010001"   // (R[5]) = w32_const_bor_1_B1 (R[5],63441); 

// m181 subroutine call;   next: m166 (next offset: 79)

// m166;   next: m248, jump target: m115 (next offset: 84)
000079  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000080  1 0  "10001100100001010000000000010000"   // (R[5]) = _lt_const_1_B1 (R[4]); 
000081  1 0  "00100000101000000000000010011000"   // () = nez_br_const_1_B1 (R[5],152); 
000082  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 

// m248;   next: m249 (next offset: 88)
000084  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000085  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000086  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000087  1 0  "01001000000001000100000000000000"   // (R[4]) = const_1_B1 (); 

// m249 subroutine call;   next: m252 (next offset: 88)

// m252;   next: m253 (next offset: 91)
000088  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000089  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000090  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m253 subroutine call;   next: m256 (next offset: 91)

// m256;   next: m257 (next offset: 95)
000091  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000092  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000093  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000094  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m257 subroutine call;   next: m260 (next offset: 95)

// m260;   next: m261 (next offset: 104)
000095  1 0  "01001000000001011111111111001111"   // (R[5]) = lhi_const_1_B1 (-49); 
000096  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000097  1 0  "01010100101001010101110000110000"   // (R[5]) = w32_const_bor_1_B1 (R[5],23600); 
000098  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[5]); 
000099  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000100  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000101  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m261 subroutine call;   next: m264 (next offset: 104)

// m264;   next: m265 (next offset: 114)
000104  1 0  "01001000000001010000000000110101"   // (R[5]) = lhi_const_1_B1 (53); 
000105  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000106  1 0  "01010100101001011100001010001000"   // (R[5]) = w32_const_bor_1_B1 (R[5],49800); 
000107  1 0  "00000000101001000010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[4]); 
000108  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000109  1 0  "01001000000001000011111000011100"   // (R[4]) = lhi_const_1_B1 (15900); 
000110  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000111  1 0  "01010100100001011101000001001111"   // (R[5]) = w32_const_bor_1_B1 (R[4],53327); 
000112  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000113  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m265 subroutine call;   next: m268 (next offset: 114)

// m268;   next: m269 (next offset: 118)
000114  1 0  "01001000000001000011111001100011"   // (R[4]) = lhi_const_1_B1 (15971); 
000115  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010100100001001000111000101001"   // (R[4]) = w32_const_bor_1_B1 (R[4],36393); 

// m269 subroutine call;   next: m272 (next offset: 118)

// m272;   next: m273 (next offset: 121)
000118  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000119  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000120  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m273 subroutine call;   next: m276 (next offset: 121)

// m276;   next: m277 (next offset: 125)
000121  1 0  "01001000000001000011111011001100"   // (R[4]) = lhi_const_1_B1 (16076); 
000122  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000123  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000124  1 0  "01010100100001001100110011001101"   // (R[4]) = w32_const_bor_1_B1 (R[4],52429); 

// m277 subroutine call;   next: m280 (next offset: 125)

// m280;   next: m281 (next offset: 128)
000125  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000126  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000127  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m281 subroutine call;   next: m284 (next offset: 128)

// m284;   next: m285 (next offset: 133)
000128  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000129  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000130  1 0  "01001000000001010011111000010111"   // (R[5]) = lhi_const_1_B1 (15895); 
000131  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000132  1 0  "01010100101001011000100010010111"   // (R[5]) = w32_const_bor_1_B1 (R[5],34967); 

// m285 subroutine call;   next: m288 (next offset: 133)

// m288;   next: m289 (next offset: 137)
000133  1 0  "01001000000001000011111000111010"   // (R[4]) = lhi_const_1_B1 (15930); 
000134  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000135  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000136  1 0  "01010100100001000011001100100101"   // (R[4]) = w32_const_bor_1_B1 (R[4],13093); 

// m289 subroutine call;   next: m292 (next offset: 137)

// m292;   next: m293 (next offset: 140)
000137  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000138  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000139  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m293 subroutine call;   next: m296 (next offset: 140)

// m296;   next: m297 (next offset: 144)
000140  1 0  "01001000000001000011111010010010"   // (R[4]) = lhi_const_1_B1 (16018); 
000141  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000142  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000143  1 0  "01010100100001000100100100100101"   // (R[4]) = w32_const_bor_1_B1 (R[4],18725); 

// m297 subroutine call;   next: m300 (next offset: 144)

// m300;   next: m301 (next offset: 147)
000144  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m301 subroutine call;   next: m304 (next offset: 147)

// m304;   next: m305 (next offset: 151)
000147  1 0  "01001000000001000011111100101010"   // (R[4]) = lhi_const_1_B1 (16170); 
000148  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000149  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000150  1 0  "01010100100001001010101010101011"   // (R[4]) = w32_const_bor_1_B1 (R[4],43691); 

// m305 subroutine call;   next: m308 (next offset: 151)

// m308;   next: m309 (next offset: 154)
000151  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000152  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000153  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m309 subroutine call;   next: m312 (next offset: 154)

// m312;   next: m313 (next offset: 161)
000154  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000155  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000156  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[5],R[4]); 
000157  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000158  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m313 subroutine call;   next: m246 (next offset: 161)

// m246;   next: m368, jump target: m320 (next offset: 166)
000161  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000162  1 0  "00000000100000000010100000001110"   // (R[5]) = _gt_const_1_B2 (R[4]); 
000163  1 0  "00100000101000000000000000011100"   // () = nez_br_const_1_B1 (R[5],28); 
000164  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000165  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 

// m368;   next: m369 (next offset: 168)
000166  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000167  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m369 subroutine call;   next: m372 (next offset: 168)

// m372;   next: m373 (next offset: 171)
000168  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000169  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000170  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m373 subroutine call;   next: m402 (next offset: 171)

// m402;   next: m383, jump target: m376 (next offset: 175)
000171  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000172  1 0  "00010100100000000000000000001100"   // () = br_eqz_const_1_B1 (R[4],12); 
000173  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000174  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m383;   next: m384 (next offset: 178)
000175  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000176  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000177  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m384 subroutine call;   next: m387 (next offset: 178)

// m387;   next: m388 (next offset: 181)
000178  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000179  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000180  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m388 subroutine call;   next: m391 (next offset: 181)

// m391;   next: m392 (next offset: 184)
000181  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000183  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m392 subroutine call;   next: m403 (next offset: 184)

// m403, jump target: m88 (next offset: 186)
000184  1 0  "00100100000000000000000001101010"   // () = j_const_1_B1 (106); 
000185  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m376;   next: m377 (next offset: 189)
000186  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000187  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000188  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m377 subroutine call;   next: m81 (next offset: 189)

// m81 (next offset: 193)
000189  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000190  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000191  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000192  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m320;   next: m321 (next offset: 197)
000193  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000194  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000195  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000196  1 0  "01001000000001000011111100000000"   // (R[4]) = const_2_B1 (); 

// m321 subroutine call;   next: m324 (next offset: 197)

// m324;   next: m325 (next offset: 200)
000197  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000199  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m325 subroutine call;   next: m328 (next offset: 200)

// m328;   next: m329 (next offset: 204)
000200  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000201  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000202  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000203  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m329 subroutine call;   next: m332 (next offset: 204)

// m332;   next: m333 (next offset: 207)
000204  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000205  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000206  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m333 subroutine call;   next: m399 (next offset: 207)

// m399;   next: m350, jump target: m338 (next offset: 211)
000207  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000208  1 0  "00010100100000000000000000001111"   // () = br_eqz_const_1_B1 (R[4],15); 
000209  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000210  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m350;   next: m351 (next offset: 214)
000211  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000212  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000213  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m351 subroutine call;   next: m354 (next offset: 214)

// m354;   next: m355 (next offset: 217)
000214  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000215  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000216  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m355 subroutine call;   next: m358 (next offset: 217)

// m358;   next: m359 (next offset: 220)
000217  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m359 subroutine call;   next: m362 (next offset: 220)

// m362;   next: m363 (next offset: 223)
000220  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000221  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000222  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m363 subroutine call;   next: m400 (next offset: 223)

// m400, jump target: m88 (next offset: 225)
000223  1 0  "00100100000000000000000001000011"   // () = j_const_1_B1 (67); 
000224  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m338;   next: m339 (next offset: 228)
000225  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000226  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000227  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m339 subroutine call;   next: m342 (next offset: 228)

// m342;   next: m343 (next offset: 231)
000228  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000229  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000230  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m343 subroutine call;   next: m71 (next offset: 231)

// m71 (next offset: 235)
000231  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000232  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000233  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000234  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m115;   next: m116 (next offset: 237)
000235  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000236  1 0  "01001000000001010000000000000000"   // (R[5]) = const_8_B3 (); 

// m116 subroutine call;   next: m120 (next offset: 237)

// m120;   next: m394, jump target: m49 (next offset: 240)
000237  1 0  "00010100011000000000000000001110"   // () = br_eqz_const_1_B1 (R[3],14); 
000238  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000239  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m394;   next: m184, jump target: m44 (next offset: 244)
000240  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000241  1 0  "00010100011000000000000000000101"   // () = br_eqz_const_1_B1 (R[3],5); 
000242  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000243  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m184;   next: m185 (next offset: 246)
000244  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000245  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m185 subroutine call;   next: m395 (next offset: 246)

// m395, jump target: m48 (next offset: 248)
000246  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000247  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m44;   next: m48 (next offset: 249)
000248  1 0  "01001000000000110000000000000000"   // (R[3]) = const_8_B3 (); 

// m48 (next offset: 253)
000249  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000250  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000251  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000252  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m49;   next: m192 (next offset: 253)

// m192;   next: m193 (next offset: 256)
000253  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000254  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000255  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m193 subroutine call;   next: m196 (next offset: 256)

// m196;   next: m197 (next offset: 261)
000256  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000257  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000258  1 0  "01001000000001000011111010101010"   // (R[4]) = lhi_const_1_B1 (16042); 
000259  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000260  1 0  "01010100100001001010101010101011"   // (R[4]) = w32_const_bor_1_B1 (R[4],43691); 

// m197 subroutine call;   next: m200 (next offset: 261)

// m200;   next: m201 (next offset: 264)
000261  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000262  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000263  1 0  "01001000000001000011111100000000"   // (R[4]) = const_2_B1 (); 

// m201 subroutine call;   next: m204 (next offset: 264)

// m204;   next: m205 (next offset: 267)
000264  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000265  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000266  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m205 subroutine call;   next: m396 (next offset: 267)

// m396;   next: m215, jump target: m208 (next offset: 271)
000267  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000268  1 0  "00010100100000000000000000001100"   // () = br_eqz_const_1_B1 (R[4],12); 
000269  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000270  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m215;   next: m216 (next offset: 274)
000271  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000272  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000273  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m216 subroutine call;   next: m219 (next offset: 274)

// m219;   next: m220 (next offset: 277)
000274  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000275  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000276  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m220 subroutine call;   next: m223 (next offset: 277)

// m223;   next: m224 (next offset: 280)
000277  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000278  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000279  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m224 subroutine call;   next: m397 (next offset: 280)

// m397, jump target: m88 (next offset: 282)
000280  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000281  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m208;   next: m209 (next offset: 285)
000282  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000283  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000284  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m209 subroutine call;   next: m57 (next offset: 285)

// m57 (next offset: 289)
000285  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000286  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000287  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000288  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m145;   next: m146 (next offset: 291)
000289  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000290  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m146 subroutine call;   next: m407 (next offset: 291)

// m407;   next: m88 (next offset: 291)

// m88 (next offset: /)
000291  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000292  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000293  1 0  "00001000001000011111111111010100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-44,SP,SP); 
000294  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

