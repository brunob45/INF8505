
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:50 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_pow_ tlx


// m1091;   next: m442, jump target: m6 (next offset: 12)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "00001000001000010000000010000000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (128,SP,SP); 
000002  1 0  "01010100011010101111111111111111"   // (R[10]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000110010100100000000000011"   // (R[8]) = _ad_1_B1 (R[6],R[10]); 
000004  1 0  "00000000111010000100100000001010"   // (R[9]) = _or_2_B1 (R[8],R[7]); 
000005  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000006  1 0  "10101000001001101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[6],SP,-16); 
000007  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000008  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000009  1 0  "00010101001000000000010011011111"   // () = eqz_br_const_1_B1 (R[9],1247); 
000010  1 0  "00000000100010100001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[10]); 
000011  1 0  "10101000001010101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[10],SP,-12); 

// m442;   next: m445, jump target: m1100 (next offset: 27)
000012  1 0  "01001000000010110111111111110000"   // (R[11]) = const_24_B1 (); 
000013  1 0  "00000000101000000010100000010101"   // (R[5]) = nez_1_B1 (R[5]); 
000014  1 0  "00000000011010110100100000001011"   // (R[9]) = _eq_1_B1 (R[3],R[11]); 
000015  1 0  "00000000101010010111000000000011"   // (R[14]) = land_1_B1 (R[9],R[5]); 
000016  1 0  "00000000011010110110100000001110"   // (R[13]) = _gt_2_B1 (R[3],R[11]); 
000017  1 0  "00000000111000000111100000010101"   // (R[15]) = nez_1_B1 (R[7]); 
000018  1 0  "00000001000010110010100000001110"   // (R[5]) = _gt_2_B1 (R[8],R[11]); 
000019  1 0  "00000001000010110110000000001011"   // (R[12]) = _eq_1_B1 (R[8],R[11]); 
000020  1 0  "00000001101011100110100000001010"   // (R[13]) = lor_1_B1 (R[13],R[14]); 
000021  1 0  "00000000101011010010100000001010"   // (R[5]) = lor_1_B1 (R[13],R[5]); 
000022  1 0  "00000001100011110110000000000011"   // (R[12]) = land_1_B1 (R[12],R[15]); 
000023  1 0  "00000000101011000010100000001010"   // (R[5]) = lor_1_B1 (R[5],R[12]); 
000024  1 0  "00100000101000000000010011001011"   // () = nez_br_const_1_B1 (R[5],1227); 
000025  1 0  "00000001000010110111100000010101"   // (R[15]) = _ne_1_B1 (R[8],R[11]); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m445;   next: m47, jump target: m83 (next offset: 32)
000027  1 0  "00000000100000000101100000001100"   // (R[11]) = _ge_const_1_B2 (R[4]); 
000028  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000029  1 0  "00100001011000000000000000101100"   // () = nez_br_const_1_B1 (R[11],44); 
000030  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000031  1 0  "10101000001010111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[11],SP,-28); 

// m47;   next: m52, jump target: m50 (next offset: 37)
000032  1 0  "01001000000001010100001101000000"   // (R[5]) = const_21_B1 (); 
000033  1 0  "00000001000001010101100000001100"   // (R[11]) = _ge_1_B1 (R[8],R[5]); 
000034  1 0  "00100001011000000000000000100110"   // () = nez_br_const_1_B1 (R[11],38); 
000035  1 0  "01010100000001010000000000000010"   // (R[5]) = const_20_B2 (); 
000036  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m52;   next: m56, jump target: m80 (next offset: 42)
000037  1 0  "01001000000001010011111111110000"   // (R[5]) = const_26_B1 (); 
000038  1 0  "00000001000001010101100000010011"   // (R[11]) = _lt_2_B1 (R[8],R[5]); 
000039  1 0  "00100001011000000000000000100001"   // () = nez_br_const_1_B1 (R[11],33); 
000040  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m56;   next: m2339, jump target: m60 (next offset: 48)
000042  1 0  "10011001000001010000000000010100"   // (R[5]) = _rs_const_1_B1 (R[8]); 
000043  1 0  "00001000101010111111110000000001"   // (R[11],MC) = _pl_const_2_B1 (R[5]); 
000044  1 0  "01110101011001010000000000010100"   // (R[5]) = _gt_const_2_B1 (R[11]); 
000045  1 0  "00100000101000000000000000010000"   // () = nez_br_const_1_B1 (R[5],16); 
000046  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2339;   next: m71, jump target: m2351 (next offset: 51)
000048  1 0  "00100000111000000000000000011000"   // () = nez_br_const_2_B1 (R[7],24); 
000049  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m71;   next: m74, jump target: m2351 (next offset: 59)
000051  1 0  "01010100000001010000000000010100"   // (R[5]) = const_22_B2 (); 
000052  1 0  "00000000101010110010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[11]); 
000053  1 0  "00000001000001010101100000010110"   // (R[11]) = _rs_3_B1 (R[8],R[5]); 
000054  1 0  "00000001011001010010100000010010"   // (R[5]) = _ls_1_B1 (R[11],R[5]); 
000055  1 0  "00000000101010000110000000010101"   // (R[12]) = _ne_2_B1 (R[5],R[8]); 
000056  1 0  "00100001100000000000000000010000"   // () = nez_br_const_1_B1 (R[12],16); 
000057  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m74, jump target: m2351 (next offset: 63)
000059  1 0  "00010001011001010000000000000001"   // (R[5]) = _ad_const_1_B1 (R[11]); 
000060  1 0  "01010100000010110000000000000010"   // (R[11]) = const_20_B2 (); 
000061  1 0  "00100100000000000000000000001100"   // () = j_const_1_B1 (12); 
000062  1 0  "00000001011001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[11],R[5]); 

// m60;   next: m63, jump target: m64 (next offset: 71)
000063  1 0  "01010100000001010000000000110100"   // (R[5]) = const_19_B2 (); 
000064  1 0  "00000000101010110010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[11]); 
000065  1 0  "00000000111001010101100000010111"   // (R[11]) = _rs_2_B1 (R[7],R[5]); 
000066  1 0  "00000001011001010010100000010010"   // (R[5]) = _ls_1_B1 (R[11],R[5]); 
000067  1 0  "00000000101001110110000000010101"   // (R[12]) = _ne_2_B1 (R[5],R[7]); 
000068  1 0  "00100001100000000000000000000100"   // () = nez_br_const_1_B1 (R[12],4); 
000069  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000070  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m63;   next: m2351 (next offset: 74)
000071  1 0  "00010001011001010000000000000001"   // (R[5]) = _ad_const_1_B1 (R[11]); 
000072  1 0  "01010100000010110000000000000010"   // (R[11]) = const_20_B2 (); 
000073  1 0  "00000001011001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[11],R[5]); 

// m64;   next: m2351 (next offset: 74)

// m2351;   next: m2352 (next offset: 74)

// m80;   next: m2352 (next offset: 74)

// m2352;   next: m2353 (next offset: 74)

// m50;   next: m2353 (next offset: 74)

// m2353;   next: m85 (next offset: 75)
000074  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 

// m83;   next: m85 (next offset: 75)

// m85;   next: m2346, jump target: m162 (next offset: 82)
000075  1 0  "01001000000010110011111111110000"   // (R[11]) = const_26_B1 (); 
000076  1 0  "00000000110000000110000000001100"   // (R[12]) = _ge_const_1_B2 (R[6]); 
000077  1 0  "00000000011010110111000000010011"   // (R[14]) = _lt_2_B1 (R[3],R[11]); 
000078  1 0  "01001000000011011100000000010000"   // (R[13]) = const_18_B1 (); 
000079  1 0  "00100000111000000000000001011010"   // () = nez_br_const_2_B1 (R[7],90); 
000080  1 0  "00000000011010110001000000001100"   // (R[2]) = _ge_1_B1 (R[3],R[11]); 
000081  1 0  "00000000011011010110100000000001"   // (R[13],) = _pl_2_B1 (R[3],R[13]); 

// m2346;   next: m450, jump target: m121 (next offset: 85)
000082  1 0  "00100001111000000000000000100110"   // () = nez_br_const_1_B1 (R[15],38); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000084  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m450;   next: m2344, jump target: m1107 (next offset: 90)
000085  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000086  1 0  "00000000100011010010000000001010"   // (R[4]) = _or_2_B1 (R[13],R[4]); 
000087  1 0  "00010100100000000000000000010110"   // () = eqz_br_const_1_B1 (R[4],22); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2344;   next: m2342, jump target: m2340 (next offset: 93)
000090  1 0  "00100000010000000000000000001011"   // () = nez_br_const_1_B1 (R[2],11); 
000091  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2342;   next: m1114, jump target: m120 (next offset: 96)
000093  1 0  "00100001100000000000000000010111"   // () = nez_br_const_1_B1 (R[12],23); 
000094  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000095  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1114;   next: m1115 (next offset: 99)
000096  1 0  "01001000000001000000000000000000"   // (R[4]) = const_25_B3 (); 
000097  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000098  1 0  "01010000001001111111111101111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-132],SP,-132); 

// m1115 subroutine call;   next: m2354 (next offset: 99)

// m2354, jump target: m120 (next offset: 103)
000099  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000100  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000101  1 0  "00100100000000000000000000010000"   // () = j_const_1_B1 (16); 
000102  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m2340;   next: m106, jump target: m105 (next offset: 106)
000103  1 0  "00100001100000000000000000000011"   // () = nez_br_const_1_B1 (R[12],3); 
000104  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000105  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m106;   next: m109 (next offset: 108)
000106  1 0  "01001000000001100000000000000000"   // (R[6]) = const_25_B3 (); 
000107  1 0  "10101000001001101111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[6],SP,-132); 

// m105;   next: m109 (next offset: 108)

// m109 (next offset: 111)
000108  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000109  1 0  "10101000001001101111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[6],SP,-136); 
000110  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m1107;   next: m1108 (next offset: 115)
000111  1 0  "01010000001001011111111101111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-132],SP,-132); 
000112  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000113  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000114  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m1108 subroutine call;   next: m2381 (next offset: 115)

// m2381;   next: m120 (next offset: 118)
000115  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000116  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000117  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m120 (next offset: 122)
000118  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000119  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000120  1 0  "10101000001001011111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[5],SP,-136); 
000121  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m121;   next: m123 (next offset: 122)

// m123;   next: m2345, jump target: m135 (next offset: 126)
000122  1 0  "00000001000010110111100000010101"   // (R[15]) = _ne_1_B1 (R[8],R[11]); 
000123  1 0  "00100001111000000000000000001110"   // () = nez_br_const_1_B1 (R[15],14); 
000124  1 0  "01001000000001110100000000000000"   // (R[7]) = const_16_B1 (); 
000125  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2345;   next: m1121, jump target: m131 (next offset: 129)
000126  1 0  "00100001100000000000000000000110"   // () = nez_br_const_1_B1 (R[12],6); 
000127  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000128  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1121;   next: m1122 (next offset: 132)
000129  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000130  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000131  1 0  "01001000000001000011111111110000"   // (R[4]) = const_26_B1 (); 

// m1122 subroutine call;   next: m2357 (next offset: 132)

// m2357;   next: m134 (next offset: 134)
000132  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000133  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m131;   next: m134 (next offset: 134)

// m134 (next offset: 139)
000134  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000135  1 0  "10101000001001001111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[4],SP,-136); 
000136  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000137  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000138  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m135;   next: m137 (next offset: 139)

// m137;   next: m1125, jump target: m144 (next offset: 143)
000139  1 0  "00000000110001110111100000010101"   // (R[15]) = _ne_1_B1 (R[6],R[7]); 
000140  1 0  "00100001111000000000000000001100"   // () = nez_br_const_1_B1 (R[15],12); 
000141  1 0  "01001000000001110011111111100000"   // (R[7]) = const_17_B1 (); 
000142  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1125;   next: m1126 (next offset: 147)
000143  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000144  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m1126 subroutine call;   next: m143 (next offset: 147)

// m143 (next offset: 154)
000147  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000148  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000149  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000150  1 0  "10101000001001101111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[6],SP,-136); 
000151  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000152  1 0  "10101000001001001111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[4],SP,-132); 
000153  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m144;   next: m146 (next offset: 154)

// m146;   next: m150, jump target: m160 (next offset: 158)
000154  1 0  "00000000110001110011100000010101"   // (R[7]) = _ne_1_B1 (R[6],R[7]); 
000155  1 0  "00100000111000000000000000001110"   // () = nez_br_const_1_B1 (R[7],14); 
000156  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000157  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m150;   next: m154, jump target: m158 (next offset: 162)
000158  1 0  "00000000100000000011100000010011"   // (R[7]) = _lt_const_1_B2 (R[4]); 
000159  1 0  "00100000111000000000000000001010"   // () = nez_br_const_1_B1 (R[7],10); 
000160  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000161  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m154;   next: m155 (next offset: 164)
000162  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000163  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m155 subroutine call;   next: m157 (next offset: 164)

// m157 (next offset: 171)
000164  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000165  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000166  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000167  1 0  "10101000001001101111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[6],SP,-136); 
000168  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000169  1 0  "10101000001001001111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[4],SP,-132); 
000170  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m158;   next: m2358 (next offset: 171)

// m2358;   next: m2359 (next offset: 171)

// m160;   next: m2359 (next offset: 171)

// m2359;   next: m542 (next offset: 171)

// m162;   next: m542 (next offset: 171)

// m542;   next: m466, jump target: m212 (next offset: 175)
000171  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000172  1 0  "00100000111000000000000000111001"   // () = nez_br_const_2_B1 (R[7],57); 
000173  1 0  "00000000100010100011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[10]); 
000174  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m466;   next: m2347, jump target: m210 (next offset: 182)
000175  1 0  "00000000011000000011100000001011"   // (R[7]) = eqz_1_B1 (R[3]); 
000176  1 0  "00000000011010110101000000001011"   // (R[10]) = _eq_1_B1 (R[3],R[11]); 
000177  1 0  "00000000111010010011100000001010"   // (R[7]) = lor_1_B1 (R[9],R[7]); 
000178  1 0  "00000000111010100011100000001010"   // (R[7]) = lor_1_B1 (R[7],R[10]); 
000179  1 0  "00010100111000000000000000110010"   // () = eqz_br_const_2_B1 (R[7],50); 
000180  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000181  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2347;   next: m1133, jump target: m188 (next offset: 185)
000182  1 0  "00100001100000000000000000000111"   // () = nez_br_const_1_B1 (R[12],7); 
000183  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000184  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1133;   next: m1134 (next offset: 188)
000185  1 0  "10101000001011011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[13],SP,-12); 
000186  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000187  1 0  "01001000000001000011111111110000"   // (R[4]) = const_26_B1 (); 

// m1134 subroutine call;   next: m2360 (next offset: 188)

// m2360, jump target: m2361 (next offset: 191)
000188  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000189  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000190  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m188;   next: m2361 (next offset: 194)
000191  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000192  1 0  "10101000001001101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[6],SP,-8); 
000193  1 0  "10101000001011011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[13],SP,-12); 

// m2361;   next: m470, jump target: m206 (next offset: 197)
000194  1 0  "00100000100000000000000000011101"   // () = nez_br_const_1_B1 (R[4],29); 
000195  1 0  "01010000001001101111111111100000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000196  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m470;   next: m199, jump target: m1141 (next offset: 201)
000197  1 0  "00000000101001100010000000001010"   // (R[4]) = _or_2_B1 (R[5],R[6]); 
000198  1 0  "00010100100000000000000000001101"   // () = eqz_br_const_1_B1 (R[4],13); 
000199  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000200  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m199;   next: m1160, jump target: m203 (next offset: 205)
000201  1 0  "10010100110001100000000000000001"   // (R[6]) = _ne_const_1_B1 (R[6]); 
000202  1 0  "00100000110000000000000000000111"   // () = nez_br_const_1_B1 (R[6],7); 
000203  1 0  "01001000000001000000000000000000"   // (R[4]) = const_25_B3 (); 
000204  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1160;   next: m1161 (next offset: 208)
000205  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m1161 subroutine call;   next: m2362 (next offset: 208)

// m2362, jump target: m209 (next offset: 211)
000208  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000209  1 0  "00100100000000000000000000010000"   // () = j_const_1_B1 (16); 
000210  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m203, jump target: m209 (next offset: 213)
000211  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000212  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m1141;   next: m1142 (next offset: 217)
000213  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000214  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000215  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000216  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 

// m1142 subroutine call;   next: m1152 (next offset: 217)

// m1152;   next: m1153 (next offset: 222)
000217  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000218  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000219  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000220  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000221  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m1153 subroutine call;   next: m2382 (next offset: 222)

// m2382, jump target: m209 (next offset: 225)
000222  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000223  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000224  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m206;   next: m209 (next offset: 226)
000225  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m209 (next offset: 231)
000226  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000227  1 0  "10101000001001001111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[4],SP,-136); 
000228  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000229  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000230  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m210;   next: m2365 (next offset: 231)

// m2365;   next: m476 (next offset: 231)

// m212;   next: m476 (next offset: 231)

// m476;   next: m219, jump target: m1168 (next offset: 237)
000231  1 0  "10011100100001110000000000011111"   // (R[7]) = _rs_const_3_B1 (R[4]); 
000232  1 0  "00001000111001111111111111111111"   // (R[7],MC) = _pl_const_3_B1 (R[7]); 
000233  1 0  "00000000101001110010100000001010"   // (R[5]) = _or_2_B1 (R[7],R[5]); 
000234  1 0  "00010100101000000000001111101110"   // () = eqz_br_const_1_B1 (R[5],1006); 
000235  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000236  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m219;   next: m287, jump target: m223 (next offset: 252)
000237  1 0  "01001000000011000000000000001111"   // (R[12]) = lhi_const_1_B1 (15); 
000238  1 0  "01001000000010100011111111010101"   // (R[10]) = lhi_const_1_B1 (16341); 
000239  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000240  1 0  "01001000000001010100000111100000"   // (R[5]) = const_13_B1 (); 
000241  1 0  "01010101100011001111111111111111"   // (R[12]) = w32_const_bor_1_B1 (R[12],65535); 
000242  1 0  "01010101010010100101010101010101"   // (R[10]) = w32_const_bor_1_B1 (R[10],21845); 
000243  1 0  "01001000000010010110010100101011"   // (R[9]) = lhi_const_1_B1 (25899); 
000244  1 0  "00000001000001010010100000001110"   // (R[5]) = _gt_2_B1 (R[8],R[5]); 
000245  1 0  "10101000001010101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[10],SP,-36); 
000246  1 0  "10101000001011001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[12],SP,-40); 
000247  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000248  1 0  "01010101001010011000001011111110"   // (R[9]) = w32_const_bor_1_B1 (R[9],33534); 
000249  1 0  "00100000101000000000000110101001"   // () = nez_br_const_1_B1 (R[5],425); 
000250  1 0  "10101000001010011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[9],SP,-28); 
000251  1 0  "01001000000010010000000000010000"   // (R[9]) = const_14_B1 (); 

// m287;   next: m1321, jump target: m291 (next offset: 256)
000252  1 0  "00000000011010010010100000001100"   // (R[5]) = _ge_1_B1 (R[3],R[9]); 
000253  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
000254  1 0  "01001000000001000000000000000000"   // (R[4]) = const_25_B3 (); 
000255  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1321;   next: m1322 (next offset: 260)
000256  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000257  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000258  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000259  1 0  "01001000000001100100001101000000"   // (R[6]) = const_21_B1 (); 

// m1322 subroutine call;   next: m2337 (next offset: 260)

// m2337;   next: m293 (next offset: 267)
000260  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000261  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000262  1 0  "00001000000001001111111111001011"   // (R[4]) = const_9_B1 (); 
000263  1 0  "01010000001011001111111111011000"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000264  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000265  1 0  "01001000000010110011111111110000"   // (R[11]) = const_26_B1 (); 
000266  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m291;   next: m293 (next offset: 267)

// m293;   next: m298, jump target: m296 (next offset: 277)
000267  1 0  "00000000011011000011000000000011"   // (R[6]) = _ad_1_B1 (R[3],R[12]); 
000268  1 0  "01001000000001010000000000000011"   // (R[5]) = lhi_const_1_B1 (3); 
000269  1 0  "00000000110010110100000000001010"   // (R[8]) = _or_1_B1 (R[6],R[11]); 
000270  1 0  "01010100101001011001100010001110"   // (R[5]) = w32_const_bor_1_B1 (R[5],39054); 
000271  1 0  "00000000110001010010100000010000"   // (R[5]) = _le_2_B1 (R[6],R[5]); 
000272  1 0  "10011000011000110000000000010100"   // (R[3]) = _rs_const_1_B1 (R[3]); 
000273  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
000274  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
000275  1 0  "00001000011000111111110000000001"   // (R[3],MC) = _pl_const_2_B1 (R[3]); 
000276  1 0  "00000000011001000010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[3]); 

// m298;   next: m302, jump target: m301 (next offset: 283)
000277  1 0  "01001000000001110000000000001011"   // (R[7]) = lhi_const_1_B1 (11); 
000278  1 0  "01010100111001111011011001111010"   // (R[7]) = w32_const_bor_1_B1 (R[7],46714); 
000279  1 0  "00000000110001110011000000010011"   // (R[6]) = _lt_1_B1 (R[6],R[7]); 
000280  1 0  "00100000110000000000000000000110"   // () = nez_br_const_1_B1 (R[6],6); 
000281  1 0  "01010100000001110000000000000001"   // (R[7]) = const_23_B2 (); 
000282  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m302;   next: m2368 (next offset: 288)
000283  1 0  "01001000000001111111111111110000"   // (R[7]) = const_8_B1 (); 
000284  1 0  "00000000111010000100000000000001"   // (R[8],) = _pl_2_B1 (R[8],R[7]); 
000285  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_4_B1 (R[4]); 
000286  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
000287  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m301;   next: m2368 (next offset: 288)

// m2368;   next: m1820 (next offset: 288)

// m296;   next: m1820 (next offset: 288)

// m1820;   next: m1821 (next offset: 314)
000288  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000289  1 0  "01010100101000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[5],0); 
000290  1 0  "10001000111001100000000000000011"   // (R[6]) = _ls_const_2_B1 (R[7]); 
000291  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000292  1 0  "00000000011001100001100000000001"   // (R[3],) = _pl_1_B1 (R[3],R[6]); 
000293  1 0  "10101000001001101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[6],SP,-52); 
000294  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000295  1 0  "00000000101001100011000000000001"   // (R[6],) = _pl_1_B1 (R[5],R[6]); 
000296  1 0  "10011001000010000000000000000001"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000297  1 0  "01001000000001010010000000000000"   // (R[5]) = const_6_B1 (); 
000298  1 0  "00000000101010000100100000001010"   // (R[9]) = _or_1_B1 (R[8],R[5]); 
000299  1 0  "01001000000010100000000000001000"   // (R[10]) = const_7_B1 (); 
000300  1 0  "01010000110001010000000000000000"   // (R[5]) = load_1_B1 (R[6],DMb); 
000301  1 0  "01010000011010000000000000000100"   // (R[8]) = load__pl_const_1_B1 (R[3],DMb); 
000302  1 0  "10001000111001110000000000010010"   // (R[7]) = _ls_const_3_B1 (R[7]); 
000303  1 0  "00000001001010100100100000000001"   // (R[9],) = _pl_2_B1 (R[9],R[10]); 
000304  1 0  "01010000011000110000000000000000"   // (R[3]) = load_1_B1 (R[3],DMb); 
000305  1 0  "00000000111010010011100000000001"   // (R[7],) = _pl_1_B1 (R[9],R[7]); 
000306  1 0  "01010000110001100000000000000100"   // (R[6]) = load__pl_const_1_B1 (R[6],DMb); 
000307  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000308  1 0  "10101000001001101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[6],SP,-60); 
000309  1 0  "10101000001001011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[5],SP,-64); 
000310  1 0  "10101000001010001111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[8],SP,-68); 
000311  1 0  "10101000001000111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[3],SP,-72); 
000312  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000313  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1821 subroutine call;   next: m1489 (next offset: 314)

// m1489;   next: m1490 (next offset: 331)
000314  1 0  "01001000000001110000000000000000"   // (R[7]) = lhi_const_1_B1 (0); 
000315  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000316  1 0  "01010100111001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],0); 
000317  1 0  "00000000100001110010000000000001"   // (R[4],) = _pl_1_B1 (R[7],R[4]); 
000318  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000319  1 0  "01010000100010000000000000000000"   // (R[8]) = load_1_B1 (R[4],DMb); 
000320  1 0  "01010000100010100000000000000100"   // (R[10]) = load__pl_const_1_B1 (R[4],DMb); 
000321  1 0  "01010000001010011111111111111000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000322  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000323  1 0  "01010000001001101111111110111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000324  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000325  1 0  "10101000001010101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[10],SP,-52); 
000326  1 0  "10101000001010001111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[8],SP,-76); 
000327  1 0  "10101000001000111111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[3],SP,-80); 
000328  1 0  "10101000001010011111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[9],SP,-84); 
000329  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000330  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1490 subroutine call;   next: m1499 (next offset: 331)

// m1499;   next: m1500 (next offset: 340)
000331  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000332  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000333  1 0  "01010000001001101111111110111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000334  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000335  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000336  1 0  "10101000001000111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[3],SP,-88); 
000337  1 0  "10101000001010001111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[8],SP,-92); 
000338  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000339  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m1500 subroutine call;   next: m1503 (next offset: 340)

// m1503;   next: m1504 (next offset: 345)
000340  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000341  1 0  "01001000000001000011111111110000"   // (R[4]) = const_26_B1 (); 
000342  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000343  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000344  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m1504 subroutine call;   next: m1513 (next offset: 345)

// m1513;   next: m1514 (next offset: 352)
000345  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000346  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000347  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000348  1 0  "10101000001001111111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[7],SP,-96); 
000349  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000350  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000351  1 0  "01010000001001011111111110101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 

// m1514 subroutine call;   next: m1570 (next offset: 352)

// m1570;   next: m1571 (next offset: 359)
000352  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000353  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000354  1 0  "10101000001001101111111110011000"   // (__spill_DMw[-104]) = stack_store_bndl_B3 (R[6],SP,-104); 
000355  1 0  "10101000001001111111111110010100"   // (__spill_DMw[-108]) = stack_store_bndl_B3 (R[7],SP,-108); 
000356  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000357  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000358  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m1571 subroutine call;   next: m1580 (next offset: 359)

// m1580;   next: m1581 (next offset: 366)
000359  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000360  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000361  1 0  "10101000001001111111111110010000"   // (__spill_DMw[-112]) = stack_store_bndl_B3 (R[7],SP,-112); 
000362  1 0  "10101000001001101111111110001100"   // (__spill_DMw[-116]) = stack_store_bndl_B3 (R[6],SP,-116); 
000363  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000364  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000365  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m1581 subroutine call;   next: m1585 (next offset: 366)

// m1585;   next: m1586 (next offset: 377)
000366  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000367  1 0  "10101000001001101111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[6],SP,-124); 
000368  1 0  "01001000000001110011111111001010"   // (R[7]) = lhi_const_1_B1 (16330); 
000369  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000370  1 0  "01010000001001011111111110010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 
000371  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000372  1 0  "10101000001010001111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[8],SP,-120); 
000373  1 0  "01010100111001100111111000101000"   // (R[6]) = w32_const_bor_1_B1 (R[7],32296); 
000374  1 0  "01001000000000110100101001000101"   // (R[3]) = lhi_const_1_B1 (19013); 
000375  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000376  1 0  "01010100011001110100111011101111"   // (R[7]) = w32_const_bor_1_B1 (R[3],20207); 

// m1586 subroutine call;   next: m1595 (next offset: 377)

// m1595;   next: m1596 (next offset: 384)
000377  1 0  "01001000000001011001001111001001"   // (R[5]) = lhi_const_1_B1 (-27703); 
000378  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000379  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000380  1 0  "01001000000001000011111111001101"   // (R[4]) = lhi_const_1_B1 (16333); 
000381  1 0  "01010100101001011101101101100101"   // (R[5]) = w32_const_bor_1_B1 (R[5],56165); 
000382  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000383  1 0  "01010100100001001000011001001010"   // (R[4]) = w32_const_bor_1_B1 (R[4],34378); 

// m1596 subroutine call;   next: m1600 (next offset: 384)

// m1600;   next: m1601 (next offset: 389)
000384  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000385  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000386  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000387  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000388  1 0  "01010000001001011111111110010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m1601 subroutine call;   next: m1610 (next offset: 389)

// m1610;   next: m1611 (next offset: 396)
000389  1 0  "01001000000001011010100100011101"   // (R[5]) = lhi_const_1_B1 (-22243); 
000390  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000391  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000392  1 0  "01001000000001000011111111010001"   // (R[4]) = lhi_const_1_B1 (16337); 
000393  1 0  "01010100101001010100000100000001"   // (R[5]) = w32_const_bor_1_B1 (R[5],16641); 
000394  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000395  1 0  "01010100100001000111010001100000"   // (R[4]) = w32_const_bor_1_B1 (R[4],29792); 

// m1611 subroutine call;   next: m1615 (next offset: 396)

// m1615;   next: m1616 (next offset: 401)
000396  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000397  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000398  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000399  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000400  1 0  "01010000001001011111111110010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m1616 subroutine call;   next: m1625 (next offset: 401)

// m1625;   next: m1626 (next offset: 407)
000401  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000402  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000403  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000404  1 0  "01001000000001010101000110001111"   // (R[5]) = lhi_const_1_B1 (20879); 
000405  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000406  1 0  "01010100101001010010011001001101"   // (R[5]) = w32_const_bor_1_B1 (R[5],9805); 

// m1626 subroutine call;   next: m1630 (next offset: 407)

// m1630;   next: m1631 (next offset: 412)
000407  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000408  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000409  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000410  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000411  1 0  "01010000001001011111111110010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m1631 subroutine call;   next: m1640 (next offset: 412)

// m1640;   next: m1641 (next offset: 419)
000412  1 0  "01001000000001011101101101101111"   // (R[5]) = lhi_const_1_B1 (-9361); 
000413  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000414  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000415  1 0  "01001000000001000011111111011011"   // (R[4]) = lhi_const_1_B1 (16347); 
000416  1 0  "01010100101001011010101111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],44031); 
000417  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000418  1 0  "01010100100001000110110110110110"   // (R[4]) = w32_const_bor_1_B1 (R[4],28086); 

// m1641 subroutine call;   next: m1645 (next offset: 419)

// m1645;   next: m1646 (next offset: 424)
000419  1 0  "01010000001001001111111110001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000420  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000421  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000422  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000423  1 0  "01010000001001011111111110010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m1646 subroutine call;   next: m1655 (next offset: 424)

// m1655;   next: m1656 (next offset: 431)
000424  1 0  "01001000000001010011001100110011"   // (R[5]) = lhi_const_1_B1 (13107); 
000425  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000426  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000427  1 0  "01001000000001000011111111100011"   // (R[4]) = lhi_const_1_B1 (16355); 
000428  1 0  "01010100101001010011001100000011"   // (R[5]) = w32_const_bor_1_B1 (R[5],13059); 
000429  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000430  1 0  "01010100100001000011001100110011"   // (R[4]) = w32_const_bor_1_B1 (R[4],13107); 

// m1656 subroutine call;   next: m1660 (next offset: 431)

// m1660;   next: m1661 (next offset: 436)
000431  1 0  "01010000001001001111111110001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-120],SP,-120); 
000432  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000433  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000434  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000435  1 0  "01010000001001011111111110000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-124],SP,-124); 

// m1661 subroutine call;   next: m1664 (next offset: 436)

// m1664;   next: m1665 (next offset: 445)
000436  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000437  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000438  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000439  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000440  1 0  "01010000001001111111111110010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000441  1 0  "01010000001001101111111110011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000442  1 0  "10101000001001001111111110010000"   // (__spill_DMw[-112]) = stack_store_bndl_B3 (R[4],SP,-112); 
000443  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000444  1 0  "01010000001001001111111110011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 

// m1665 subroutine call;   next: m1691 (next offset: 445)

// m1691;   next: m1692 (next offset: 454)
000445  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000446  1 0  "10101000001001111111111110001100"   // (__spill_DMw[-116]) = stack_store_bndl_B3 (R[7],SP,-116); 
000447  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000448  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000449  1 0  "01010000001001101111111110011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000450  1 0  "10101000001001001111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[4],SP,-120); 
000451  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000452  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000453  1 0  "01010000001001001111111110011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 

// m1692 subroutine call;   next: m1695 (next offset: 454)

// m1695;   next: m1696 (next offset: 461)
000454  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000455  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000456  1 0  "10101000001001111111111110000100"   // (__spill_DMw[-124]) = stack_store_bndl_B3 (R[7],SP,-124); 
000457  1 0  "10101000001001101111111110000000"   // (__spill_DMw[-128]) = stack_store_bndl_B3 (R[6],SP,-128); 
000458  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000459  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000460  1 0  "01001000000001000100000000001000"   // (R[4]) = const_5_B1 (); 

// m1696 subroutine call;   next: m1521 (next offset: 461)

// m1521;   next: m1522 (next offset: 470)
000461  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000462  1 0  "01010000001001101111111110111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000463  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000464  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000465  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000466  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000467  1 0  "10101000001001011111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[5],SP,-72); 
000468  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000469  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 

// m1522 subroutine call;   next: m1531 (next offset: 470)

// m1531;   next: m1532 (next offset: 475)
000470  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000471  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000472  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000473  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000474  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1532 subroutine call;   next: m1536 (next offset: 475)

// m1536;   next: m1537 (next offset: 484)
000475  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000476  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000477  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000478  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000479  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000480  1 0  "01010000001001001111111110011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000481  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000482  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000483  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1537 subroutine call;   next: m1546 (next offset: 484)

// m1546;   next: m1547 (next offset: 489)
000484  1 0  "01010000001001001111111110100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000485  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000486  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000487  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000488  1 0  "01010000001001011111111110101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 

// m1547 subroutine call;   next: m1551 (next offset: 489)

// m1551;   next: m1552 (next offset: 498)
000489  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000490  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000491  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000492  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000493  1 0  "01010000001001001111111110011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000494  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000495  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000496  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000497  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 

// m1552 subroutine call;   next: m1561 (next offset: 498)

// m1561;   next: m1562 (next offset: 503)
000498  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000499  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000500  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000501  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000502  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1562 subroutine call;   next: m1566 (next offset: 503)

// m1566;   next: m1567 (next offset: 508)
000503  1 0  "01010000001001001111111110011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-100],SP,-100); 
000504  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000505  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000506  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000507  1 0  "01010000001001011111111110100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-96],SP,-96); 

// m1567 subroutine call;   next: m1674 (next offset: 508)

// m1674;   next: m1675 (next offset: 515)
000508  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000509  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000510  1 0  "01010000001001101111111110001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-120],SP,-120); 
000511  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000512  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000513  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000514  1 0  "01010000001001111111111110001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 

// m1675 subroutine call;   next: m1679 (next offset: 515)

// m1679;   next: m1680 (next offset: 520)
000515  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 
000516  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000517  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000518  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000519  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1680 subroutine call;   next: m1705 (next offset: 520)

// m1705;   next: m1706 (next offset: 527)
000520  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000521  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000522  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000523  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000524  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000525  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000526  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m1706 subroutine call;   next: m1712 (next offset: 527)

// m1712;   next: m1713 (next offset: 533)
000527  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000528  1 0  "10101000001001001111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[4],SP,-68); 
000529  1 0  "01001000000001100100000000001000"   // (R[6]) = const_5_B1 (); 
000530  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000531  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000532  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1713 subroutine call;   next: m1722 (next offset: 533)

// m1722;   next: m1723 (next offset: 538)
000533  1 0  "01010000001001101111111110000000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-128],SP,-128); 
000534  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000535  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000536  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000537  1 0  "01010000001001111111111110000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-124],SP,-124); 

// m1723 subroutine call;   next: m1727 (next offset: 538)

// m1727;   next: m1728 (next offset: 543)
000538  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000539  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000540  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000541  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000542  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m1728 subroutine call;   next: m1737 (next offset: 543)

// m1737;   next: m1738 (next offset: 552)
000543  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000544  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000545  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000546  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000547  1 0  "01010000001001101111111110111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000548  1 0  "01010000001001001111111110011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000549  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000550  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000551  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1738 subroutine call;   next: m1741 (next offset: 552)

// m1741;   next: m1742 (next offset: 561)
000552  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000553  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000554  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000555  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000556  1 0  "01010000001001101111111110111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000557  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000558  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000559  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000560  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1742 subroutine call;   next: m1751 (next offset: 561)

// m1751;   next: m1752 (next offset: 570)
000561  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000562  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000563  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000564  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000565  1 0  "01010000001001101111111110011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000566  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000567  1 0  "10101000001010001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[8],SP,-56); 
000568  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000569  1 0  "01010000001001111111111110010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 

// m1752 subroutine call;   next: m1755 (next offset: 570)

// m1755;   next: m1756 (next offset: 575)
000570  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000571  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000572  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000573  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000574  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1756 subroutine call;   next: m1765 (next offset: 575)

// m1765;   next: m1766 (next offset: 582)
000575  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000576  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000577  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000578  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000579  1 0  "10101000001001101111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[6],SP,-56); 
000580  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000581  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1766 subroutine call;   next: m1772 (next offset: 582)

// m1772;   next: m1773 (next offset: 588)
000582  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000583  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000584  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000585  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000586  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000587  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1773 subroutine call;   next: m1782 (next offset: 588)

// m1782;   next: m1783 (next offset: 593)
000588  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000589  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000590  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000591  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000592  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1783 subroutine call;   next: m1787 (next offset: 593)

// m1787;   next: m1788 (next offset: 604)
000593  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000594  1 0  "01001000000001000011111111101110"   // (R[4]) = lhi_const_1_B1 (16366); 
000595  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000596  1 0  "01010100100001001100011100001001"   // (R[4]) = w32_const_bor_1_B1 (R[4],50953); 
000597  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000598  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000599  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000600  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000601  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000602  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000603  1 0  "01001000000001011110000000000000"   // (R[5]) = const_4_B1 (); 

// m1788 subroutine call;   next: m1797 (next offset: 604)

// m1797;   next: m1798 (next offset: 615)
000604  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000605  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000606  1 0  "01001000000001001011111000111110"   // (R[4]) = lhi_const_1_B1 (-16834); 
000607  1 0  "01001000000001010001010001011011"   // (R[5]) = lhi_const_1_B1 (5211); 
000608  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000609  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000610  1 0  "10101000001001111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[7],SP,-72); 
000611  1 0  "01010100100001000010111111100000"   // (R[4]) = w32_const_bor_1_B1 (R[4],12256); 
000612  1 0  "01010100101001010000000111110101"   // (R[5]) = w32_const_bor_1_B1 (R[5],501); 
000613  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000614  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1798 subroutine call;   next: m1801 (next offset: 615)

// m1801;   next: m1802 (next offset: 625)
000615  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000616  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000617  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000618  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000619  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000620  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000621  1 0  "10101000001010001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[8],SP,-36); 
000622  1 0  "01001000000001111101110000111010"   // (R[7]) = lhi_const_1_B1 (-9158); 
000623  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000624  1 0  "01010100111001110000001111111101"   // (R[7]) = w32_const_bor_1_B1 (R[7],1021); 

// m1802 subroutine call;   next: m1811 (next offset: 625)

// m1811;   next: m1812 (next offset: 630)
000625  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000626  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000627  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000628  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000629  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1812 subroutine call;   next: m1816 (next offset: 630)

// m1816;   next: m1817 (next offset: 635)
000630  1 0  "01010000001001101111111111000000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000631  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000632  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000633  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000634  1 0  "01010000001001111111111111000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m1817 subroutine call;   next: m1830 (next offset: 635)

// m1830;   next: m1831 (next offset: 642)
000635  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000636  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000637  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000638  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000639  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000640  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000641  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m1831 subroutine call;   next: m1835 (next offset: 642)

// m1835;   next: m1836 (next offset: 647)
000642  1 0  "01010000001001101111111110110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000643  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000644  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000645  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000646  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m1836 subroutine call;   next: m1845 (next offset: 647)

// m1845;   next: m1846 (next offset: 652)
000647  1 0  "01010000001001101111111110101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000648  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000649  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000650  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000651  1 0  "01010000001001111111111110110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 

// m1846 subroutine call;   next: m1852 (next offset: 652)

// m1852;   next: m1853 (next offset: 658)
000652  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000653  1 0  "01010000001001101111111110101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000654  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000655  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000656  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000657  1 0  "01010000001001111111111110110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 

// m1853 subroutine call;   next: m1862 (next offset: 658)

// m1862;   next: m1863 (next offset: 663)
000658  1 0  "01010000001001101111111110110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000659  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000660  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000661  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000662  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m1863 subroutine call;   next: m1867 (next offset: 663)

// m1867;   next: m1868 (next offset: 668)
000663  1 0  "01010000001001101111111110111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000664  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000665  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000666  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000667  1 0  "01010000001001111111111110111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m1868 subroutine call;   next: m1877 (next offset: 668)

// m1877;   next: m1878 (next offset: 673)
000668  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000669  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000670  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000671  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000672  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1878 subroutine call;   next: m2369 (next offset: 673)

// m2369, jump target: m481 (next offset: 676)
000673  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000674  1 0  "00100100000000000000000010001011"   // () = j_const_1_B1 (139); 
000675  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m223;   next: m227, jump target: m255 (next offset: 681)
000676  1 0  "01001000000001100100001111110000"   // (R[6]) = const_12_B1 (); 
000677  1 0  "00000001000001100011000000010000"   // (R[6]) = _le_1_B1 (R[8],R[6]); 
000678  1 0  "00100000110000000000000000010010"   // () = nez_br_const_1_B1 (R[6],18); 
000679  1 0  "01001000000001010011111111101111"   // (R[5]) = lhi_const_1_B1 (16367); 
000680  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 

// m227;   next: m238, jump target: m239 (next offset: 685)
000681  1 0  "00000000011001010011000000001110"   // (R[6]) = _gt_1_B1 (R[3],R[5]); 
000682  1 0  "00100000110000000000000000000110"   // () = nez_br_const_1_B1 (R[6],6); 
000683  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000684  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m238 (next offset: 690)
000685  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000686  1 0  "10101000001000001111111101111000"   // (dmw_wr) = const_25_B5 (); (__spill_DMw[-136]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-136); 
000687  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000688  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000689  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m239;   next: m2366 (next offset: 690)

// m2366;   next: m252, jump target: m253 (next offset: 693)
000690  1 0  "00100001110000000000000000000110"   // () = nez_br_const_1_B1 (R[14],6); 
000691  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000692  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m252 (next offset: 698)
000693  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000694  1 0  "10101000001000001111111101111000"   // (dmw_wr) = const_25_B5 (); (__spill_DMw[-136]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-136); 
000695  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000696  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000697  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m253;   next: m2367 (next offset: 698)

// m2367;   next: m257 (next offset: 698)

// m255;   next: m257 (next offset: 698)

// m257;   next: m268, jump target: m269 (next offset: 702)
000698  1 0  "00000000011001010011000000001100"   // (R[6]) = _ge_2_B1 (R[3],R[5]); 
000699  1 0  "00100000110000000000000000000110"   // () = nez_br_const_1_B1 (R[6],6); 
000700  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000701  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m268 (next offset: 707)
000702  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000703  1 0  "10101000001000001111111101111000"   // (dmw_wr) = const_25_B5 (); (__spill_DMw[-136]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-136); 
000704  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000705  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000706  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m269;   next: m271 (next offset: 707)

// m271;   next: m282, jump target: m283 (next offset: 711)
000707  1 0  "00000000011010110011000000010000"   // (R[6]) = _le_1_B1 (R[3],R[11]); 
000708  1 0  "00100000110000000000000000000110"   // () = nez_br_const_1_B1 (R[6],6); 
000709  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000710  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m282 (next offset: 716)
000711  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000712  1 0  "10101000001000001111111101111000"   // (dmw_wr) = const_25_B5 (); (__spill_DMw[-136]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-136); 
000713  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000714  1 0  "10101000001001111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[7],SP,-132); 
000715  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m283;   next: m1209 (next offset: 716)

// m1209;   next: m1210 (next offset: 719)
000716  1 0  "01001000000001100011111111110000"   // (R[6]) = const_26_B1 (); 
000717  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000718  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1210 subroutine call;   next: m1219 (next offset: 719)

// m1219;   next: m1220 (next offset: 726)
000719  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000720  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000721  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
000722  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000723  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000724  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000725  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m1220 subroutine call;   next: m1224 (next offset: 726)

// m1224;   next: m1225 (next offset: 735)
000726  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000727  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000728  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000729  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000730  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000731  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000732  1 0  "10101000001001101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[6],SP,-52); 
000733  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000734  1 0  "01001000000001100011111111010000"   // (R[6]) = const_11_B1 (); 

// m1225 subroutine call;   next: m1234 (next offset: 735)

// m1234;   next: m1235 (next offset: 741)
000735  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000736  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000737  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000738  1 0  "01001000000001010101010101010101"   // (R[5]) = lhi_const_1_B1 (21845); 
000739  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000740  1 0  "01010100101001010101010101010101"   // (R[5]) = w32_const_bor_1_B1 (R[5],21845); 

// m1235 subroutine call;   next: m1239 (next offset: 741)

// m1239;   next: m1240 (next offset: 746)
000741  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000742  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000743  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000744  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000745  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1240 subroutine call;   next: m1249 (next offset: 746)

// m1249;   next: m1250 (next offset: 751)
000746  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000747  1 0  "01001000000001000011111111100000"   // (R[4]) = const_17_B1 (); 
000748  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000749  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000750  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m1250 subroutine call;   next: m1254 (next offset: 751)

// m1254;   next: m1255 (next offset: 756)
000751  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000752  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000753  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000754  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000755  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m1255 subroutine call;   next: m1264 (next offset: 756)

// m1264;   next: m1265 (next offset: 767)
000756  1 0  "01001000000001000011111111110111"   // (R[4]) = lhi_const_1_B1 (16375); 
000757  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000758  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000759  1 0  "01010100100001000001010101000111"   // (R[4]) = w32_const_bor_1_B1 (R[4],5447); 
000760  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000761  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000762  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000763  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000764  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000765  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000766  1 0  "01001000000001010110000000000000"   // (R[5]) = const_10_B1 (); 

// m1265 subroutine call;   next: m1268 (next offset: 767)

// m1268;   next: m1269 (next offset: 778)
000767  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000768  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000769  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000770  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000771  1 0  "01001000000001110011111001010100"   // (R[7]) = lhi_const_1_B1 (15956); 
000772  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000773  1 0  "10101000001010001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[8],SP,-24); 
000774  1 0  "01010100111001101010111000001011"   // (R[6]) = w32_const_bor_1_B1 (R[7],44555); 
000775  1 0  "01001000000000111111100001011101"   // (R[3]) = lhi_const_1_B1 (-1955); 
000776  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000777  1 0  "01010100011001111101111101000100"   // (R[7]) = w32_const_bor_1_B1 (R[3],57156); 

// m1269 subroutine call;   next: m1278 (next offset: 778)

// m1278;   next: m1279 (next offset: 787)
000778  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000779  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000780  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000781  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000782  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000783  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000784  1 0  "10101000001010001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[8],SP,-52); 
000785  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000786  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m1279 subroutine call;   next: m1282 (next offset: 787)

// m1282;   next: m1283 (next offset: 792)
000787  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000788  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000789  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000790  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000791  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1283 subroutine call;   next: m1292 (next offset: 792)

// m1292;   next: m1293 (next offset: 799)
000792  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000793  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000794  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000795  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000796  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000797  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000798  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1293 subroutine call;   next: m1299 (next offset: 799)

// m1299;   next: m1300 (next offset: 805)
000799  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000800  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000801  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000802  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000803  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000804  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m1300 subroutine call;   next: m1309 (next offset: 805)

// m1309;   next: m1310 (next offset: 810)
000805  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000806  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000807  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000808  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000809  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m1310 subroutine call;   next: m2384 (next offset: 810)

// m2384;   next: m481 (next offset: 814)
000810  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000811  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000812  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000813  1 0  "10101000001001111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[7],SP,-24); 

// m481;   next: m310, jump target: m311 (next offset: 821)
000814  1 0  "00001000100001001111111111111111"   // (R[4],MC) = _pl_const_3_B1 (R[4]); 
000815  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000816  1 0  "00000000100001110011100000001010"   // (R[7]) = _or_2_B1 (R[7],R[4]); 
000817  1 0  "01001000000000110011111111110000"   // (R[3]) = const_26_B1 (); 
000818  1 0  "00100000111000000000000000000010"   // () = nez_br_const_2_B1 (R[7],2); 
000819  1 0  "01010000001001011111111101111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-132],SP,-132); 
000820  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m310;   next: m1933 (next offset: 822)
000821  1 0  "01001000000000111011111111110000"   // (R[3]) = const_3_B1 (); 

// m311;   next: m1933 (next offset: 822)

// m1933;   next: m1934 (next offset: 825)
000822  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000823  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000824  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m1934 subroutine call;   next: m1912 (next offset: 825)

// m1912;   next: m1913 (next offset: 834)
000825  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000826  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000827  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000828  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000829  1 0  "01010000001001011111111101111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-132],SP,-132); 
000830  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000831  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000832  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000833  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m1913 subroutine call;   next: m1922 (next offset: 834)

// m1922;   next: m1923 (next offset: 839)
000834  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000835  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000836  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
000837  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000838  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1923 subroutine call;   next: m1937 (next offset: 839)

// m1937;   next: m1938 (next offset: 844)
000839  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000840  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000841  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000842  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000843  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1938 subroutine call;   next: m1947 (next offset: 844)

// m1947;   next: m1948 (next offset: 853)
000844  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000845  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000846  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000847  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000848  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000849  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000850  1 0  "10101000001001111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[7],SP,-24); 
000851  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000852  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m1948 subroutine call;   next: m1951 (next offset: 853)

// m1951;   next: m1952 (next offset: 860)
000853  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000854  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000855  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000856  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000857  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000858  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000859  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1952 subroutine call;   next: m1988 (next offset: 860)

// m1988;   next: m1989 (next offset: 867)
000860  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000861  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000862  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000863  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000864  1 0  "10101000001001001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[4],SP,-52); 
000865  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000866  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m1989 subroutine call;   next: m1908 (next offset: 867)

// m1908;   next: m336, jump target: m1964 (next offset: 878)
000867  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000868  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000869  1 0  "00000000100001110010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[7]); 
000870  1 0  "10101000001001011111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[5],SP,-56); 
000871  1 0  "01001000000000110100000010010000"   // (R[3]) = const_2_B1 (); 
000872  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000873  1 0  "10101000001001101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[6],SP,-60); 
000874  1 0  "00000000100000110010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[3]); 
000875  1 0  "00100000101000000000000000111001"   // () = nez_br_const_1_B1 (R[5],57); 
000876  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000877  1 0  "10101000001001111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[7],SP,-64); 

// m336;   next: m1999, jump target: m358 (next offset: 885)
000878  1 0  "01001000000001110100000010010000"   // (R[7]) = lhi_const_1_B1 (16528); 
000879  1 0  "01010100111001111100110000000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],52224); 
000880  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000881  1 0  "00000000110001110011100000010011"   // (R[7]) = _lt_1_B1 (R[6],R[7]); 
000882  1 0  "00100000111000000000000000110000"   // () = nez_br_const_1_B1 (R[7],48); 
000883  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000884  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1999;   next: m2000 (next offset: 900)
000885  1 0  "01001000000001110011111101101111"   // (R[7]) = lhi_const_1_B1 (16239); 
000886  1 0  "01010100111001110011010000000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],13312); 
000887  1 0  "00000000100001110011000000000001"   // (R[6],) = _pl_1_B1 (R[4],R[7]); 
000888  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000889  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_2_B1 (R[6],R[5]); 
000890  1 0  "01001000000001000000000110100101"   // (R[4]) = lhi_const_1_B1 (421); 
000891  1 0  "01001000000001111100001011111000"   // (R[7]) = lhi_const_1_B1 (-15624); 
000892  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000893  1 0  "01010100100001100110111000011111"   // (R[6]) = w32_const_bor_1_B1 (R[4],28191); 
000894  1 0  "01010100111001111111001101011001"   // (R[7]) = w32_const_bor_1_B1 (R[7],62297); 
000895  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000896  1 0  "10101000001001101111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[6],SP,-68); 
000897  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000898  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000899  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m2000 subroutine call;   next: m2009 (next offset: 900)

// m2009;   next: m2010 (next offset: 905)
000900  1 0  "01010000001001101111111110111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000901  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000902  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000903  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000904  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m2010 subroutine call;   next: m1997 (next offset: 905)

// m1997;   next: m922, jump target: m346 (next offset: 912)
000905  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000906  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000907  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000908  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000909  1 0  "00100000111000000000000000001110"   // () = nez_br_const_2_B1 (R[7],14); 
000910  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000911  1 0  "10101000001001101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[6],SP,-28); 

// m922;   next: m923 (next offset: 917)
000912  1 0  "10101000001000111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[3],SP,-132); 
000913  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000914  1 0  "01010000001001111111111111000000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000915  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000916  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m923 subroutine call;   next: m1064 (next offset: 917)

// m1064;   next: m354, jump target: m361 (next offset: 920)
000917  1 0  "00010100011000000000000001000010"   // () = eqz_br_const_1_B1 (R[3],66); 
000918  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000919  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m354 (next offset: 925)
000920  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000921  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000922  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000923  1 0  "10101000001001111111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[7],SP,-136); 
000924  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m346 (next offset: 932)
000925  1 0  "10101000001000111111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[3],SP,-132); 
000926  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000927  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000928  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000929  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000930  1 0  "10101000001001111111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[7],SP,-136); 
000931  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m358, jump target: m361 (next offset: 934)
000932  1 0  "00100100000000000000000000110100"   // () = j_const_1_B1 (52); 
000933  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m1964;   next: m1965 (next offset: 948)
000934  1 0  "01001000000001111011111101110000"   // (R[7]) = const_1_B1 (); 
000935  1 0  "00000000100001110011000000000001"   // (R[6],) = _pl_2_B1 (R[4],R[7]); 
000936  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000937  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_2_B1 (R[6],R[5]); 
000938  1 0  "01001000000001000111111000110111"   // (R[4]) = lhi_const_1_B1 (32311); 
000939  1 0  "01001000000001111000100000000000"   // (R[7]) = lhi_const_1_B1 (-30720); 
000940  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000941  1 0  "01010100100001101110010000111100"   // (R[6]) = w32_const_bor_1_B1 (R[4],58428); 
000942  1 0  "01010100111001110111010110011100"   // (R[7]) = w32_const_bor_1_B1 (R[7],30108); 
000943  1 0  "10101000001001111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[7],SP,-68); 
000944  1 0  "10101000001001101111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[6],SP,-72); 
000945  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
000946  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000947  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m1965 subroutine call;   next: m1975 (next offset: 948)

// m1975;   next: m1976 (next offset: 953)
000948  1 0  "01010000001001101111111110111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000949  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000950  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000951  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000952  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m1976 subroutine call;   next: m1962 (next offset: 953)

// m1962;   next: m1984, jump target: m323 (next offset: 958)
000953  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000954  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000955  1 0  "00100000100000000000000000010101"   // () = nez_br_const_2_B1 (R[4],21); 
000956  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000957  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 

// m1984;   next: m1985 (next offset: 965)
000958  1 0  "10101000001001101111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[6],SP,-132); 
000959  1 0  "01001000000000110011110010010111"   // (R[3]) = lhi_const_1_B1 (15511); 
000960  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000961  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000962  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000963  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000964  1 0  "01010100011001100001010101000111"   // (R[6]) = w32_const_bor_1_B1 (R[3],5447); 

// m1985 subroutine call;   next: m1982 (next offset: 965)

// m1982;   next: m1069 (next offset: 970)
000965  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000966  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000967  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000968  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000969  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 

// m1069 subroutine call;   next: m1073 (next offset: 970)

// m1073;   next: m331, jump target: m361 (next offset: 973)
000970  1 0  "00010100011000000000000000001101"   // () = eqz_br_const_1_B1 (R[3],13); 
000971  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000972  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m331 (next offset: 978)
000973  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000974  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000975  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000976  1 0  "10101000001001111111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[7],SP,-136); 
000977  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m323 (next offset: 985)
000978  1 0  "10101000001001101111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[6],SP,-132); 
000979  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000980  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000981  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000982  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000983  1 0  "10101000001001111111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[7],SP,-136); 
000984  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

// m361;   next: m2032, jump target: m372 (next offset: 993)
000985  1 0  "01001000000001100011111111100000"   // (R[6]) = const_17_B1 (); 
000986  1 0  "00000000100001100100000000010000"   // (R[8]) = _le_1_B1 (R[4],R[6]); 
000987  1 0  "10011000100001110000000000010100"   // (R[7]) = _rs_const_1_B1 (R[4]); 
000988  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000989  1 0  "01001000000000110000000000000000"   // (R[3]) = const_25_B3 (); 
000990  1 0  "00100001000000000000000000100101"   // () = nez_br_const_1_B1 (R[8],37); 
000991  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000992  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m2032;   next: m368, jump target: m369 (next offset: 1017)
000993  1 0  "00001000111001111111110000000010"   // (R[7],MC) = _pl_const_1_B1 (R[7]); 
000994  1 0  "01001000000001010000000000010000"   // (R[5]) = const_14_B1 (); 
000995  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000996  1 0  "00000000101001110011100000010111"   // (R[7]) = _rs_1_B1 (R[5],R[7]); 
000997  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000998  1 0  "00000000110001110011100000000001"   // (R[7],) = _pl_1_B1 (R[6],R[7]); 
000999  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
001000  1 0  "00000000011001110100000000000011"   // (R[8]) = _ad_1_B1 (R[7],R[3]); 
001001  1 0  "01010000001000111111111111011000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
001002  1 0  "10011001000010000000000000010100"   // (R[8]) = _rs_const_1_B1 (R[8]); 
001003  1 0  "00000000011001110100100000000011"   // (R[9]) = _ad_1_B1 (R[7],R[3]); 
001004  1 0  "00001001000010001111110000000001"   // (R[8],MC) = _pl_const_2_B1 (R[8]); 
001005  1 0  "00000000011010000001100000010111"   // (R[3]) = _rs_2_B1 (R[3],R[8]); 
001006  1 0  "01010100000010100000000000010100"   // (R[10]) = const_22_B2 (); 
001007  1 0  "00000000101010010010100000001010"   // (R[5]) = _or_1_B1 (R[9],R[5]); 
001008  1 0  "00000001010010000100000000011000"   // (R[8],MC) = _mi_1_B1 (R[10],R[8]); 
001009  1 0  "00000000101010000010100000010110"   // (R[5]) = _rs_3_B1 (R[5],R[8]); 
001010  1 0  "00001000000010011111111111111111"   // (R[9]) = const_15_B1 (); 
001011  1 0  "00000000011010010100000000011010"   // (R[8]) = _er_1_B1 (R[3],R[9]); 
001012  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
001013  1 0  "00000000110000000001100000001100"   // (R[3]) = _ge_const_1_B2 (R[6]); 
001014  1 0  "00100000011000000000000000000100"   // () = nez_br_const_1_B1 (R[3],4); 
001015  1 0  "00000000111010000011000000000011"   // (R[6]) = _ad_1_B1 (R[7],R[8]); 
001016  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m368;   next: m2035 (next offset: 1020)
001017  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
001018  1 0  "00000000000001010010100000011000"   // (R[5],MC) = _mi_const_1_B1 (R[5]); 
001019  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 

// m369;   next: m2035 (next offset: 1020)

// m2035;   next: m2036 (next offset: 1022)
001020  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001021  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2036 subroutine call;   next: m2375 (next offset: 1022)

// m2375;   next: m2092 (next offset: 1029)
001022  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001023  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001024  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
001025  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
001026  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001027  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
001028  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 

// m372;   next: m2092 (next offset: 1029)

// m2092;   next: m2093 (next offset: 1032)
001029  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
001030  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001031  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2093 subroutine call;   next: m2099 (next offset: 1032)

// m2099;   next: m2100 (next offset: 1042)
001032  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
001033  1 0  "10001000100001110000000000010100"   // (R[7]) = _ls_const_1_B1 (R[4]); 
001034  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001035  1 0  "01001000000001100011111111100110"   // (R[6]) = lhi_const_1_B1 (16358); 
001036  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
001037  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
001038  1 0  "01010100110001100010111001000011"   // (R[6]) = w32_const_bor_1_B1 (R[6],11843); 
001039  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
001040  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001041  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 

// m2100 subroutine call;   next: m2109 (next offset: 1042)

// m2109;   next: m2110 (next offset: 1051)
001042  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001043  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001044  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001045  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001046  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001047  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
001048  1 0  "10101000001001011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[5],SP,-44); 
001049  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001050  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 

// m2110 subroutine call;   next: m2113 (next offset: 1051)

// m2113;   next: m2114 (next offset: 1056)
001051  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
001052  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001053  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001054  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001055  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m2114 subroutine call;   next: m2123 (next offset: 1056)

// m2123;   next: m2124 (next offset: 1063)
001056  1 0  "01001000000001111111111011111010"   // (R[7]) = lhi_const_1_B1 (-262); 
001057  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001058  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001059  1 0  "01001000000001100011111111100110"   // (R[6]) = lhi_const_1_B1 (16358); 
001060  1 0  "01010100111001110011100111101111"   // (R[7]) = w32_const_bor_1_B1 (R[7],14831); 
001061  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001062  1 0  "01010100110001100010111001000010"   // (R[6]) = w32_const_bor_1_B1 (R[6],11842); 

// m2124 subroutine call;   next: m2128 (next offset: 1063)

// m2128;   next: m2129 (next offset: 1074)
001063  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001064  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001065  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
001066  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
001067  1 0  "01001000000001111011111000100000"   // (R[7]) = lhi_const_1_B1 (-16864); 
001068  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001069  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
001070  1 0  "01010100111001100101110001100001"   // (R[6]) = w32_const_bor_1_B1 (R[7],23649); 
001071  1 0  "01001000000000110000110010101000"   // (R[3]) = lhi_const_1_B1 (3240); 
001072  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001073  1 0  "01010100011001110110110000111001"   // (R[7]) = w32_const_bor_1_B1 (R[3],27705); 

// m2129 subroutine call;   next: m2138 (next offset: 1074)

// m2138;   next: m2139 (next offset: 1079)
001074  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001075  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001076  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001077  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001078  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m2139 subroutine call;   next: m2143 (next offset: 1079)

// m2143;   next: m2144 (next offset: 1086)
001079  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001080  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001081  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001082  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
001083  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
001084  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001085  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2144 subroutine call;   next: m2153 (next offset: 1086)

// m2153;   next: m2154 (next offset: 1093)
001086  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001087  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001088  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001089  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
001090  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
001091  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001092  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2154 subroutine call;   next: m2158 (next offset: 1093)

// m2158;   next: m2159 (next offset: 1098)
001093  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001094  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001095  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001096  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001097  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m2159 subroutine call;   next: m2168 (next offset: 1098)

// m2168;   next: m2169 (next offset: 1108)
001098  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001099  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
001100  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
001101  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001102  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001103  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001104  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001105  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
001106  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001107  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m2169 subroutine call;   next: m2172 (next offset: 1108)

// m2172;   next: m2173 (next offset: 1117)
001108  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001109  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001110  1 0  "01001000000001110111001010111110"   // (R[7]) = lhi_const_1_B1 (29374); 
001111  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
001112  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
001113  1 0  "01001000000001100011111001100110"   // (R[6]) = lhi_const_1_B1 (15974); 
001114  1 0  "01010100111001111010010011010000"   // (R[7]) = w32_const_bor_1_B1 (R[7],42192); 
001115  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001116  1 0  "01010100110001100011011101101001"   // (R[6]) = w32_const_bor_1_B1 (R[6],14185); 

// m2173 subroutine call;   next: m2182 (next offset: 1117)

// m2182;   next: m2183 (next offset: 1124)
001117  1 0  "01001000000001011100010111010010"   // (R[5]) = lhi_const_1_B1 (-14894); 
001118  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001119  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001120  1 0  "01001000000001001011111010111011"   // (R[4]) = lhi_const_1_B1 (-16709); 
001121  1 0  "01010100101001010110101111110001"   // (R[5]) = w32_const_bor_1_B1 (R[5],27633); 
001122  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001123  1 0  "01010100100001001011110101000001"   // (R[4]) = w32_const_bor_1_B1 (R[4],48449); 

// m2183 subroutine call;   next: m2187 (next offset: 1124)

// m2187;   next: m2188 (next offset: 1129)
001124  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001125  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001126  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001127  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001128  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m2188 subroutine call;   next: m2197 (next offset: 1129)

// m2197;   next: m2198 (next offset: 1136)
001129  1 0  "01001000000001011010111100100101"   // (R[5]) = lhi_const_1_B1 (-20699); 
001130  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001131  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001132  1 0  "01001000000001000011111100010001"   // (R[4]) = lhi_const_1_B1 (16145); 
001133  1 0  "01010100101001011101111000101100"   // (R[5]) = w32_const_bor_1_B1 (R[5],56876); 
001134  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001135  1 0  "01010100100001000101011001101010"   // (R[4]) = w32_const_bor_1_B1 (R[4],22122); 

// m2198 subroutine call;   next: m2202 (next offset: 1136)

// m2202;   next: m2203 (next offset: 1141)
001136  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001137  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001138  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001140  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m2203 subroutine call;   next: m2212 (next offset: 1141)

// m2212;   next: m2213 (next offset: 1148)
001141  1 0  "01001000000001010001011010111110"   // (R[5]) = lhi_const_1_B1 (5822); 
001142  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001143  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001144  1 0  "01001000000001001011111101100110"   // (R[4]) = lhi_const_1_B1 (-16538); 
001145  1 0  "01010100101001011011110110010011"   // (R[5]) = w32_const_bor_1_B1 (R[5],48531); 
001146  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001147  1 0  "01010100100001001100000101101100"   // (R[4]) = w32_const_bor_1_B1 (R[4],49516); 

// m2213 subroutine call;   next: m2217 (next offset: 1148)

// m2217;   next: m2218 (next offset: 1153)
001148  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001149  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001150  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001151  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001152  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m2218 subroutine call;   next: m2227 (next offset: 1153)

// m2227;   next: m2228 (next offset: 1160)
001153  1 0  "01001000000001010101010101010101"   // (R[5]) = lhi_const_1_B1 (21845); 
001154  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001155  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001156  1 0  "01001000000001000011111111000101"   // (R[4]) = lhi_const_1_B1 (16325); 
001157  1 0  "01010100101001010101010100111110"   // (R[5]) = w32_const_bor_1_B1 (R[5],21822); 
001158  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001159  1 0  "01010100100001000101010101010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],21845); 

// m2228 subroutine call;   next: m2232 (next offset: 1160)

// m2232;   next: m2233 (next offset: 1165)
001160  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001161  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001162  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001163  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001164  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m2233 subroutine call;   next: m2242 (next offset: 1165)

// m2242;   next: m2243 (next offset: 1170)
001165  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001166  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001167  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001168  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001169  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m2243 subroutine call;   next: m2247 (next offset: 1170)

// m2247;   next: m2248 (next offset: 1177)
001170  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001171  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001172  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001173  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
001174  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
001175  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001176  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m2248 subroutine call;   next: m2257 (next offset: 1177)

// m2257;   next: m2258 (next offset: 1186)
001177  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
001178  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001179  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001180  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
001181  1 0  "01001000000001110000000000000000"   // (R[7]) = const_25_B3 (); 
001182  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001183  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
001184  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001185  1 0  "01001000000001100100000000000000"   // (R[6]) = const_16_B1 (); 

// m2258 subroutine call;   next: m2261 (next offset: 1186)

// m2261;   next: m2262 (next offset: 1191)
001186  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
001187  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001188  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001189  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001190  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2262 subroutine call;   next: m2271 (next offset: 1191)

// m2271;   next: m2272 (next offset: 1200)
001191  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001192  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001193  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
001194  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001195  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001196  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
001197  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
001198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001199  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m2272 subroutine call;   next: m2275 (next offset: 1200)

// m2275;   next: m2276 (next offset: 1205)
001200  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
001201  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001202  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001203  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001204  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m2276 subroutine call;   next: m2285 (next offset: 1205)

// m2285;   next: m2286 (next offset: 1210)
001205  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
001206  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001207  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001208  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001209  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m2286 subroutine call;   next: m2290 (next offset: 1210)

// m2290;   next: m2291 (next offset: 1215)
001210  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001211  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001212  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001213  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001214  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m2291 subroutine call;   next: m2300 (next offset: 1215)

// m2300;   next: m2301 (next offset: 1220)
001215  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001216  1 0  "01001000000001000011111111110000"   // (R[4]) = const_26_B1 (); 
001217  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
001218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001219  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m2301 subroutine call;   next: m2090 (next offset: 1220)

// m2090;   next: m378, jump target: m2315 (next offset: 1228)
001220  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
001221  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001222  1 0  "00000000100001110011000000000001"   // (R[6],) = _pl_1_B1 (R[4],R[7]); 
001223  1 0  "10011000110001110000000000010100"   // (R[7]) = _rs_const_1_B1 (R[6]); 
001224  1 0  "00000000111000000001100000001110"   // (R[3]) = _gt_const_1_B2 (R[7]); 
001225  1 0  "00100000011000000000000000001000"   // () = nez_br_const_1_B1 (R[3],8); 
001226  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001227  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m378;   next: m379 (next offset: 1230)
001228  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001229  1 0  "01010100111001100000000000000000"   // R[6] = R[7]; 

// m379 subroutine call;   next: m2376 (next offset: 1230)

// m2376, jump target: m2329 (next offset: 1235)
001230  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001231  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001232  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 
001233  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001234  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m2315;   next: m2329 (next offset: 1238)
001235  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
001236  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
001237  1 0  "01001000000001010000000000000000"   // (R[5]) = const_25_B3 (); 

// m2329;   next: m2330 (next offset: 1240)
001238  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001239  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m2330 subroutine call;   next: m2377 (next offset: 1240)

// m2377, jump target: m2379 (next offset: 1242)
001240  1 0  "00100100000000000000000000001111"   // () = j_const_1_B1 (15); 
001241  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m1168;   next: m1169 (next offset: 1246)
001242  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001243  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
001244  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001245  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m1169 subroutine call;   next: m1178 (next offset: 1246)

// m1178;   next: m1179 (next offset: 1251)
001246  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
001247  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001248  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
001249  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001250  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m1179 subroutine call;   next: m2383 (next offset: 1251)

// m2383, jump target: m2379 (next offset: 1253)
001251  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001252  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m1100;   next: m1101 (next offset: 1255)
001253  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001254  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m1101 subroutine call;   next: m2380 (next offset: 1255)

// m2380;   next: m2379 (next offset: 1256)
001255  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m2379, jump target: m387 (next offset: 1258)
001256  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
001257  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m6;   next: m387 (next offset: 1260)
001258  1 0  "01001000000001000000000000000000"   // (R[4]) = const_25_B3 (); 
001259  1 0  "01001000000001100011111111110000"   // (R[6]) = const_26_B1 (); 

// m387 (next offset: /)
001260  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001261  1 0  "10101000001001101111111101111000"   // (__spill_DMw[-136]) = stack_store_bndl_B3 (R[6],SP,-136); 
001262  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
001263  1 0  "10101000001001001111111101111100"   // (__spill_DMw[-132]) = stack_store_bndl_B3 (R[4],SP,-132); 
001264  1 0  "00001000001000011111111110000000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-128,SP,SP); 

