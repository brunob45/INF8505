
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:32 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strxfrm_ tlx


// m3;   next: m4 (next offset: 7)
000000  1 0  "00001000001000010000000000010000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (16,SP,SP); 
000001  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000002  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000003  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000004  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000005  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000006  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m4 subroutine call;   next: m5 (next offset: 7)

// m5;   next: m35, jump target: m14 (next offset: 12)
000007  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000008  1 0  "00000000011001000010000000001101"   // (R[4]) = _ge_1_B1 (R[3],R[4]); 
000009  1 0  "00100000100000000000000000001110"   // () = nez_br_const_1_B1 (R[4],14); 
000010  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m35;   next: m12 (next offset: 22)
000012  1 0  "01001000000001000000000000011000"   // (R[4]) = lhi_const_1_B1 (24); 
000013  1 0  "01010100100001110000000000011000"   // (R[7]) = w32_const_bor_1_B1 (R[4],24); 
000014  1 0  "00001000011001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[3]); 
000015  1 0  "01001000000001100000000000010110"   // (R[6]) = lhi_const_1_B1 (22); 
000016  1 0  "10111100101000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[5]); 
000017  1 0  "01010100110001100000000000010110"   // (R[6]) = w32_const_bor_1_B1 (R[6],22); 
000018  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000019  1 0  "10111100110000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[6]); 
000020  1 0  "10111100111000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[7]); 
000021  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m12;   next: m37, loop target: m12 (next offset: 25)
000022  1 0  "00000000100001100000100000110000"   // (R[6],R[4]) = load__pl_const_1_B1 (R[4],DMb); 
000023  1 0  "00000000101001100000100000110101"   // (R[5],DMb) = store__pl_const_1_B1 (R[6],R[5],DMb); 
000024  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m37;   next: m17 (next offset: 25)

// m14;   next: m17 (next offset: 25)

// m17 (next offset: /)
000025  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000026  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000027  1 0  "00001000001000011111111111110000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-16,SP,SP); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

