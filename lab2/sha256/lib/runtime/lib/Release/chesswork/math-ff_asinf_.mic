
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:55 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_asinf_ tlx


// m3;   next: m8, jump target: m73 (next offset: 16)
000000  1 0  "00001000001000010000000000111100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (60,SP,SP); 
000001  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000002  1 0  "01010100011001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "01001000000001100011111111001001"   // (R[6]) = lhi_const_1_B1 (16329); 
000004  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000005  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000006  1 0  "01010100110001100000111111011010"   // (R[6]) = w32_const_bor_1_B1 (R[6],4058); 
000007  1 0  "10101000001001101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[6],SP,-8); 
000008  1 0  "01001000000001000011111110000000"   // (R[4]) = const_6_B1 (); 
000009  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000010  1 0  "00000000100001010011000000001011"   // (R[6]) = _eq_1_B1 (R[5],R[4]); 
000011  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000012  1 0  "01001000000000110011001110100010"   // (R[3]) = lhi_const_1_B1 (13218); 
000013  1 0  "00100000110000000000000100100110"   // () = nez_br_const_1_B1 (R[6],294); 
000014  1 0  "01010100011000110010000101101000"   // (R[3]) = w32_const_bor_1_B1 (R[3],8552); 
000015  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 

// m8;   next: m16, jump target: m87 (next offset: 49)
000016  1 0  "01001000000000110011111000101010"   // (R[3]) = lhi_const_1_B1 (15914); 
000017  1 0  "01001000000001101011111010100110"   // (R[6]) = lhi_const_1_B1 (-16730); 
000018  1 0  "01001000000001110011111001001110"   // (R[7]) = lhi_const_1_B1 (15950); 
000019  1 0  "01001000000010001011110100100100"   // (R[8]) = lhi_const_1_B1 (-17116); 
000020  1 0  "01001000000010010011101001001111"   // (R[9]) = lhi_const_1_B1 (14927); 
000021  1 0  "01001000000010100011100000010001"   // (R[10]) = lhi_const_1_B1 (14353); 
000022  1 0  "01001000000010111100000000011001"   // (R[11]) = lhi_const_1_B1 (-16359); 
000023  1 0  "01001000000011000100000000000001"   // (R[12]) = lhi_const_1_B1 (16385); 
000024  1 0  "01001000000011010011110110011101"   // (R[13]) = lhi_const_1_B1 (15773); 
000025  1 0  "01010100011000111010101010101011"   // (R[3]) = w32_const_bor_1_B1 (R[3],43691); 
000026  1 0  "01010100110001101011000010010000"   // (R[6]) = w32_const_bor_1_B1 (R[6],45200); 
000027  1 0  "01010100111001110000101010101000"   // (R[7]) = w32_const_bor_1_B1 (R[7],2728); 
000028  1 0  "01010101000010000001000101000110"   // (R[8]) = w32_const_bor_1_B1 (R[8],4422); 
000029  1 0  "01010101001010010111111100000100"   // (R[9]) = w32_const_bor_1_B1 (R[9],32516); 
000030  1 0  "01010101010010101110111100001000"   // (R[10]) = w32_const_bor_1_B1 (R[10],61192); 
000031  1 0  "01010101011010111101000100111001"   // (R[11]) = w32_const_bor_1_B1 (R[11],53561); 
000032  1 0  "01010101100011000101011100101101"   // (R[12]) = w32_const_bor_1_B1 (R[12],22317); 
000033  1 0  "01001000000011101011111100110000"   // (R[14]) = lhi_const_1_B1 (-16592); 
000034  1 0  "01010101101000101100011000101110"   // (R[2]) = w32_const_bor_1_B1 (R[13],50734); 
000035  1 0  "00000000101001000110100000001110"   // (R[13]) = _gt_1_B1 (R[5],R[4]); 
000036  1 0  "01001000000011110011111100000000"   // (R[15]) = const_5_B1 (); 
000037  1 0  "01010101110011100011001101100001"   // (R[14]) = w32_const_bor_1_B1 (R[14],13153); 
000038  1 0  "10101000001011001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[12],SP,-32); 
000039  1 0  "10101000001010111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[11],SP,-36); 
000040  1 0  "10101000001010101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[10],SP,-40); 
000041  1 0  "10101000001010011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[9],SP,-44); 
000042  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
000043  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000044  1 0  "10101000001001101111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[6],SP,-56); 
000045  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000046  1 0  "00100001101000000000000001100100"   // () = nez_br_const_1_B1 (R[13],100); 
000047  1 0  "10101000001011101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[14],SP,-28); 
000048  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 

// m16;   next: m20, jump target: m237 (next offset: 53)
000049  1 0  "00000000101011110001100000001100"   // (R[3]) = _ge_2_B1 (R[5],R[15]); 
000050  1 0  "00100000011000000000000001101011"   // () = nez_br_const_1_B1 (R[3],107); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m20;   next: m101, jump target: m97 (next offset: 58)
000053  1 0  "01001000000001000011001000000000"   // (R[4]) = const_4_B1 (); 
000054  1 0  "00000000101001000010000000010011"   // (R[4]) = _lt_1_B1 (R[5],R[4]); 
000055  1 0  "00100000100000000000000000000111"   // () = nez_br_const_1_B1 (R[4],7); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m101;   next: m102 (next offset: 61)
000058  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000059  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000060  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m102 subroutine call;   next: m423 (next offset: 61)

// m423, jump target: m127 (next offset: 64)
000061  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000062  1 0  "00100100000000000000000000001111"   // () = j_const_1_B1 (15); 
000063  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 

// m97;   next: m98 (next offset: 68)
000064  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000065  1 0  "01001000000001000111000101001001"   // (R[4]) = lhi_const_1_B1 (29001); 
000066  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000067  1 0  "01010100100001001111001011001010"   // (R[4]) = w32_const_bor_1_B1 (R[4],62154); 

// m98 subroutine call;   next: m95 (next offset: 68)

// m95;   next: m64 (next offset: 71)
000068  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000069  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000070  1 0  "01001000000001000011111110000000"   // (R[4]) = const_6_B1 (); 

// m64 subroutine call;   next: m68 (next offset: 71)

// m68;   next: m29, jump target: m30 (next offset: 74)
000071  1 0  "00010100011000000000000000000101"   // () = eqz_br_const_1_B1 (R[3],5); 
000072  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000073  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m29 (next offset: 78)
000074  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000075  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000076  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000077  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 

// m30;   next: m430 (next offset: 78)

// m430;   next: m127 (next offset: 78)

// m127;   next: m128 (next offset: 80)
000078  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000079  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m128 subroutine call;   next: m131 (next offset: 80)

// m131;   next: m132 (next offset: 83)
000080  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000081  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000082  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m132 subroutine call;   next: m135 (next offset: 83)

// m135;   next: m136 (next offset: 86)
000083  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000084  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000085  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m136 subroutine call;   next: m139 (next offset: 86)

// m139;   next: m140 (next offset: 89)
000086  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000087  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000088  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m140 subroutine call;   next: m143 (next offset: 89)

// m143;   next: m144 (next offset: 92)
000089  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000090  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000091  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m144 subroutine call;   next: m147 (next offset: 92)

// m147;   next: m148 (next offset: 95)
000092  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000093  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000094  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m148 subroutine call;   next: m151 (next offset: 95)

// m151;   next: m152 (next offset: 98)
000095  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000096  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000097  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m152 subroutine call;   next: m155 (next offset: 98)

// m155;   next: m156 (next offset: 101)
000098  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m156 subroutine call;   next: m159 (next offset: 101)

// m159;   next: m160 (next offset: 104)
000101  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m160 subroutine call;   next: m163 (next offset: 104)

// m163;   next: m164 (next offset: 107)
000104  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000105  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000106  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m164 subroutine call;   next: m167 (next offset: 107)

// m167;   next: m168 (next offset: 110)
000107  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000108  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000109  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m168 subroutine call;   next: m171 (next offset: 110)

// m171;   next: m172 (next offset: 114)
000110  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000111  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000112  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000113  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m172 subroutine call;   next: m175 (next offset: 114)

// m175;   next: m176 (next offset: 117)
000114  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000115  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000116  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m176 subroutine call;   next: m179 (next offset: 117)

// m179;   next: m180 (next offset: 120)
000117  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000118  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000119  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m180 subroutine call;   next: m183 (next offset: 120)

// m183;   next: m184 (next offset: 123)
000120  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000121  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000122  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m184 subroutine call;   next: m187 (next offset: 123)

// m187;   next: m188 (next offset: 126)
000123  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000124  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000125  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m188 subroutine call;   next: m191 (next offset: 126)

// m191;   next: m192 (next offset: 129)
000126  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000127  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000128  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m192 subroutine call;   next: m195 (next offset: 129)

// m195;   next: m196 (next offset: 132)
000129  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000130  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000131  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m196 subroutine call;   next: m199 (next offset: 132)

// m199;   next: m200 (next offset: 135)
000132  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000133  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000134  1 0  "01001000000001000011111110000000"   // (R[4]) = const_6_B1 (); 

// m200 subroutine call;   next: m203 (next offset: 135)

// m203;   next: m204 (next offset: 138)
000135  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000136  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000137  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m204 subroutine call;   next: m207 (next offset: 138)

// m207;   next: m208 (next offset: 141)
000138  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000140  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m208 subroutine call;   next: m211 (next offset: 141)

// m211;   next: m212 (next offset: 144)
000141  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000142  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000143  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m212 subroutine call;   next: m36 (next offset: 144)

// m36 (next offset: 148)
000144  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000145  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000146  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000147  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m87;   next: m88 (next offset: 152)
000148  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000149  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000150  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000151  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m88 subroutine call;   next: m91 (next offset: 152)

// m91;   next: m92 (next offset: 155)
000152  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000153  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000154  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m92 subroutine call;   next: m14 (next offset: 155)

// m14 (next offset: 159)
000155  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000156  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000157  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000158  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m237;   next: m238 (next offset: 161)
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m238 subroutine call;   next: m241 (next offset: 161)

// m241;   next: m242 (next offset: 164)
000161  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000162  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000163  1 0  "01001000000001010011111100000000"   // (R[5]) = const_5_B1 (); 

// m242 subroutine call;   next: m245 (next offset: 164)

// m245;   next: m246 (next offset: 168)
000164  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000165  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000166  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000167  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m246 subroutine call;   next: m249 (next offset: 168)

// m249;   next: m250 (next offset: 171)
000168  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000169  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000170  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m250 subroutine call;   next: m253 (next offset: 171)

// m253;   next: m254 (next offset: 174)
000171  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000172  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000173  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m254 subroutine call;   next: m257 (next offset: 174)

// m257;   next: m258 (next offset: 177)
000174  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000175  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000176  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m258 subroutine call;   next: m261 (next offset: 177)

// m261;   next: m262 (next offset: 180)
000177  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000178  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000179  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m262 subroutine call;   next: m265 (next offset: 180)

// m265;   next: m266 (next offset: 183)
000180  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000181  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000182  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m266 subroutine call;   next: m269 (next offset: 183)

// m269;   next: m270 (next offset: 186)
000183  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000184  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000185  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m270 subroutine call;   next: m273 (next offset: 186)

// m273;   next: m274 (next offset: 189)
000186  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000187  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000188  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m274 subroutine call;   next: m277 (next offset: 189)

// m277;   next: m278 (next offset: 192)
000189  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000190  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000191  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m278 subroutine call;   next: m281 (next offset: 192)

// m281;   next: m282 (next offset: 195)
000192  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000193  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000194  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m282 subroutine call;   next: m285 (next offset: 195)

// m285;   next: m286 (next offset: 198)
000195  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000196  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000197  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m286 subroutine call;   next: m289 (next offset: 198)

// m289;   next: m290 (next offset: 202)
000198  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000199  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000200  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000201  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m290 subroutine call;   next: m293 (next offset: 202)

// m293;   next: m294 (next offset: 205)
000202  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000203  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000204  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m294 subroutine call;   next: m297 (next offset: 205)

// m297;   next: m298 (next offset: 208)
000205  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m298 subroutine call;   next: m301 (next offset: 208)

// m301;   next: m302 (next offset: 211)
000208  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000209  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000210  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m302 subroutine call;   next: m305 (next offset: 211)

// m305;   next: m306 (next offset: 214)
000211  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000212  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000213  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m306 subroutine call;   next: m309 (next offset: 214)

// m309;   next: m310 (next offset: 217)
000214  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000215  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000216  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m310 subroutine call;   next: m313 (next offset: 217)

// m313;   next: m314 (next offset: 220)
000217  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m314 subroutine call;   next: m317 (next offset: 220)

// m317;   next: m318 (next offset: 223)
000220  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000221  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000222  1 0  "01001000000001000011111110000000"   // (R[4]) = const_6_B1 (); 

// m318 subroutine call;   next: m235 (next offset: 223)

// m235;   next: m41 (next offset: 226)
000223  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000224  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000225  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m41 subroutine call;   next: m324 (next offset: 226)

// m324;   next: m325 (next offset: 230)
000226  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000227  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000228  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000229  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m325 subroutine call;   next: m322 (next offset: 230)

// m322;   next: m368, jump target: m333 (next offset: 237)
000230  1 0  "01001000000001010011111101111001"   // (R[5]) = lhi_const_1_B1 (16249); 
000231  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000232  1 0  "01010100101001011001100110011010"   // (R[5]) = w32_const_bor_1_B1 (R[5],39322); 
000233  1 0  "00000000100001010010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[5]); 
000234  1 0  "00100000101000000000000000110010"   // () = nez_br_const_1_B1 (R[5],50); 
000235  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000236  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 

// m368;   next: m369 (next offset: 242)
000237  1 0  "00001000000000111111000000000000"   // (R[3]) = const_2_B1 (); 
000238  1 0  "00000000011001000010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[3]); 
000239  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000240  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000241  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m369 subroutine call;   next: m372 (next offset: 242)

// m372;   next: m373 (next offset: 245)
000242  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000243  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000244  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m373 subroutine call;   next: m376 (next offset: 245)

// m376;   next: m377 (next offset: 249)
000245  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000246  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000247  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000248  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m377 subroutine call;   next: m380 (next offset: 249)

// m380;   next: m381 (next offset: 252)
000249  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000250  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000251  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m381 subroutine call;   next: m384 (next offset: 252)

// m384;   next: m385 (next offset: 256)
000252  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000253  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000254  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000255  1 0  "01001000000001000100000000000000"   // (R[4]) = const_3_B1 (); 

// m385 subroutine call;   next: m388 (next offset: 256)

// m388;   next: m389 (next offset: 259)
000256  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000257  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000258  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m389 subroutine call;   next: m392 (next offset: 259)

// m392;   next: m393 (next offset: 263)
000259  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000260  1 0  "01001000000001000100000000000000"   // (R[4]) = const_3_B1 (); 
000261  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000262  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m393 subroutine call;   next: m396 (next offset: 263)

// m396;   next: m397 (next offset: 266)
000263  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000264  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000265  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m397 subroutine call;   next: m400 (next offset: 266)

// m400;   next: m401 (next offset: 269)
000266  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000267  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000268  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m401 subroutine call;   next: m404 (next offset: 269)

// m404;   next: m405 (next offset: 273)
000269  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000270  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000271  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000272  1 0  "01001000000001000100000000000000"   // (R[4]) = const_3_B1 (); 

// m405 subroutine call;   next: m408 (next offset: 273)

// m408;   next: m409 (next offset: 278)
000273  1 0  "01001000000001000011111101001001"   // (R[4]) = lhi_const_1_B1 (16201); 
000274  1 0  "01010100100001000000111111011011"   // (R[4]) = w32_const_bor_1_B1 (R[4],4059); 
000275  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000276  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000277  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m409 subroutine call;   next: m412 (next offset: 278)

// m412;   next: m413 (next offset: 281)
000278  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000279  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000280  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m413 subroutine call;   next: m416 (next offset: 281)

// m416;   next: m417 (next offset: 284)
000281  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000282  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000283  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m417 subroutine call;   next: m425 (next offset: 284)

// m425, jump target: m48 (next offset: 286)
000284  1 0  "00100100000000000000000000001111"   // () = j_const_1_B1 (15); 
000285  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m333;   next: m334 (next offset: 288)
000286  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000287  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m334 subroutine call;   next: m337 (next offset: 288)

// m337;   next: m338 (next offset: 291)
000288  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000289  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000290  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m338 subroutine call;   next: m341 (next offset: 291)

// m341;   next: m342 (next offset: 294)
000291  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000292  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000293  1 0  "01001000000001000100000000000000"   // (R[4]) = const_3_B1 (); 

// m342 subroutine call;   next: m345 (next offset: 294)

// m345;   next: m346 (next offset: 297)
000294  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000295  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000296  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m346 subroutine call;   next: m349 (next offset: 297)

// m349;   next: m350 (next offset: 300)
000297  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000298  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000299  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m350 subroutine call;   next: m432 (next offset: 300)

// m432;   next: m48 (next offset: 300)

// m48;   next: m420, jump target: m56 (next offset: 305)
000300  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000301  1 0  "00000000100000000010100000001110"   // (R[5]) = _gt_const_1_B2 (R[4]); 
000302  1 0  "00100000101000000000000000010000"   // () = nez_br_const_1_B1 (R[5],16); 
000303  1 0  "01001000000001000000000000000000"   // (R[4]) = const_1_B3 (); 
000304  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m420;   next: m421 (next offset: 307)
000305  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000306  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m421 subroutine call;   next: m426 (next offset: 307)

// m426;   next: m427 (next offset: 307)

// m427, jump target: m56 (next offset: 309)
000307  1 0  "00100100000000000000000000001100"   // () = j_const_1_B1 (12); 
000308  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m73;   next: m74 (next offset: 313)
000309  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000310  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000311  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000312  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m74 subroutine call;   next: m77 (next offset: 313)

// m77;   next: m78 (next offset: 317)
000313  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000314  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000315  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000316  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m78 subroutine call;   next: m81 (next offset: 317)

// m81;   next: m82 (next offset: 320)
000317  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000318  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000319  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m82 subroutine call;   next: m431 (next offset: 320)

// m431;   next: m56 (next offset: 320)

// m56 (next offset: /)
000320  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000321  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000322  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000323  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

