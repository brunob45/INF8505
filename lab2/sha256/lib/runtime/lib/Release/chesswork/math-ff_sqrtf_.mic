
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:46 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_sqrtf_ tlx


// m5;   next: m10, jump target: m151 (next offset: 6)
000000  1 0  "01001000000000110111111110000000"   // (R[3]) = const_6_B1 (); 
000001  1 0  "00000000011001000010100000000011"   // (R[5]) = _ad_2_B1 (R[4],R[3]); 
000002  1 0  "00000000011001010001100000001011"   // (R[3]) = _eq_1_B1 (R[5],R[3]); 
000003  1 0  "00100000011000000000000001101011"   // () = nez_br_const_2_B1 (R[3],107); 
000004  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (12,SP,SP); 
000005  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m10;   next: m103, jump target: m31 (next offset: 10)
000006  1 0  "00000000100000000001100000001110"   // (R[3]) = _gt_const_1_B2 (R[4]); 
000007  1 0  "00100000011000000000000000011000"   // () = nez_br_const_2_B1 (R[3],24); 
000008  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000009  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m103;   next: m21, jump target: m19 (next offset: 16)
000010  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000011  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000012  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000013  1 0  "00010100011000000000000000001111"   // () = eqz_br_const_1_B1 (R[3],15); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m21;   next: m161, jump target: m191 (next offset: 20)
000016  1 0  "00000000100000000001100000001100"   // (R[3]) = _ge_const_1_B2 (R[4]); 
000017  1 0  "00100000011000000000000000001110"   // () = nez_br_const_2_B1 (R[3],14); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m161;   next: m162 (next offset: 23)
000020  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000021  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000022  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m162 subroutine call;   next: m165 (next offset: 23)

// m165;   next: m166 (next offset: 26)
000023  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000024  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000025  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m166 subroutine call;   next: m27 (next offset: 26)

// m27 (next offset: 30)
000026  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000027  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000028  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m19 (next offset: 33)
000030  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000031  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000032  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m191;   next: m107 (next offset: 33)

// m31;   next: m107 (next offset: 33)

// m107;   next: m48, jump target: m51 (next offset: 37)
000033  1 0  "10011000100000110000000000010111"   // (R[3]) = _rs_const_3_B1 (R[4]); 
000034  1 0  "00100000011000000000000000001100"   // () = nez_br_const_1_B1 (R[3],12); 
000035  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000036  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m48, jump target: m1 (next offset: 40)
000037  1 0  "01001000000001100000000010000000"   // (R[6]) = const_4_B1 (); 
000038  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000039  1 0  "01001000000001010000000000000000"   // (R[5]) = const_5_B3 (); 

// m44;   next: m1 (next offset: 42)
000040  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_2_B1 (R[4]); 
000041  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_4_B1 (R[5]); 

// m1;   next: m116 (next offset: 42)

// m116;   next: m50, jump target: m44 (next offset: 46)
000042  1 0  "00000000100001100011100000000011"   // (R[7]) = _ad_2_B1 (R[4],R[6]); 
000043  1 0  "00010100111000001111111111111011"   // () = eqz_br_const_1_B1 (R[7],-5); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50;   next: m123 (next offset: 48)
000046  1 0  "00001000101001011111111111111111"   // (R[5],MC) = _pl_const_3_B1 (R[5]); 
000047  1 0  "00000000011001010001100000011000"   // (R[3],MC) = _mi_1_B1 (R[3],R[5]); 

// m51;   next: m123 (next offset: 48)

// m123;   next: m56, jump target: m57 (next offset: 58)
000048  1 0  "01001000000001010000000001111111"   // (R[5]) = lhi_const_1_B1 (127); 
000049  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000050  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000051  1 0  "00001000011001001111111110000001"   // (R[4],MC) = _pl_const_2_B1 (R[3]); 
000052  1 0  "01001000000000110000000010000000"   // (R[3]) = const_4_B1 (); 
000053  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_1_B1 (R[5],R[3]); 
000054  1 0  "00010000100001010000000000000001"   // (R[5]) = _ad_const_1_B1 (R[4]); 
000055  1 0  "00010100101000000000000000000010"   // () = eqz_br_const_1_B1 (R[5],2); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m56;   next: m59 (next offset: 59)
000058  1 0  "10001000011000110000000000000001"   // (R[3]) = _ls_const_2_B1 (R[3]); 

// m57;   next: m59 (next offset: 59)

// m59;   next: m66 (next offset: 64)
000059  1 0  "10001000011000110000000000000001"   // (R[3]) = _ls_const_2_B1 (R[3]); 
000060  1 0  "10011000100001000000000000000001"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000061  1 0  "01001000000001110000000000000000"   // (R[7]) = const_5_B3 (); 
000062  1 0  "01001000000001100000000100000000"   // (R[6]) = const_3_B1 (); 
000063  1 0  "01001000000001010000000000000000"   // (R[5]) = const_5_B3 (); 

// m66;   next: m69, jump target: m70 (next offset: 69)
000064  1 0  "00000000110001110100000000000001"   // (R[8],) = _pl_2_B1 (R[7],R[6]); 
000065  1 0  "00000001000000110100100000001110"   // (R[9]) = _gt_1_B1 (R[8],R[3]); 
000066  1 0  "00100001001000000000000000000100"   // () = nez_br_const_2_B1 (R[9],4); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000068  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m69;   next: m128 (next offset: 72)
000069  1 0  "00000000101001100010100000000001"   // (R[5],) = _pl_2_B1 (R[5],R[6]); 
000070  1 0  "00000000110010000011100000000001"   // (R[7],) = _pl_2_B1 (R[8],R[6]); 
000071  1 0  "00000000011010000001100000011000"   // (R[3],MC) = _mi_1_B1 (R[3],R[8]); 

// m70;   next: m128 (next offset: 72)

// m128;   next: m131, jump target: m66 (next offset: 76)
000072  1 0  "10011100110001100000000000000001"   // (R[6]) = _rs_const_2_B1 (R[6]); 
000073  1 0  "00100000110000001111111111110101"   // () = nez_br_const_1_B1 (R[6],-11); 
000074  1 0  "10001000011000110000000000000001"   // (R[3]) = _ls_const_2_B1 (R[3]); 
000075  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m131;   next: m135, jump target: m94 (next offset: 79)
000076  1 0  "00010100011000000000000000011100"   // () = eqz_br_const_1_B1 (R[3],28); 
000077  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m135;   next: m136 (next offset: 85)
000079  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 
000080  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000081  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000082  1 0  "01001000000001000011111110000000"   // (R[4]) = const_2_B1 (); 
000083  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000084  1 0  "01001000000001010011111110000000"   // (R[5]) = const_2_B1 (); 

// m136 subroutine call;   next: m144 (next offset: 85)

// m144;   next: m139, jump target: m92 (next offset: 88)
000085  1 0  "00010100011000000000000000010000"   // () = eqz_br_const_1_B1 (R[3],16); 
000086  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m139;   next: m140 (next offset: 91)
000088  1 0  "01001000000001000011111110000000"   // (R[4]) = const_2_B1 (); 
000089  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000090  1 0  "01001000000001010011111110000000"   // (R[5]) = const_2_B1 (); 

// m140 subroutine call;   next: m147 (next offset: 91)

// m147;   next: m90, jump target: m89 (next offset: 94)
000091  1 0  "00100000011000000000000000000110"   // () = nez_br_const_1_B1 (R[3],6); 
000092  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000093  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90, jump target: m193 (next offset: 99)
000094  1 0  "00010000100000110000000000000001"   // (R[3]) = _ad_const_1_B1 (R[4]); 
000095  1 0  "00000000011001000010100000000001"   // (R[5],) = _pl_2_B1 (R[4],R[3]); 
000096  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000097  1 0  "00100100000000000000000000001000"   // () = j_const_1_B1 (8); 
000098  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m89, jump target: m193 (next offset: 103)
000099  1 0  "00001000100001010000000000000010"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
000100  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000101  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000102  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m92;   next: m193 (next offset: 106)
000103  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000104  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000105  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m193;   next: m96 (next offset: 106)

// m94;   next: m96 (next offset: 106)

// m96, jump target: m99 (next offset: 112)
000106  1 0  "10011000101000110000000000000001"   // (R[3]) = _rs_const_1_B1 (R[5]); 
000107  1 0  "01001000000001010011111100000000"   // (R[5]) = const_1_B1 (); 
000108  1 0  "10001000100001000000000000010111"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000109  1 0  "00000000011001010001100000000001"   // (R[3],) = _pl_1_B1 (R[3],R[5]); 
000110  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000111  1 0  "00000000011001000001100000000001"   // (R[3],) = _pl_2_B1 (R[3],R[4]); 

// m151;   next: m152 (next offset: 116)
000112  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000113  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 
000114  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000115  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m152 subroutine call;   next: m155 (next offset: 116)

// m155;   next: m156 (next offset: 119)
000116  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000117  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000118  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m156 subroutine call;   next: m194 (next offset: 119)

// m194;   next: m99 (next offset: 120)
000119  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m99 (next offset: /)
000120  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000121  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 
000122  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

