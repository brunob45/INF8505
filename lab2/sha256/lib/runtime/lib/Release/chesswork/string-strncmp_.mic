
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:32 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strncmp_ tlx


// m29, jump target: m1 (next offset: 2)
000000  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000001  1 0  "00000000100001100001100000000001"   // (R[3],) = _pl_1_B1 (R[4],R[6]); 

// m46;   next: m23, jump target: m24 (next offset: 10)
000002  1 0  "00000000100001100000100000110000"   // (R[6],R[4]) = load__pl_const_1_B1 (R[4],DMb); 
000003  1 0  "00000000101001110000100000110000"   // (R[7],R[5]) = load__pl_const_1_B1 (R[5],DMb); 
000004  1 0  "00000000110001110100000000010101"   // (R[8]) = _ne_2_B1 (R[6],R[7]); 
000005  1 0  "00000000110000000100100000001011"   // (R[9]) = eqz_1_B1 (R[6]); 
000006  1 0  "00000001000010010100000000001010"   // (R[8]) = lor_1_B1 (R[8],R[9]); 
000007  1 0  "00010101000000000000000000000101"   // () = eqz_br_const_1_B1 (R[8],5); 
000008  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000009  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23 (next offset: 14)
000010  1 0  "00010000111001010000000011111111"   // (R[5]) = __uchar_1_B1 (R[7]); 
000011  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000012  1 0  "00010000110001000000000011111111"   // (R[4]) = __uchar_1_B1 (R[6]); 
000013  1 0  "00000000100001010001100000011000"   // (R[3],MC) = _mi_1_B1 (R[4],R[5]); 

// m24;   next: m47 (next offset: 14)

// m47;   next: m1 (next offset: 14)

// m1;   next: m26 (next offset: 14)

// m26;   next: m33, jump target: m46 (next offset: 18)
000014  1 0  "00000000011001000011000000010101"   // (R[6]) = _ne_1_B1 (R[4],R[3]); 
000015  1 0  "00100000110000001111111111110001"   // () = nez_br_const_1_B1 (R[6],-15); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m33 (next offset: /)
000018  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000019  1 0  "01001000000000110000000000000000"   // (R[3]) = const_1_B3 (); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

