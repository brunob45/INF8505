
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:47 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_acosf_ tlx


// m3;   next: m17, jump target: m7 (next offset: 9)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000002  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000003  1 0  "01001000000001010011111110000000"   // (R[5]) = const_5_B1 (); 
000004  1 0  "00001000001000010000000000111100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (60,SP,SP); 
000005  1 0  "00000000011001010011000000001011"   // (R[6]) = _eq_1_B1 (R[3],R[5]); 
000006  1 0  "00100000110000000000000101010000"   // () = nez_br_const_1_B1 (R[6],336); 
000007  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000008  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 

// m17;   next: m62, jump target: m24 (next offset: 13)
000009  1 0  "00000000011001010010100000010000"   // (R[5]) = _le_1_B1 (R[3],R[5]); 
000010  1 0  "00100000101000000000000000001010"   // () = nez_br_const_1_B1 (R[5],10); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m62;   next: m63 (next offset: 15)
000013  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000014  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m63 subroutine call;   next: m66 (next offset: 15)

// m66;   next: m67 (next offset: 18)
000015  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000016  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000017  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m67 subroutine call;   next: m23 (next offset: 18)

// m23 (next offset: 22)
000018  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000019  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000020  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m24;   next: m26 (next offset: 22)

// m26;   next: m41, jump target: m30 (next offset: 59)
000022  1 0  "01001000000001000011100000010001"   // (R[4]) = lhi_const_1_B1 (14353); 
000023  1 0  "01010100100011111110111100001000"   // (R[15]) = w32_const_bor_1_B1 (R[4],61192); 
000024  1 0  "10101000001011111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[15],SP,-12); 
000025  1 0  "01001000000011100011111000101010"   // (R[14]) = lhi_const_1_B1 (15914); 
000026  1 0  "01001000000011011011111010100110"   // (R[13]) = lhi_const_1_B1 (-16730); 
000027  1 0  "01001000000011000011111001001110"   // (R[12]) = lhi_const_1_B1 (15950); 
000028  1 0  "01001000000010111011110100100100"   // (R[11]) = lhi_const_1_B1 (-17116); 
000029  1 0  "01001000000010100011101001001111"   // (R[10]) = lhi_const_1_B1 (14927); 
000030  1 0  "01001000000010011100000000011001"   // (R[9]) = lhi_const_1_B1 (-16359); 
000031  1 0  "01001000000010000100000000000001"   // (R[8]) = lhi_const_1_B1 (16385); 
000032  1 0  "01001000000001111011111100110000"   // (R[7]) = lhi_const_1_B1 (-16592); 
000033  1 0  "01001000000001100011110110011101"   // (R[6]) = lhi_const_1_B1 (15773); 
000034  1 0  "01001000000011110011111100000000"   // (R[15]) = const_4_B1 (); 
000035  1 0  "01010101110011101010101010101011"   // (R[14]) = w32_const_bor_1_B1 (R[14],43691); 
000036  1 0  "01010101101011011011000010010000"   // (R[13]) = w32_const_bor_1_B1 (R[13],45200); 
000037  1 0  "01010101100011000000101010101000"   // (R[12]) = w32_const_bor_1_B1 (R[12],2728); 
000038  1 0  "01010101011010110001000101000110"   // (R[11]) = w32_const_bor_1_B1 (R[11],4422); 
000039  1 0  "01010101010010100111111100000100"   // (R[10]) = w32_const_bor_1_B1 (R[10],32516); 
000040  1 0  "01010101001010011101000100111001"   // (R[9]) = w32_const_bor_1_B1 (R[9],53561); 
000041  1 0  "01010101000010000101011100101101"   // (R[8]) = w32_const_bor_1_B1 (R[8],22317); 
000042  1 0  "01010100111001110011001101100001"   // (R[7]) = w32_const_bor_1_B1 (R[7],13153); 
000043  1 0  "01010100110001101100011000101110"   // (R[6]) = w32_const_bor_1_B1 (R[6],50734); 
000044  1 0  "00000000011011110111100000010011"   // (R[15]) = _lt_1_B1 (R[3],R[15]); 
000045  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000046  1 0  "10101000001001111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[7],SP,-24); 
000047  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000048  1 0  "10101000001010011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[9],SP,-32); 
000049  1 0  "10101000001010101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[10],SP,-36); 
000050  1 0  "10101000001010111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[11],SP,-40); 
000051  1 0  "10101000001011001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[12],SP,-44); 
000052  1 0  "10101000001011011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[13],SP,-48); 
000053  1 0  "10101000001011101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[14],SP,-52); 
000054  1 0  "01001000000001000011001110100010"   // (R[4]) = lhi_const_1_B1 (13218); 
000055  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000056  1 0  "00100001111000000000000011000101"   // () = nez_br_const_1_B1 (R[15],197); 
000057  1 0  "01010100100001000010000101101000"   // (R[4]) = w32_const_bor_1_B1 (R[4],8552); 
000058  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 

// m41;   next: m334, jump target: m217 (next offset: 63)
000059  1 0  "00000000101000000001100000010011"   // (R[3]) = _lt_const_1_B2 (R[5]); 
000060  1 0  "00100000011000000000000001100101"   // () = nez_br_const_1_B1 (R[3],101); 
000061  1 0  "01001000000001000011111110000000"   // (R[4]) = const_5_B1 (); 
000062  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m334;   next: m335 (next offset: 65)
000063  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m335 subroutine call;   next: m338 (next offset: 65)

// m338;   next: m339 (next offset: 68)
000065  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000066  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000067  1 0  "01001000000001010011111100000000"   // (R[5]) = const_4_B1 (); 

// m339 subroutine call;   next: m332 (next offset: 68)

// m332;   next: m52 (next offset: 71)
000068  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000069  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000070  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m52 subroutine call;   next: m373 (next offset: 71)

// m373;   next: m374 (next offset: 77)
000071  1 0  "00001000000001001111000000000000"   // (R[4]) = const_1_B1 (); 
000072  1 0  "00000000011001000010100000000011"   // (R[5]) = _ad_1_B1 (R[3],R[4]); 
000073  1 0  "10101000001001011111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[5],SP,-56); 
000074  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000075  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000076  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m374 subroutine call;   next: m377 (next offset: 77)

// m377;   next: m378 (next offset: 80)
000077  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000078  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000079  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m378 subroutine call;   next: m381 (next offset: 80)

// m381;   next: m382 (next offset: 84)
000080  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000081  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000082  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000083  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m382 subroutine call;   next: m385 (next offset: 84)

// m385;   next: m386 (next offset: 87)
000084  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000085  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000086  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m386 subroutine call;   next: m389 (next offset: 87)

// m389;   next: m390 (next offset: 91)
000087  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000088  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000089  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000090  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m390 subroutine call;   next: m393 (next offset: 91)

// m393;   next: m394 (next offset: 94)
000091  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000092  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000093  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m394 subroutine call;   next: m397 (next offset: 94)

// m397;   next: m398 (next offset: 97)
000094  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000095  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000096  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m398 subroutine call;   next: m401 (next offset: 97)

// m401;   next: m402 (next offset: 100)
000097  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000098  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000099  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m402 subroutine call;   next: m405 (next offset: 100)

// m405;   next: m406 (next offset: 103)
000100  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000101  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000102  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m406 subroutine call;   next: m409 (next offset: 103)

// m409;   next: m410 (next offset: 106)
000103  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000104  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000105  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m410 subroutine call;   next: m413 (next offset: 106)

// m413;   next: m414 (next offset: 109)
000106  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000107  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000108  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m414 subroutine call;   next: m417 (next offset: 109)

// m417;   next: m418 (next offset: 112)
000109  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000110  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000111  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m418 subroutine call;   next: m421 (next offset: 112)

// m421;   next: m422 (next offset: 115)
000112  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000113  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000114  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m422 subroutine call;   next: m425 (next offset: 115)

// m425;   next: m426 (next offset: 118)
000115  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m426 subroutine call;   next: m429 (next offset: 118)

// m429;   next: m430 (next offset: 121)
000118  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000119  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000120  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m430 subroutine call;   next: m433 (next offset: 121)

// m433;   next: m434 (next offset: 125)
000121  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000122  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000123  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000124  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m434 subroutine call;   next: m437 (next offset: 125)

// m437;   next: m438 (next offset: 128)
000125  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000126  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000127  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m438 subroutine call;   next: m441 (next offset: 128)

// m441;   next: m442 (next offset: 131)
000128  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000129  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000130  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m442 subroutine call;   next: m445 (next offset: 131)

// m445;   next: m446 (next offset: 134)
000131  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000132  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000133  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m446 subroutine call;   next: m449 (next offset: 134)

// m449;   next: m450 (next offset: 137)
000134  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000135  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000136  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m450 subroutine call;   next: m453 (next offset: 137)

// m453;   next: m454 (next offset: 140)
000137  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000138  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000139  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m454 subroutine call;   next: m457 (next offset: 140)

// m457;   next: m458 (next offset: 143)
000140  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000141  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000142  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m458 subroutine call;   next: m461 (next offset: 143)

// m461;   next: m462 (next offset: 146)
000143  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000144  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000145  1 0  "01001000000001000011111110000000"   // (R[4]) = const_5_B1 (); 

// m462 subroutine call;   next: m465 (next offset: 146)

// m465;   next: m466 (next offset: 149)
000146  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000147  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000148  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m466 subroutine call;   next: m469 (next offset: 149)

// m469;   next: m470 (next offset: 152)
000149  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000150  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000151  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m470 subroutine call;   next: m473 (next offset: 152)

// m473;   next: m474 (next offset: 155)
000152  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000153  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000154  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m474 subroutine call;   next: m477 (next offset: 155)

// m477;   next: m478 (next offset: 158)
000155  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000156  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000157  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m478 subroutine call;   next: m481 (next offset: 158)

// m481;   next: m482 (next offset: 161)
000158  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "01001000000001000100000000000000"   // (R[4]) = const_2_B1 (); 

// m482 subroutine call;   next: m487 (next offset: 161)

// m487, jump target: m58 (next offset: 163)
000161  1 0  "00100100000000000000000010111111"   // () = j_const_1_B1 (191); 
000162  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m217;   next: m218 (next offset: 165)
000163  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000164  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m218 subroutine call;   next: m221 (next offset: 165)

// m221;   next: m222 (next offset: 168)
000165  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000166  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000167  1 0  "01001000000001010011111100000000"   // (R[5]) = const_4_B1 (); 

// m222 subroutine call;   next: m225 (next offset: 168)

// m225;   next: m226 (next offset: 172)
000168  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000169  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000170  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000171  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m226 subroutine call;   next: m229 (next offset: 172)

// m229;   next: m230 (next offset: 175)
000172  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000173  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000174  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m230 subroutine call;   next: m233 (next offset: 175)

// m233;   next: m234 (next offset: 178)
000175  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000176  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000177  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m234 subroutine call;   next: m237 (next offset: 178)

// m237;   next: m238 (next offset: 181)
000178  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000179  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000180  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m238 subroutine call;   next: m241 (next offset: 181)

// m241;   next: m242 (next offset: 184)
000181  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000183  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m242 subroutine call;   next: m245 (next offset: 184)

// m245;   next: m246 (next offset: 187)
000184  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000185  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000186  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m246 subroutine call;   next: m249 (next offset: 187)

// m249;   next: m250 (next offset: 190)
000187  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000188  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000189  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m250 subroutine call;   next: m253 (next offset: 190)

// m253;   next: m254 (next offset: 193)
000190  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000191  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000192  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m254 subroutine call;   next: m257 (next offset: 193)

// m257;   next: m258 (next offset: 196)
000193  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000194  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000195  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m258 subroutine call;   next: m261 (next offset: 196)

// m261;   next: m262 (next offset: 199)
000196  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000197  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000198  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m262 subroutine call;   next: m265 (next offset: 199)

// m265;   next: m266 (next offset: 202)
000199  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000200  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000201  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m266 subroutine call;   next: m269 (next offset: 202)

// m269;   next: m270 (next offset: 206)
000202  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000203  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000204  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000205  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m270 subroutine call;   next: m273 (next offset: 206)

// m273;   next: m274 (next offset: 209)
000206  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000207  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000208  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m274 subroutine call;   next: m277 (next offset: 209)

// m277;   next: m278 (next offset: 212)
000209  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000210  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000211  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m278 subroutine call;   next: m281 (next offset: 212)

// m281;   next: m282 (next offset: 215)
000212  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000213  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000214  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m282 subroutine call;   next: m285 (next offset: 215)

// m285;   next: m286 (next offset: 218)
000215  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000216  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000217  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m286 subroutine call;   next: m289 (next offset: 218)

// m289;   next: m290 (next offset: 221)
000218  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000219  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000220  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m290 subroutine call;   next: m293 (next offset: 221)

// m293;   next: m294 (next offset: 224)
000221  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000222  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000223  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m294 subroutine call;   next: m297 (next offset: 224)

// m297;   next: m298 (next offset: 227)
000224  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000225  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000226  1 0  "01001000000001000011111110000000"   // (R[4]) = const_5_B1 (); 

// m298 subroutine call;   next: m215 (next offset: 227)

// m215;   next: m46 (next offset: 231)
000227  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000228  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000229  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000230  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46 subroutine call;   next: m307 (next offset: 231)

// m307;   next: m308 (next offset: 235)
000231  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000232  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000233  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000234  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m308 subroutine call;   next: m311 (next offset: 235)

// m311;   next: m312 (next offset: 238)
000235  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000236  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000237  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m312 subroutine call;   next: m315 (next offset: 238)

// m315;   next: m316 (next offset: 241)
000238  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000239  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000240  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m316 subroutine call;   next: m319 (next offset: 241)

// m319;   next: m320 (next offset: 244)
000241  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000242  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000243  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m320 subroutine call;   next: m323 (next offset: 244)

// m323;   next: m324 (next offset: 247)
000244  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000245  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000246  1 0  "01001000000001000100000000000000"   // (R[4]) = const_2_B1 (); 

// m324 subroutine call;   next: m327 (next offset: 247)

// m327;   next: m328 (next offset: 251)
000247  1 0  "01001000000001000100000001001001"   // (R[4]) = lhi_const_1_B1 (16457); 
000248  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000249  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000250  1 0  "01010100100001000000111111011010"   // (R[4]) = w32_const_bor_1_B1 (R[4],4058); 

// m328 subroutine call;   next: m49 (next offset: 251)

// m49 (next offset: 255)
000251  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000252  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000253  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000254  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30;   next: m36, jump target: m37 (next offset: 260)
000255  1 0  "01001000000001000010001100000000"   // (R[4]) = const_3_B1 (); 
000256  1 0  "00000000011001000001100000001110"   // (R[3]) = _gt_1_B1 (R[3],R[4]); 
000257  1 0  "00100000011000000000000000000110"   // () = nez_br_const_1_B1 (R[3],6); 
000258  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000259  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m36 (next offset: 265)
000260  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000261  1 0  "01001000000000110011111111001001"   // (R[3]) = lhi_const_1_B1 (16329); 
000262  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000263  1 0  "01010100011000110000111111011011"   // (R[3]) = w32_const_bor_1_B1 (R[3],4059); 
000264  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 

// m37;   next: m95 (next offset: 265)

// m95;   next: m96 (next offset: 267)
000265  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000266  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m96 subroutine call;   next: m99 (next offset: 267)

// m99;   next: m100 (next offset: 271)
000267  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000268  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000269  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000270  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m100 subroutine call;   next: m103 (next offset: 271)

// m103;   next: m104 (next offset: 274)
000271  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000272  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000273  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m104 subroutine call;   next: m107 (next offset: 274)

// m107;   next: m108 (next offset: 277)
000274  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000275  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000276  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m108 subroutine call;   next: m111 (next offset: 277)

// m111;   next: m112 (next offset: 280)
000277  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000278  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000279  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m112 subroutine call;   next: m115 (next offset: 280)

// m115;   next: m116 (next offset: 283)
000280  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000281  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000282  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m116 subroutine call;   next: m119 (next offset: 283)

// m119;   next: m120 (next offset: 286)
000283  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000284  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000285  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m120 subroutine call;   next: m123 (next offset: 286)

// m123;   next: m124 (next offset: 289)
000286  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000287  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000288  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m124 subroutine call;   next: m127 (next offset: 289)

// m127;   next: m128 (next offset: 292)
000289  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000290  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000291  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m128 subroutine call;   next: m131 (next offset: 292)

// m131;   next: m132 (next offset: 295)
000292  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000293  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000294  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m132 subroutine call;   next: m135 (next offset: 295)

// m135;   next: m136 (next offset: 298)
000295  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000296  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000297  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m136 subroutine call;   next: m139 (next offset: 298)

// m139;   next: m140 (next offset: 301)
000298  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000299  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000300  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m140 subroutine call;   next: m143 (next offset: 301)

// m143;   next: m144 (next offset: 305)
000301  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000302  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000303  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000304  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m144 subroutine call;   next: m147 (next offset: 305)

// m147;   next: m148 (next offset: 308)
000305  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000306  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000307  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m148 subroutine call;   next: m151 (next offset: 308)

// m151;   next: m152 (next offset: 311)
000308  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000309  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000310  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m152 subroutine call;   next: m155 (next offset: 311)

// m155;   next: m156 (next offset: 314)
000311  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000312  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000313  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m156 subroutine call;   next: m159 (next offset: 314)

// m159;   next: m160 (next offset: 317)
000314  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000315  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000316  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m160 subroutine call;   next: m163 (next offset: 317)

// m163;   next: m164 (next offset: 320)
000317  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000318  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000319  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m164 subroutine call;   next: m167 (next offset: 320)

// m167;   next: m168 (next offset: 323)
000320  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000321  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000322  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m168 subroutine call;   next: m171 (next offset: 323)

// m171;   next: m172 (next offset: 326)
000323  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000324  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000325  1 0  "01001000000001000011111110000000"   // (R[4]) = const_5_B1 (); 

// m172 subroutine call;   next: m175 (next offset: 326)

// m175;   next: m176 (next offset: 329)
000326  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000327  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000328  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m176 subroutine call;   next: m179 (next offset: 329)

// m179;   next: m180 (next offset: 332)
000329  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000330  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000331  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m180 subroutine call;   next: m183 (next offset: 332)

// m183;   next: m184 (next offset: 335)
000332  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000333  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000334  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m184 subroutine call;   next: m187 (next offset: 335)

// m187;   next: m188 (next offset: 338)
000335  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000336  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000337  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m188 subroutine call;   next: m191 (next offset: 338)

// m191;   next: m192 (next offset: 342)
000338  1 0  "01001000000001000011111111001001"   // (R[4]) = lhi_const_1_B1 (16329); 
000339  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000340  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000341  1 0  "01010100100001000000111111011010"   // (R[4]) = w32_const_bor_1_B1 (R[4],4058); 

// m192 subroutine call;   next: m490 (next offset: 342)

// m490;   next: m489 (next offset: 342)

// m489, jump target: m58 (next offset: 344)
000342  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000343  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m7;   next: m13, jump target: m14 (next offset: 348)
000344  1 0  "00000000100000000001100000010000"   // (R[3]) = _le_const_1_B2 (R[4]); 
000345  1 0  "00100000011000000000000000000100"   // () = nez_br_const_1_B1 (R[3],4); 
000346  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000347  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m13 (next offset: 351)
000348  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000349  1 0  "01001000000000110000000000000000"   // (R[3]) = const_6_B3 (); 
000350  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 

// m14;   next: m485 (next offset: 351)

// m485;   next: m58 (next offset: 353)
000351  1 0  "01001000000000110100000001001001"   // (R[3]) = lhi_const_1_B1 (16457); 
000352  1 0  "01010100011000110000111111011011"   // (R[3]) = w32_const_bor_1_B1 (R[3],4059); 

// m58 (next offset: /)
000353  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000354  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000355  1 0  "00001000001000011111111111000100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-60,SP,SP); 
000356  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

