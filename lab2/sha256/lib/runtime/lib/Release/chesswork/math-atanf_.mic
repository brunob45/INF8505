
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:57 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-atanf_ tlx


// m3;   next: m26, jump target: m7 (next offset: 10)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000002  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 
000003  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[3]); 
000004  1 0  "01001000000000110101000010000000"   // (R[3]) = const_15_B1 (); 
000005  1 0  "00000000100000110001100000001100"   // (R[3]) = _ge_1_B1 (R[4],R[3]); 
000006  1 0  "00001000001000010000000000110000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (48,SP,SP); 
000007  1 0  "00100000011000000000000011100000"   // () = nez_br_const_1_B1 (R[3],224); 
000008  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000009  1 0  "10101000001001011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[5],SP,-4); 

// m26;   next: m46, jump target: m30 (next offset: 15)
000010  1 0  "01001000000000110011111011100000"   // (R[3]) = const_11_B1 (); 
000011  1 0  "00000000100000110001100000010011"   // (R[3]) = _lt_1_B1 (R[4],R[3]); 
000012  1 0  "00100000011000000000000000111110"   // () = nez_br_const_1_B1 (R[3],62); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46;   next: m57, jump target: m50 (next offset: 20)
000015  1 0  "01001000000000110011111110011000"   // (R[3]) = const_8_B1 (); 
000016  1 0  "00000000100000110001100000010011"   // (R[3]) = _lt_1_B1 (R[4],R[3]); 
000017  1 0  "00100000011000000000000000011001"   // () = nez_br_const_1_B1 (R[3],25); 
000018  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m57;   next: m172, jump target: m156 (next offset: 25)
000020  1 0  "01001000000000110100000000011100"   // (R[3]) = const_4_B1 (); 
000021  1 0  "00000000100000110001100000010011"   // (R[3]) = _lt_1_B1 (R[4],R[3]); 
000022  1 0  "00100000011000000000000000000110"   // () = nez_br_const_1_B1 (R[3],6); 
000023  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000024  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m172;   next: m173 (next offset: 28)
000025  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 
000026  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000027  1 0  "01001000000001001011111110000000"   // (R[4]) = const_2_B1 (); 

// m173 subroutine call;   next: m174 (next offset: 28)

// m174, jump target: m352 (next offset: 30)
000028  1 0  "00100100000000000000000000101101"   // () = j_const_1_B1 (45); 
000029  1 0  "01010100000001000000000000000011"   // (R[4]) = const_1_B2 (); 

// m156;   next: m157 (next offset: 32)
000030  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000031  1 0  "01001000000001010011111111000000"   // (R[5]) = const_3_B1 (); 

// m157 subroutine call;   next: m160 (next offset: 32)

// m160;   next: m161 (next offset: 36)
000032  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000033  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000034  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000035  1 0  "01001000000001000011111111000000"   // (R[4]) = const_3_B1 (); 

// m161 subroutine call;   next: m164 (next offset: 36)

// m164;   next: m165 (next offset: 39)
000036  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01001000000001000011111110000000"   // (R[4]) = const_12_B1 (); 

// m165 subroutine call;   next: m168 (next offset: 39)

// m168;   next: m169 (next offset: 42)
000039  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000040  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000041  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m169 subroutine call;   next: m357 (next offset: 42)

// m357, jump target: m352 (next offset: 44)
000042  1 0  "00100100000000000000000000011111"   // () = j_const_1_B1 (31); 
000043  1 0  "01010100000001000000000000000010"   // (R[4]) = const_13_B2 (); 

// m50;   next: m140, jump target: m121 (next offset: 49)
000044  1 0  "01001000000000110011111100110000"   // (R[3]) = const_7_B1 (); 
000045  1 0  "00000000100000110001100000010011"   // (R[3]) = _lt_1_B1 (R[4],R[3]); 
000046  1 0  "00100000011000000000000000001100"   // () = nez_br_const_1_B1 (R[3],12); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m140;   next: m141 (next offset: 51)
000049  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000050  1 0  "01001000000001010011111110000000"   // (R[5]) = const_12_B1 (); 

// m141 subroutine call;   next: m144 (next offset: 51)

// m144;   next: m145 (next offset: 55)
000051  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000052  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000053  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000054  1 0  "01001000000001010011111110000000"   // (R[5]) = const_12_B1 (); 

// m145 subroutine call;   next: m148 (next offset: 55)

// m148;   next: m149 (next offset: 58)
000055  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000056  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000057  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m149 subroutine call;   next: m150 (next offset: 58)

// m150, jump target: m352 (next offset: 60)
000058  1 0  "00100100000000000000000000001111"   // () = j_const_1_B1 (15); 
000059  1 0  "01010100000001000000000000000001"   // (R[4]) = const_5_B2 (); 

// m121;   next: m122 (next offset: 63)
000060  1 0  "01001000000001000100000000000000"   // (R[4]) = const_6_B1 (); 
000061  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000062  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m122 subroutine call;   next: m125 (next offset: 63)

// m125;   next: m126 (next offset: 66)
000063  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000064  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000065  1 0  "01001000000001010011111110000000"   // (R[5]) = const_12_B1 (); 

// m126 subroutine call;   next: m129 (next offset: 66)

// m129;   next: m130 (next offset: 70)
000066  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000067  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000068  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000069  1 0  "01001000000001000100000000000000"   // (R[4]) = const_6_B1 (); 

// m130 subroutine call;   next: m133 (next offset: 70)

// m133;   next: m134 (next offset: 73)
000070  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000071  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000072  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m134 subroutine call;   next: m356 (next offset: 73)

// m356;   next: m352 (next offset: 74)
000073  1 0  "01001000000001000000000000000000"   // (R[4]) = const_16_B3 (); 

// m352, jump target: m222 (next offset: 76)
000074  1 0  "00100100000000000000000000010101"   // () = j_const_1_B1 (21); 
000075  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m30;   next: m113, jump target: m42 (next offset: 81)
000076  1 0  "01001000000000110011000100000000"   // (R[3]) = const_10_B1 (); 
000077  1 0  "00000000100000110001100000001100"   // (R[3]) = _ge_1_B1 (R[4],R[3]); 
000078  1 0  "00100000011000000000000000001110"   // () = nez_br_const_1_B1 (R[3],14); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000080  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m113;   next: m114 (next offset: 84)
000081  1 0  "01001000000000110111000101001001"   // (R[3]) = lhi_const_1_B1 (29001); 
000082  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000083  1 0  "01010100011001001111001011001010"   // (R[4]) = w32_const_bor_1_B1 (R[3],62154); 

// m114 subroutine call;   next: m111 (next offset: 84)

// m111;   next: m87 (next offset: 87)
000084  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000085  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000086  1 0  "01001000000001000011111110000000"   // (R[4]) = const_12_B1 (); 

// m87 subroutine call;   next: m91 (next offset: 87)

// m91;   next: m39, jump target: m40 (next offset: 90)
000087  1 0  "00010100011000000000000000000101"   // () = eqz_br_const_1_B1 (R[3],5); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m39 (next offset: 94)
000090  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000091  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000092  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000093  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 

// m40;   next: m349 (next offset: 94)

// m349;   next: m346 (next offset: 94)

// m42;   next: m346 (next offset: 94)

// m346;   next: m222 (next offset: 96)
000094  1 0  "00001000000001001111111111111111"   // (R[4]) = const_9_B1 (); 
000095  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m222;   next: m223 (next offset: 100)
000096  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000097  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000098  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000099  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m223 subroutine call;   next: m226 (next offset: 100)

// m226;   next: m227 (next offset: 104)
000100  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000101  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m227 subroutine call;   next: m230 (next offset: 104)

// m230;   next: m231 (next offset: 123)
000104  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000105  1 0  "01010100100001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[4],0); 
000106  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000107  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000108  1 0  "00000000101001000100000000110100"   // (R[4],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000109  1 0  "00000000101001100100000000110100"   // (R[6],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000110  1 0  "00000000101001110100000000110100"   // (R[7],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000111  1 0  "00000000101010000100000000110100"   // (R[8],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000112  1 0  "00000000101010010100000000110100"   // (R[9],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000113  1 0  "00001000101010101111111111011100"   // (R[10],MC) = _pl_const_1_B1 (R[5]); 
000114  1 0  "10101000001001001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[4],SP,-48); 
000115  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 
000116  1 0  "10101000001010011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[9],SP,-32); 
000117  1 0  "10101000001010001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[8],SP,-36); 
000118  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000119  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
000120  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000121  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000122  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 

// m231 subroutine call;   next: m234 (next offset: 123)

// m234;   next: m235 (next offset: 126)
000123  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000124  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000125  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m235 subroutine call;   next: m238 (next offset: 126)

// m238;   next: m239 (next offset: 129)
000126  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000127  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000128  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m239 subroutine call;   next: m242 (next offset: 129)

// m242;   next: m243 (next offset: 132)
000129  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000130  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000131  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m243 subroutine call;   next: m246 (next offset: 132)

// m246;   next: m247 (next offset: 135)
000132  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000133  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000134  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m247 subroutine call;   next: m250 (next offset: 135)

// m250;   next: m251 (next offset: 138)
000135  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000136  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000137  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m251 subroutine call;   next: m254 (next offset: 138)

// m254;   next: m255 (next offset: 141)
000138  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000140  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m255 subroutine call;   next: m258 (next offset: 141)

// m258;   next: m259 (next offset: 144)
000141  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000142  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000143  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m259 subroutine call;   next: m262 (next offset: 144)

// m262;   next: m263 (next offset: 147)
000144  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m263 subroutine call;   next: m266 (next offset: 147)

// m266;   next: m267 (next offset: 150)
000147  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000148  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000149  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m267 subroutine call;   next: m270 (next offset: 150)

// m270;   next: m271 (next offset: 153)
000150  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000151  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000152  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m271 subroutine call;   next: m274 (next offset: 153)

// m274;   next: m275 (next offset: 166)
000153  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000154  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000155  1 0  "00000000101001100100000000110100"   // (R[6],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000156  1 0  "00000000101001110100000000110100"   // (R[7],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000157  1 0  "00000000101010000100000000110100"   // (R[8],R[5]) = load__pl_const_1_B1 (R[5],DMb_stat); 
000158  1 0  "01010000101010010000000000000000"   // (R[9]) = load_1_B1 (R[5],DMb_stat); 
000159  1 0  "10101000001010011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[9],SP,-20); 
000160  1 0  "10101000001010001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[8],SP,-28); 
000161  1 0  "10101000001001111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[7],SP,-32); 
000162  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000163  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000164  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000165  1 0  "01010000101001010000000000001000"   // (R[5]) = load__pl_const_2_B1 (R[5],DMb_stat); 

// m275 subroutine call;   next: m278 (next offset: 166)

// m278;   next: m279 (next offset: 169)
000166  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000167  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000168  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m279 subroutine call;   next: m282 (next offset: 169)

// m282;   next: m283 (next offset: 172)
000169  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000170  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000171  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m283 subroutine call;   next: m286 (next offset: 172)

// m286;   next: m287 (next offset: 175)
000172  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000173  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000174  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m287 subroutine call;   next: m290 (next offset: 175)

// m290;   next: m291 (next offset: 178)
000175  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000176  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000177  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m291 subroutine call;   next: m294 (next offset: 178)

// m294;   next: m295 (next offset: 181)
000178  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000179  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000180  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m295 subroutine call;   next: m298 (next offset: 181)

// m298;   next: m299 (next offset: 184)
000181  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000183  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m299 subroutine call;   next: m302 (next offset: 184)

// m302;   next: m303 (next offset: 187)
000184  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000185  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000186  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m303 subroutine call;   next: m306 (next offset: 187)

// m306;   next: m307 (next offset: 190)
000187  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000188  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000189  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m307 subroutine call;   next: m310 (next offset: 190)

// m310;   next: m311 (next offset: 193)
000190  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000191  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000192  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m311 subroutine call;   next: m314 (next offset: 193)

// m314;   next: m315 (next offset: 196)
000193  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000194  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000195  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m315 subroutine call;   next: m220 (next offset: 196)

// m220;   next: m331, jump target: m318 (next offset: 201)
000196  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000197  1 0  "00000000100000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[4]); 
000198  1 0  "00100000101000000000000000011100"   // () = nez_br_const_1_B1 (R[5],28); 
000199  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000200  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m331;   next: m332 (next offset: 213)
000201  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000202  1 0  "01010100101001100000000000000000"   // (R[6]) = w32_const_bor_1_B1 (R[5],0); 
000203  1 0  "10001000100001000000000000000010"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000204  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000205  1 0  "00000000100001100011000000000001"   // (R[6],) = _pl_1_B1 (R[6],R[4]); 
000206  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000207  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000208  1 0  "01010000110001100000000000000000"   // (R[6]) = load_1_B1 (R[6],DMb_stat); 
000209  1 0  "01010000100001010000000000000000"   // (R[5]) = load_1_B1 (R[4],DMb_stat); 
000210  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000211  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000212  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m332 subroutine call;   next: m335 (next offset: 213)

// m335;   next: m336 (next offset: 216)
000213  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000214  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000215  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m336 subroutine call;   next: m339 (next offset: 216)

// m339;   next: m340 (next offset: 219)
000216  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000217  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000218  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m340 subroutine call;   next: m329 (next offset: 219)

// m329;   next: m343, jump target: m79 (next offset: 224)
000219  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000220  1 0  "00000000100000000010100000001100"   // (R[5]) = _ge_const_1_B2 (R[4]); 
000221  1 0  "00100000101000000000000000101100"   // () = nez_br_const_1_B1 (R[5],44); 
000222  1 0  "01001000000001000000000000000000"   // (R[4]) = const_16_B3 (); 
000223  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m343;   next: m344 (next offset: 226)
000224  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000225  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m344 subroutine call;   next: m353 (next offset: 226)

// m353;   next: m354 (next offset: 226)

// m354, jump target: m79 (next offset: 228)
000226  1 0  "00100100000000000000000000101000"   // () = j_const_1_B1 (40); 
000227  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m318;   next: m319 (next offset: 231)
000228  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000229  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000230  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m319 subroutine call;   next: m358 (next offset: 231)

// m358;   next: m355 (next offset: 231)

// m355, jump target: m79 (next offset: 233)
000231  1 0  "00100100000000000000000000100011"   // () = j_const_1_B1 (35); 
000232  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m7;   next: m93, jump target: m14 (next offset: 238)
000233  1 0  "01001000000000110111111110000000"   // (R[3]) = const_14_B1 (); 
000234  1 0  "00000000100000110001100000010000"   // (R[3]) = _le_1_B1 (R[4],R[3]); 
000235  1 0  "00100000011000000000000000000111"   // () = nez_br_const_1_B1 (R[3],7); 
000236  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000237  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m93;   next: m94 (next offset: 240)
000238  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000239  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m94 subroutine call;   next: m13 (next offset: 240)

// m13 (next offset: 244)
000240  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000241  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000242  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 
000243  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m14;   next: m16 (next offset: 244)

// m16;   next: m103, jump target: m97 (next offset: 253)
000244  1 0  "01001000000001000000000000001100"   // (R[4]) = lhi_const_1_B1 (12); 
000245  1 0  "01010100100001000000000000001100"   // (R[4]) = w32_const_bor_1_B1 (R[4],12); 
000246  1 0  "01001000000000110000000000001100"   // (R[3]) = lhi_const_1_B1 (12); 
000247  1 0  "00000000101000000010100000001110"   // (R[5]) = _gt_const_1_B2 (R[5]); 
000248  1 0  "01010000100001100000000000000000"   // (R[6]) = load_1_B1 (R[4],DMb_stat); 
000249  1 0  "01010100011000110000000000001100"   // (R[3]) = w32_const_bor_1_B1 (R[3],12); 
000250  1 0  "00100000101000000000000000001001"   // () = nez_br_const_1_B1 (R[5],9); 
000251  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
000252  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 

// m103;   next: m104 (next offset: 256)
000253  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 
000254  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000255  1 0  "01001000000001000000000000000000"   // (R[4]) = const_16_B3 (); 

// m104 subroutine call;   next: m107 (next offset: 256)

// m107;   next: m108 (next offset: 259)
000256  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000257  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000258  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m108 subroutine call;   next: m347 (next offset: 259)

// m347, jump target: m79 (next offset: 261)
000259  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000260  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m97;   next: m98 (next offset: 263)
000261  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000262  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m98 subroutine call;   next: m22 (next offset: 263)

// m22 (next offset: 267)
000263  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000264  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000265  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 
000266  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m79 (next offset: /)
000267  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000268  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000269  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 
000270  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

