
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:55 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_powf_ tlx


// m301;   next: m305, jump target: m6 (next offset: 9)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "00001000001000010000000001000100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (68,SP,SP); 
000002  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000011001000011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[3]); 
000004  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000005  1 0  "00000000011001010001100000000011"   // (R[3]) = _ad_1_B1 (R[5],R[3]); 
000006  1 0  "00010100011000000000001101000000"   // () = eqz_br_const_1_B1 (R[3],832); 
000007  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 
000008  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 

// m305;   next: m19, jump target: m367 (next offset: 16)
000009  1 0  "01001000000011000111111110000000"   // (R[12]) = const_24_B1 (); 
000010  1 0  "00000000110011000011100000001110"   // (R[7]) = _gt_1_B1 (R[6],R[12]); 
000011  1 0  "00000000011011000100000000001110"   // (R[8]) = _gt_1_B1 (R[3],R[12]); 
000012  1 0  "00000000111010000011100000001010"   // (R[7]) = lor_1_B1 (R[7],R[8]); 
000013  1 0  "00100000111000000000001100110101"   // () = nez_br_const_1_B1 (R[7],821); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m19;   next: m23, jump target: m41 (next offset: 21)
000016  1 0  "00000000100000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[4]); 
000017  1 0  "01001000000010110000000000000000"   // (R[11]) = const_19_B3 (); 
000018  1 0  "00100001010000000000000000011000"   // () = nez_br_const_1_B1 (R[10],24); 
000019  1 0  "01001000000001110000000000000000"   // (R[7]) = const_19_B3 (); 
000020  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m23;   next: m28, jump target: m26 (next offset: 26)
000021  1 0  "01001000000010000100101110000000"   // (R[8]) = const_20_B1 (); 
000022  1 0  "00000000011010000100000000001100"   // (R[8]) = _ge_1_B1 (R[3],R[8]); 
000023  1 0  "00100001000000000000000000010010"   // () = nez_br_const_1_B1 (R[8],18); 
000024  1 0  "01010100000010110000000000000010"   // (R[11]) = const_21_B2 (); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m28;   next: m32, jump target: m38 (next offset: 31)
000026  1 0  "01001000000010000011111110000000"   // (R[8]) = const_25_B1 (); 
000027  1 0  "00000000011010000100000000010011"   // (R[8]) = _lt_2_B1 (R[3],R[8]); 
000028  1 0  "00100001000000000000000000001101"   // () = nez_br_const_1_B1 (R[8],13); 
000029  1 0  "01001000000010110000000000000000"   // (R[11]) = const_19_B3 (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m32;   next: m35, jump target: m36 (next offset: 40)
000031  1 0  "10011000011010000000000000010111"   // (R[8]) = _rs_const_1_B1 (R[3]); 
000032  1 0  "01010100000010010000000010010110"   // (R[9]) = const_18_B2 (); 
000033  1 0  "00000001001010000100100000011000"   // (R[9],MC) = _mi_1_B1 (R[9],R[8]); 
000034  1 0  "00000000011010010100000000010110"   // (R[8]) = _rs_3_B1 (R[3],R[9]); 
000035  1 0  "00000001000010010100100000010010"   // (R[9]) = _ls_1_B1 (R[8],R[9]); 
000036  1 0  "00000000011010010100100000010101"   // (R[9]) = _ne_2_B1 (R[9],R[3]); 
000037  1 0  "00100001001000000000000000000100"   // () = nez_br_const_1_B1 (R[9],4); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000039  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m35;   next: m1084 (next offset: 43)
000040  1 0  "00010001000010000000000000000001"   // (R[8]) = _ad_const_1_B1 (R[8]); 
000041  1 0  "01010100000010010000000000000010"   // (R[9]) = const_21_B2 (); 
000042  1 0  "00000001001010000101100000011000"   // (R[11],MC) = _mi_1_B1 (R[9],R[8]); 

// m36;   next: m1084 (next offset: 43)

// m1084;   next: m1085 (next offset: 43)

// m38;   next: m1085 (next offset: 43)

// m1085;   next: m1086 (next offset: 43)

// m26;   next: m1086 (next offset: 43)

// m1086;   next: m43 (next offset: 44)
000043  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 

// m41;   next: m43 (next offset: 44)

// m43;   next: m77, jump target: m1083 (next offset: 50)
000044  1 0  "00000000101000000110100000001100"   // (R[13]) = _ge_const_1_B2 (R[5]); 
000045  1 0  "00000000101000000100100000010011"   // (R[9]) = _lt_const_1_B2 (R[5]); 
000046  1 0  "00000000011011000111100000001011"   // (R[15]) = _eq_1_B1 (R[3],R[12]); 
000047  1 0  "00100001111000000000001011110111"   // () = nez_br_const_1_B1 (R[15],759); 
000048  1 0  "01001000000010000011111110000000"   // (R[8]) = const_25_B1 (); 
000049  1 0  "00000000110010000111000000001011"   // (R[14]) = _eq_1_B1 (R[6],R[8]); 

// m77;   next: m91, jump target: m1081 (next offset: 54)
000050  1 0  "00000000011010000111100000001011"   // (R[15]) = _eq_1_B1 (R[3],R[8]); 
000051  1 0  "00100001111000000000001011101001"   // () = nez_br_const_1_B1 (R[15],745); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m91;   next: m96, jump target: m383 (next offset: 59)
000054  1 0  "01001000000011110100000000000000"   // (R[15]) = const_17_B1 (); 
000055  1 0  "00000000101011110111100000001011"   // (R[15]) = _eq_1_B1 (R[5],R[15]); 
000056  1 0  "00100001111000000000001011100000"   // () = nez_br_const_1_B1 (R[15],736); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m96;   next: m100, jump target: m110 (next offset: 64)
000059  1 0  "01001000000011110011111100000000"   // (R[15]) = const_16_B1 (); 
000060  1 0  "00000000101011110010100000010101"   // (R[5]) = _ne_1_B1 (R[5],R[15]); 
000061  1 0  "00100000101000000000000000001000"   // () = nez_br_const_1_B1 (R[5],8); 
000062  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m100;   next: m106, jump target: m108 (next offset: 68)
000064  1 0  "00000000100000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[4]); 
000065  1 0  "00100000101000000000000000000100"   // () = nez_br_const_1_B1 (R[5],4); 
000066  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m106;   next: m105 (next offset: 71)
000068  1 0  "01010000001000101111111111110100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000069  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000070  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 

// m105 subroutine call;   next: m107 (next offset: 71)

// m107 (next offset: 71)

// m108;   next: m1091 (next offset: 71)

// m1091;   next: m314 (next offset: 71)

// m110;   next: m314 (next offset: 71)

// m314;   next: m325, jump target: m1079 (next offset: 78)
000071  1 0  "00000000110011000010100000001011"   // (R[5]) = _eq_1_B1 (R[6],R[12]); 
000072  1 0  "00000000110000000110000000001011"   // (R[12]) = eqz_1_B1 (R[6]); 
000073  1 0  "00000000101011000010100000001010"   // (R[5]) = lor_1_B1 (R[5],R[12]); 
000074  1 0  "00000000101011100010100000001010"   // (R[5]) = lor_1_B1 (R[5],R[14]); 
000075  1 0  "00100000101000000000001010100111"   // () = nez_br_const_1_B1 (R[5],679); 
000076  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000077  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m325;   next: m158, jump target: m407 (next offset: 84)
000078  1 0  "10011100100001010000000000011111"   // (R[5]) = _rs_const_3_B1 (R[4]); 
000079  1 0  "00001000101001011111111111111111"   // (R[5],MC) = _pl_const_3_B1 (R[5]); 
000080  1 0  "00000000101010110101000000001010"   // (R[10]) = _or_2_B1 (R[5],R[11]); 
000081  1 0  "00010101010000000000001010011010"   // () = eqz_br_const_1_B1 (R[10],666); 
000082  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m158;   next: m192, jump target: m162 (next offset: 101)
000084  1 0  "01001000000011100000000000000000"   // (R[14]) = lhi_const_1_B1 (0); 
000085  1 0  "01001000000011010000000000000000"   // (R[13]) = lhi_const_1_B1 (0); 
000086  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000087  1 0  "01001000000010100100110100000000"   // (R[10]) = const_11_B1 (); 
000088  1 0  "01010101110011100000000000000000"   // (R[14]) = w32_const_bor_1_B1 (R[14],0); 
000089  1 0  "01010101101011010000000000000000"   // (R[13]) = w32_const_bor_1_B1 (R[13],0); 
000090  1 0  "01001000000011000011111010101010"   // (R[12]) = lhi_const_1_B1 (16042); 
000091  1 0  "01001000000010110000000001111111"   // (R[11]) = lhi_const_1_B1 (127); 
000092  1 0  "00000000011010100001100000001110"   // (R[3]) = _gt_1_B1 (R[3],R[10]); 
000093  1 0  "10101000001011011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[13],SP,-28); 
000094  1 0  "10101000001011101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[14],SP,-32); 
000095  1 0  "01001000000001010000000010000000"   // (R[5]) = const_13_B1 (); 
000096  1 0  "01010101100011001010101010101011"   // (R[12]) = w32_const_bor_1_B1 (R[12],43691); 
000097  1 0  "01010101011010111111111111111111"   // (R[11]) = w32_const_bor_1_B1 (R[11],65535); 
000098  1 0  "00100000011000000000000100000111"   // () = nez_br_const_1_B1 (R[3],263); 
000099  1 0  "10101000001011001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[12],SP,-24); 
000100  1 0  "10101000001010111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[11],SP,-20); 

// m192;   next: m522, jump target: m196 (next offset: 105)
000101  1 0  "00000000110001010010000000001100"   // (R[4]) = _ge_1_B1 (R[6],R[5]); 
000102  1 0  "00100000100000000000000000001001"   // () = nez_br_const_1_B1 (R[4],9); 
000103  1 0  "01001000000001010000000000000000"   // (R[5]) = const_19_B3 (); 
000104  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m522;   next: m523 (next offset: 108)
000105  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000106  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000107  1 0  "01001000000001010100101110000000"   // (R[5]) = const_20_B1 (); 

// m523 subroutine call;   next: m520 (next offset: 108)

// m520;   next: m198 (next offset: 113)
000108  1 0  "01010000001010111111111111101100"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000109  1 0  "00001000000001011111111111101000"   // (R[5]) = const_9_B1 (); 
000110  1 0  "01001000000001110000000000000000"   // (R[7]) = const_19_B3 (); 
000111  1 0  "01001000000010000011111110000000"   // (R[8]) = const_25_B1 (); 
000112  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 

// m196;   next: m198 (next offset: 113)

// m198;   next: m203, jump target: m201 (next offset: 125)
000113  1 0  "00000000110010110001100000000011"   // (R[3]) = _ad_1_B1 (R[6],R[11]); 
000114  1 0  "10011000110001000000000000010111"   // (R[4]) = _rs_const_1_B1 (R[6]); 
000115  1 0  "00001000100001101111111110000001"   // (R[6],MC) = _pl_const_2_B1 (R[4]); 
000116  1 0  "00000000101001100010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[6]); 
000117  1 0  "01001000000010010000000000011100"   // (R[9]) = lhi_const_1_B1 (28); 
000118  1 0  "01010101001001101100010001110001"   // (R[6]) = w32_const_bor_1_B1 (R[9],50289); 
000119  1 0  "00000000011010000010000000001010"   // (R[4]) = _or_1_B1 (R[3],R[8]); 
000120  1 0  "00000000011001100011000000010000"   // (R[6]) = _le_2_B1 (R[3],R[6]); 
000121  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000122  1 0  "00100000110000000000000000001111"   // () = nez_br_const_1_B1 (R[6],15); 
000123  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000124  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 

// m203;   next: m207, jump target: m206 (next offset: 131)
000125  1 0  "01001000000001010000000001011101"   // (R[5]) = lhi_const_1_B1 (93); 
000126  1 0  "01010100101001011011001111010111"   // (R[5]) = w32_const_bor_1_B1 (R[5],46039); 
000127  1 0  "00000000011001010010100000010011"   // (R[5]) = _lt_1_B1 (R[3],R[5]); 
000128  1 0  "00100000101000000000000000001000"   // () = nez_br_const_1_B1 (R[5],8); 
000129  1 0  "01010100000001110000000000000001"   // (R[7]) = const_23_B2 (); 
000130  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m207;   next: m1100 (next offset: 138)
000131  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000132  1 0  "01001000000000111111111110000000"   // (R[3]) = const_8_B1 (); 
000133  1 0  "00000000011001000010000000000001"   // (R[4],) = _pl_2_B1 (R[4],R[3]); 
000134  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_4_B1 (R[5]); 
000135  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000136  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 
000137  1 0  "01001000000001110000000000000000"   // (R[7]) = const_19_B3 (); 

// m206;   next: m1100 (next offset: 138)

// m1100;   next: m605 (next offset: 139)
000138  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 

// m201;   next: m605 (next offset: 139)

// m605;   next: m606 (next offset: 148)
000139  1 0  "10001000111001010000000000000010"   // (R[5]) = _ls_const_3_B1 (R[7]); 
000140  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000141  1 0  "10101000001001011111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[5],SP,-52); 
000142  1 0  "01010100011000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[3],0); 
000143  1 0  "00000000011001010010100000000001"   // (R[5],) = _pl_1_B1 (R[3],R[5]); 
000144  1 0  "01010000101001010000000000000000"   // (R[5]) = load_2_B1 (R[5],DMb_stat); 
000145  1 0  "10101000001001011111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[5],SP,-56); 
000146  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000147  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m606 subroutine call;   next: m609 (next offset: 148)

// m609;   next: m610 (next offset: 152)
000148  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000149  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000150  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000151  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m610 subroutine call;   next: m613 (next offset: 152)

// m613;   next: m614 (next offset: 155)
000152  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000153  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000154  1 0  "01001000000001000011111110000000"   // (R[4]) = const_25_B1 (); 

// m614 subroutine call;   next: m617 (next offset: 155)

// m617;   next: m618 (next offset: 159)
000155  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000156  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000157  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000158  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m618 subroutine call;   next: m621 (next offset: 159)

// m621;   next: m622 (next offset: 176)
000159  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000160  1 0  "10011000100001000000000000000001"   // (R[4]) = _rs_const_2_B1 (R[4]); 
000161  1 0  "01001000000001010010000000000000"   // (R[5]) = const_6_B1 (); 
000162  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[5]); 
000163  1 0  "01001000000001010000000000000100"   // (R[5]) = const_7_B1 (); 
000164  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000165  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_2_B1 (R[4],R[5]); 
000166  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000167  1 0  "00001000000001011111000000000000"   // (R[5]) = const_12_B1 (); 
000168  1 0  "00000000011001010001100000000011"   // (R[3]) = _ad_1_B1 (R[3],R[5]); 
000169  1 0  "10001000110001100000000000010101"   // (R[6]) = _ls_const_2_B1 (R[6]); 
000170  1 0  "00000000100001100010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[6]); 
000171  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000172  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000173  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000174  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000175  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m622 subroutine call;   next: m625 (next offset: 176)

// m625;   next: m626 (next offset: 179)
000176  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000177  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000178  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m626 subroutine call;   next: m629 (next offset: 179)

// m629;   next: m630 (next offset: 183)
000179  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000180  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000181  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000182  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m630 subroutine call;   next: m633 (next offset: 183)

// m633;   next: m634 (next offset: 186)
000183  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000184  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000185  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m634 subroutine call;   next: m637 (next offset: 186)

// m637;   next: m638 (next offset: 190)
000186  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000187  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000188  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000189  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m638 subroutine call;   next: m641 (next offset: 190)

// m641;   next: m642 (next offset: 193)
000190  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000191  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000192  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m642 subroutine call;   next: m645 (next offset: 193)

// m645;   next: m646 (next offset: 196)
000193  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000194  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000195  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 

// m646 subroutine call;   next: m649 (next offset: 196)

// m649;   next: m650 (next offset: 200)
000196  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000197  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000199  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m650 subroutine call;   next: m653 (next offset: 200)

// m653;   next: m654 (next offset: 204)
000200  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000201  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000202  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000203  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m654 subroutine call;   next: m657 (next offset: 204)

// m657;   next: m658 (next offset: 209)
000204  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000205  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000206  1 0  "01001000000001010011111001010011"   // (R[5]) = lhi_const_1_B1 (15955); 
000207  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000208  1 0  "01010100101001011111000101000010"   // (R[5]) = w32_const_bor_1_B1 (R[5],61762); 

// m658 subroutine call;   next: m661 (next offset: 209)

// m661;   next: m662 (next offset: 213)
000209  1 0  "01001000000001000011111001101100"   // (R[4]) = lhi_const_1_B1 (15980); 
000210  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000211  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000212  1 0  "01010100100001000011001001010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],12885); 

// m662 subroutine call;   next: m665 (next offset: 213)

// m665;   next: m666 (next offset: 216)
000213  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000214  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000215  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m666 subroutine call;   next: m669 (next offset: 216)

// m669;   next: m670 (next offset: 220)
000216  1 0  "01001000000001000011111010001011"   // (R[4]) = lhi_const_1_B1 (16011); 
000217  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "01010100100001001010001100000101"   // (R[4]) = w32_const_bor_1_B1 (R[4],41733); 

// m670 subroutine call;   next: m673 (next offset: 220)

// m673;   next: m674 (next offset: 223)
000220  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000221  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000222  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m674 subroutine call;   next: m677 (next offset: 223)

// m677;   next: m678 (next offset: 226)
000223  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000224  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000225  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m678 subroutine call;   next: m681 (next offset: 226)

// m681;   next: m682 (next offset: 229)
000226  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000227  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000228  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m682 subroutine call;   next: m685 (next offset: 229)

// m685;   next: m686 (next offset: 233)
000229  1 0  "01001000000001000011111011011011"   // (R[4]) = lhi_const_1_B1 (16091); 
000230  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000231  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000232  1 0  "01010100100001000110110110110111"   // (R[4]) = w32_const_bor_1_B1 (R[4],28087); 

// m686 subroutine call;   next: m689 (next offset: 233)

// m689;   next: m690 (next offset: 236)
000233  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000234  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000235  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m690 subroutine call;   next: m693 (next offset: 236)

// m693;   next: m694 (next offset: 240)
000236  1 0  "01001000000001000011111100011001"   // (R[4]) = lhi_const_1_B1 (16153); 
000237  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000238  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000239  1 0  "01010100100001001001100110011010"   // (R[4]) = w32_const_bor_1_B1 (R[4],39322); 

// m694 subroutine call;   next: m697 (next offset: 240)

// m697;   next: m698 (next offset: 243)
000240  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000241  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000242  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m698 subroutine call;   next: m701 (next offset: 243)

// m701;   next: m702 (next offset: 247)
000243  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000244  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000245  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000246  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m702 subroutine call;   next: m705 (next offset: 247)

// m705;   next: m706 (next offset: 250)
000247  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000248  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000249  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m706 subroutine call;   next: m709 (next offset: 250)

// m709;   next: m710 (next offset: 253)
000250  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000251  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000252  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m710 subroutine call;   next: m713 (next offset: 253)

// m713;   next: m714 (next offset: 257)
000253  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000254  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000255  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000256  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m714 subroutine call;   next: m717 (next offset: 257)

// m717;   next: m718 (next offset: 261)
000257  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000258  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000259  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000260  1 0  "01001000000001000100000001000000"   // (R[4]) = const_5_B1 (); 

// m718 subroutine call;   next: m721 (next offset: 261)

// m721;   next: m722 (next offset: 264)
000261  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000262  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000263  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m722 subroutine call;   next: m725 (next offset: 264)

// m725;   next: m726 (next offset: 269)
000264  1 0  "00001000000001001111000000000000"   // (R[4]) = const_12_B1 (); 
000265  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[3],R[4]); 
000266  1 0  "10101000001001001111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[4],SP,-60); 
000267  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000268  1 0  "01001000000001010100000001000000"   // (R[5]) = const_5_B1 (); 

// m726 subroutine call;   next: m729 (next offset: 269)

// m729;   next: m730 (next offset: 272)
000269  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000270  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000271  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m730 subroutine call;   next: m733 (next offset: 272)

// m733;   next: m734 (next offset: 275)
000272  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000273  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000274  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m734 subroutine call;   next: m737 (next offset: 275)

// m737;   next: m738 (next offset: 279)
000275  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000276  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000277  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000278  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m738 subroutine call;   next: m741 (next offset: 279)

// m741;   next: m742 (next offset: 283)
000279  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000280  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000281  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000282  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m742 subroutine call;   next: m745 (next offset: 283)

// m745;   next: m746 (next offset: 287)
000283  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000284  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000285  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000286  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m746 subroutine call;   next: m749 (next offset: 287)

// m749;   next: m750 (next offset: 290)
000287  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000288  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000289  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m750 subroutine call;   next: m753 (next offset: 290)

// m753;   next: m754 (next offset: 294)
000290  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000291  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000292  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000293  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m754 subroutine call;   next: m757 (next offset: 294)

// m757;   next: m758 (next offset: 300)
000294  1 0  "00001000000001001111000000000000"   // (R[4]) = const_12_B1 (); 
000295  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[3],R[4]); 
000296  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000297  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000298  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000299  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m758 subroutine call;   next: m761 (next offset: 300)

// m761;   next: m762 (next offset: 303)
000300  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000301  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000302  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m762 subroutine call;   next: m765 (next offset: 303)

// m765;   next: m766 (next offset: 308)
000303  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000304  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000305  1 0  "01001000000001000011111101110110"   // (R[4]) = lhi_const_1_B1 (16246); 
000306  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000307  1 0  "01010100100001000011100000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],14336); 

// m766 subroutine call;   next: m769 (next offset: 308)

// m769;   next: m770 (next offset: 313)
000308  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000309  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000310  1 0  "01001000000001000011011010011101"   // (R[4]) = lhi_const_1_B1 (13981); 
000311  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000312  1 0  "01010100100001001100001110100000"   // (R[4]) = w32_const_bor_1_B1 (R[4],50080); 

// m770 subroutine call;   next: m773 (next offset: 313)

// m773;   next: m774 (next offset: 318)
000313  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000314  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000315  1 0  "01001000000001010011111101110110"   // (R[5]) = lhi_const_1_B1 (16246); 
000316  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000317  1 0  "01010100101001010011100001001111"   // (R[5]) = w32_const_bor_1_B1 (R[5],14415); 

// m774 subroutine call;   next: m777 (next offset: 318)

// m777;   next: m778 (next offset: 321)
000318  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000319  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000320  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m778 subroutine call;   next: m781 (next offset: 321)

// m781;   next: m782 (next offset: 328)
000321  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000322  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000323  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000324  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000325  1 0  "01010000100001010000000000000000"   // (R[5]) = load_2_B1 (R[4],DMb_stat); 
000326  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000327  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m782 subroutine call;   next: m785 (next offset: 328)

// m785;   next: m786 (next offset: 331)
000328  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000329  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000330  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m786 subroutine call;   next: m789 (next offset: 331)

// m789;   next: m790 (next offset: 335)
000331  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000332  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000333  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000334  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m790 subroutine call;   next: m793 (next offset: 335)

// m793;   next: m794 (next offset: 343)
000335  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000336  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000337  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000338  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000339  1 0  "01010000100001010000000000000000"   // (R[5]) = load_2_B1 (R[4],DMb_stat); 
000340  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000341  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000342  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m794 subroutine call;   next: m797 (next offset: 343)

// m797;   next: m798 (next offset: 346)
000343  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000344  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000345  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m798 subroutine call;   next: m801 (next offset: 346)

// m801;   next: m802 (next offset: 352)
000346  1 0  "00001000000001001111000000000000"   // (R[4]) = const_12_B1 (); 
000347  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[3],R[4]); 
000348  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000349  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000350  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000351  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m802 subroutine call;   next: m805 (next offset: 352)

// m805;   next: m806 (next offset: 355)
000352  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000353  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000354  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m806 subroutine call;   next: m809 (next offset: 355)

// m809;   next: m810 (next offset: 358)
000355  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000356  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000357  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m810 subroutine call;   next: m813 (next offset: 358)

// m813;   next: m814 (next offset: 361)
000358  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000359  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000360  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m814 subroutine call;   next: m1101 (next offset: 361)

// m1101, jump target: m330 (next offset: 363)
000361  1 0  "00100100000000000000000001100101"   // () = j_const_1_B1 (101); 
000362  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m162;   next: m1078, jump target: m174 (next offset: 369)
000363  1 0  "01001000000001010011111101111111"   // (R[5]) = lhi_const_1_B1 (16255); 
000364  1 0  "01010100101001011111111111111000"   // (R[5]) = w32_const_bor_1_B1 (R[5],65528); 
000365  1 0  "00000000110001010010100000001100"   // (R[5]) = _ge_2_B1 (R[6],R[5]); 
000366  1 0  "00100000101000000000000000010001"   // () = nez_br_const_1_B1 (R[5],17); 
000367  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000368  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1078;   next: m427, jump target: m419 (next offset: 372)
000369  1 0  "00100001001000000000000000000110"   // () = nez_br_const_1_B1 (R[9],6); 
000370  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000371  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m427;   next: m428 (next offset: 375)
000372  1 0  "01010000101001000000000000000000"   // (R[4],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 
000373  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000374  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m428 subroutine call;   next: m1098 (next offset: 375)

// m1098, jump target: m173 (next offset: 377)
000375  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000376  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m419;   next: m420 (next offset: 381)
000377  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000378  1 0  "01010000101001000000000000000000"   // (R[4],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 
000379  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000380  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m420 subroutine call;   next: m1126 (next offset: 381)

// m1126;   next: m173 (next offset: 381)

// m173 (next offset: 385)
000381  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000382  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000383  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000384  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m174;   next: m176 (next offset: 385)

// m176;   next: m180, jump target: m188 (next offset: 391)
000385  1 0  "01001000000001010011111110000000"   // (R[5]) = lhi_const_1_B1 (16256); 
000386  1 0  "01010100101001010000000000000111"   // (R[5]) = w32_const_bor_1_B1 (R[5],7); 
000387  1 0  "00000000110001010010100000010000"   // (R[5]) = _le_2_B1 (R[6],R[5]); 
000388  1 0  "00100000101000000000000000010011"   // () = nez_br_const_1_B1 (R[5],19); 
000389  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000390  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m180;   next: m443, jump target: m435 (next offset: 396)
000391  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000392  1 0  "00000000100000000010000000001110"   // (R[4]) = _gt_const_1_B2 (R[4]); 
000393  1 0  "00100000100000000000000000000110"   // () = nez_br_const_1_B1 (R[4],6); 
000394  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000395  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m443;   next: m444 (next offset: 399)
000396  1 0  "01010000101001000000000000000000"   // (R[4],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 
000397  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000398  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m444 subroutine call;   next: m1099 (next offset: 399)

// m1099, jump target: m187 (next offset: 401)
000399  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000400  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m435;   next: m436 (next offset: 405)
000401  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000402  1 0  "01010000101001000000000000000000"   // (R[4],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 
000403  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000404  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m436 subroutine call;   next: m1127 (next offset: 405)

// m1127;   next: m187 (next offset: 405)

// m187 (next offset: 409)
000405  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000406  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000407  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000408  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m188;   next: m464 (next offset: 409)

// m464;   next: m465 (next offset: 411)
000409  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000410  1 0  "01001000000001010011111110000000"   // (R[5]) = const_25_B1 (); 

// m465 subroutine call;   next: m468 (next offset: 411)

// m468;   next: m469 (next offset: 415)
000411  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000412  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000413  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000414  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m469 subroutine call;   next: m472 (next offset: 415)

// m472;   next: m473 (next offset: 419)
000415  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000416  1 0  "01001000000001010011111010000000"   // (R[5]) = const_10_B1 (); 
000417  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000418  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m473 subroutine call;   next: m476 (next offset: 419)

// m476;   next: m477 (next offset: 422)
000419  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000420  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000421  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m477 subroutine call;   next: m480 (next offset: 422)

// m480;   next: m481 (next offset: 425)
000422  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000423  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000424  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m481 subroutine call;   next: m484 (next offset: 425)

// m484;   next: m485 (next offset: 428)
000425  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000426  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000427  1 0  "01001000000001000011111100000000"   // (R[4]) = const_16_B1 (); 

// m485 subroutine call;   next: m488 (next offset: 428)

// m488;   next: m489 (next offset: 431)
000428  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000429  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000430  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m489 subroutine call;   next: m492 (next offset: 431)

// m492;   next: m493 (next offset: 436)
000431  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000432  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000433  1 0  "01001000000001000011111110111000"   // (R[4]) = lhi_const_1_B1 (16312); 
000434  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000435  1 0  "01010100100001001010101000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],43520); 

// m493 subroutine call;   next: m496 (next offset: 436)

// m496;   next: m497 (next offset: 441)
000436  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000437  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000438  1 0  "01001000000001010011011011101100"   // (R[5]) = lhi_const_1_B1 (14060); 
000439  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000440  1 0  "01010100101001011010010101110000"   // (R[5]) = w32_const_bor_1_B1 (R[5],42352); 

// m497 subroutine call;   next: m500 (next offset: 441)

// m500;   next: m501 (next offset: 446)
000441  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000442  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000443  1 0  "01001000000001010011111110111000"   // (R[5]) = lhi_const_1_B1 (16312); 
000444  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000445  1 0  "01010100101001011010101000111011"   // (R[5]) = w32_const_bor_1_B1 (R[5],43579); 

// m501 subroutine call;   next: m504 (next offset: 446)

// m504;   next: m505 (next offset: 449)
000446  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000447  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000448  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m505 subroutine call;   next: m508 (next offset: 449)

// m508;   next: m509 (next offset: 453)
000449  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000450  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000451  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000452  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m509 subroutine call;   next: m512 (next offset: 453)

// m512;   next: m513 (next offset: 459)
000453  1 0  "00001000000001001111000000000000"   // (R[4]) = const_12_B1 (); 
000454  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[3],R[4]); 
000455  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000456  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000457  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000458  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m513 subroutine call;   next: m516 (next offset: 459)

// m516;   next: m517 (next offset: 462)
000459  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000460  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000461  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m517 subroutine call;   next: m1121 (next offset: 462)

// m1121;   next: m330 (next offset: 463)
000462  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m330;   next: m215, jump target: m216 (next offset: 471)
000463  1 0  "00001000100001001111111111111111"   // (R[4],MC) = _pl_const_3_B1 (R[4]); 
000464  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000465  1 0  "00000000100001010010100000001010"   // (R[5]) = _or_2_B1 (R[5],R[4]); 
000466  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000467  1 0  "00001000000001101111000000000000"   // (R[6]) = const_12_B1 (); 
000468  1 0  "00100000101000000000000000000010"   // () = nez_br_const_2_B1 (R[5],2); 
000469  1 0  "01001000000000110011111110000000"   // (R[3]) = const_25_B1 (); 
000470  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m215;   next: m827 (next offset: 472)
000471  1 0  "01001000000000111011111110000000"   // (R[3]) = const_4_B1 (); 

// m216;   next: m827 (next offset: 472)

// m827;   next: m828 (next offset: 477)
000472  1 0  "00000000100001100010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[6]); 
000473  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000474  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000475  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000476  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m828 subroutine call;   next: m831 (next offset: 477)

// m831;   next: m832 (next offset: 480)
000477  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000478  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000479  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m832 subroutine call;   next: m835 (next offset: 480)

// m835;   next: m836 (next offset: 484)
000480  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000481  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000482  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000483  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m836 subroutine call;   next: m839 (next offset: 484)

// m839;   next: m840 (next offset: 487)
000484  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000485  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000486  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m840 subroutine call;   next: m843 (next offset: 487)

// m843;   next: m844 (next offset: 491)
000487  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000488  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000489  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000490  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m844 subroutine call;   next: m847 (next offset: 491)

// m847;   next: m848 (next offset: 495)
000491  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000492  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000493  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000494  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m848 subroutine call;   next: m825 (next offset: 495)

// m825;   next: m872, jump target: m855 (next offset: 500)
000495  1 0  "01001000000001000100001100000000"   // (R[4]) = const_3_B1 (); 
000496  1 0  "00000000011001000010000000001110"   // (R[4]) = _gt_1_B1 (R[3],R[4]); 
000497  1 0  "00100000100000000000000011110000"   // () = nez_br_const_1_B1 (R[4],240); 
000498  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000499  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m872;   next: m873 (next offset: 503)
000500  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000501  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000502  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m873 subroutine call;   next: m870 (next offset: 503)

// m870;   next: m237, jump target: m865 (next offset: 511)
000503  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000504  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000505  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000506  1 0  "01001000000001100100001100000000"   // (R[6]) = const_3_B1 (); 
000507  1 0  "00000000100001100010000000001011"   // (R[4]) = _eq_1_B1 (R[4],R[6]); 
000508  1 0  "00100000100000000000000000101011"   // () = nez_br_const_1_B1 (R[4],43); 
000509  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000510  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m237;   next: m245, jump target: m892 (next offset: 517)
000511  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000512  1 0  "01001000000001000100001100010110"   // (R[4]) = const_2_B1 (); 
000513  1 0  "00000000101001000010100000001110"   // (R[5]) = _gt_1_B1 (R[5],R[4]); 
000514  1 0  "00100000101000000000000000011001"   // () = nez_br_const_1_B1 (R[5],25); 
000515  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000516  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m245;   next: m335, jump target: m258 (next offset: 522)
000517  1 0  "01001000000001011100001100010110"   // (R[5]) = const_1_B1 (); 
000518  1 0  "00000000100001010010100000010101"   // (R[5]) = _ne_1_B1 (R[4],R[5]); 
000519  1 0  "00100000101000000000000000010010"   // () = nez_br_const_1_B1 (R[5],18); 
000520  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000521  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m335;   next: m336 (next offset: 524)
000522  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000523  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m336 subroutine call;   next: m356 (next offset: 524)

// m356;   next: m904, jump target: m262 (next offset: 527)
000524  1 0  "00010100011000000000000000110010"   // () = eqz_br_const_1_B1 (R[3],50); 
000525  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000526  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m904;   next: m905 (next offset: 531)
000527  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000528  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000529  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000530  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m905 subroutine call;   next: m908 (next offset: 531)

// m908;   next: m909 (next offset: 535)
000531  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000532  1 0  "01010000100001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[4],DMb_stat,PM); 
000533  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000534  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m909 subroutine call;   next: m255 (next offset: 535)

// m255 (next offset: 539)
000535  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000536  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000537  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000538  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m258, jump target: m262 (next offset: 541)
000539  1 0  "00100100000000000000000000100100"   // () = j_const_1_B1 (36); 
000540  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m892;   next: m893 (next offset: 545)
000541  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000542  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000543  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000544  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m893 subroutine call;   next: m896 (next offset: 545)

// m896;   next: m897 (next offset: 549)
000545  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000546  1 0  "01010000100001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[4],DMb_stat,PM); 
000547  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000548  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m897 subroutine call;   next: m243 (next offset: 549)

// m243 (next offset: 553)
000549  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000550  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000551  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000552  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m865;   next: m866 (next offset: 558)
000553  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000554  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000555  1 0  "01001000000000110011001100111000"   // (R[3]) = lhi_const_1_B1 (13112); 
000556  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000557  1 0  "01010100011001011010101000111100"   // (R[5]) = w32_const_bor_1_B1 (R[3],43580); 

// m866 subroutine call;   next: m863 (next offset: 558)

// m863;   next: m361 (next offset: 561)
000558  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000559  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000560  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m361 subroutine call;   next: m365 (next offset: 561)

// m365;   next: m880, jump target: m234 (next offset: 564)
000561  1 0  "00010100011000000000000000001101"   // () = eqz_br_const_1_B1 (R[3],13); 
000562  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000563  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m880;   next: m881 (next offset: 568)
000564  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000565  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000566  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000567  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m881 subroutine call;   next: m884 (next offset: 568)

// m884;   next: m885 (next offset: 572)
000568  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000569  1 0  "01010000100001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[4],DMb_stat,PM); 
000570  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000571  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m885 subroutine call;   next: m233 (next offset: 572)

// m233 (next offset: 576)
000572  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000573  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000574  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000575  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m234;   next: m262 (next offset: 576)

// m262;   next: m352, jump target: m273 (next offset: 582)
000576  1 0  "10011000101001000000000000010111"   // (R[4]) = _rs_const_1_B1 (R[5]); 
000577  1 0  "01001000000000110011111100000000"   // (R[3]) = const_16_B1 (); 
000578  1 0  "00000000101000110010100000010000"   // (R[5]) = _le_1_B1 (R[5],R[3]); 
000579  1 0  "00100000101000000000000000011111"   // () = nez_br_const_1_B1 (R[5],31); 
000580  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000581  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m352;   next: m269, jump target: m270 (next offset: 605)
000582  1 0  "00001000100001001111111110000010"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 
000583  1 0  "01001000000000110000000010000000"   // (R[3]) = const_13_B1 (); 
000584  1 0  "00000000011001000010000000010111"   // (R[4]) = _rs_1_B1 (R[3],R[4]); 
000585  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000586  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[4]); 
000587  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000588  1 0  "00000000100001100011100000000011"   // (R[7]) = _ad_1_B1 (R[4],R[6]); 
000589  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000590  1 0  "10011000111001110000000000010111"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000591  1 0  "00000000100001100100000000000011"   // (R[8]) = _ad_1_B1 (R[4],R[6]); 
000592  1 0  "00001000111001111111111110000001"   // (R[7],MC) = _pl_const_2_B1 (R[7]); 
000593  1 0  "00000000110001110011000000010111"   // (R[6]) = _rs_2_B1 (R[6],R[7]); 
000594  1 0  "01010100000010010000000000010111"   // (R[9]) = const_22_B2 (); 
000595  1 0  "00000000011010000001100000001010"   // (R[3]) = _or_1_B1 (R[8],R[3]); 
000596  1 0  "00000001001001110011100000011000"   // (R[7],MC) = _mi_1_B1 (R[9],R[7]); 
000597  1 0  "00000000011001110001100000010110"   // (R[3]) = _rs_3_B1 (R[3],R[7]); 
000598  1 0  "00001000000010001111111111111111"   // (R[8]) = const_14_B1 (); 
000599  1 0  "00000000110010000011100000011010"   // (R[7]) = _er_1_B1 (R[6],R[8]); 
000600  1 0  "00000000101000000011000000001100"   // (R[6]) = _ge_const_1_B2 (R[5]); 
000601  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000602  1 0  "00100000110000000000000000000100"   // () = nez_br_const_1_B1 (R[6],4); 
000603  1 0  "00000000100001110010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[7]); 
000604  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m269;   next: m912 (next offset: 608)
000605  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000606  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 
000607  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 

// m270;   next: m912 (next offset: 608)

// m912;   next: m913 (next offset: 610)
000608  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000609  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m913 subroutine call;   next: m1105 (next offset: 610)

// m1105, jump target: m954 (next offset: 612)
000610  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000611  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m273;   next: m954 (next offset: 615)
000612  1 0  "01001000000001000000000000000000"   // (R[4]) = const_19_B3 (); 
000613  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000614  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 

// m954;   next: m955 (next offset: 618)
000615  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000616  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000617  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m955 subroutine call;   next: m958 (next offset: 618)

// m958;   next: m959 (next offset: 624)
000618  1 0  "00001000000001001111000000000000"   // (R[4]) = const_12_B1 (); 
000619  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[3],R[4]); 
000620  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000621  1 0  "01001000000001010011111100110001"   // (R[5]) = lhi_const_1_B1 (16177); 
000622  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000623  1 0  "01010100101001010111001000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],29184); 

// m959 subroutine call;   next: m962 (next offset: 624)

// m962;   next: m963 (next offset: 628)
000624  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000625  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000626  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000627  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m963 subroutine call;   next: m966 (next offset: 628)

// m966;   next: m967 (next offset: 631)
000628  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000629  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000630  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m967 subroutine call;   next: m970 (next offset: 631)

// m970;   next: m971 (next offset: 635)
000631  1 0  "01001000000001000011111100110001"   // (R[4]) = lhi_const_1_B1 (16177); 
000632  1 0  "01010100100001010111001000011000"   // (R[5]) = w32_const_bor_1_B1 (R[4],29208); 
000633  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000634  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m971 subroutine call;   next: m974 (next offset: 635)

// m974;   next: m975 (next offset: 640)
000635  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000636  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000637  1 0  "01001000000001010011010110111111"   // (R[5]) = lhi_const_1_B1 (13759); 
000638  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000639  1 0  "01010100101001011011111010001100"   // (R[5]) = w32_const_bor_1_B1 (R[5],48780); 

// m975 subroutine call;   next: m978 (next offset: 640)

// m978;   next: m979 (next offset: 643)
000640  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000641  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000642  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m979 subroutine call;   next: m982 (next offset: 643)

// m982;   next: m983 (next offset: 647)
000643  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000644  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000645  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000646  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m983 subroutine call;   next: m986 (next offset: 647)

// m986;   next: m987 (next offset: 651)
000647  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000648  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000649  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000650  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m987 subroutine call;   next: m990 (next offset: 651)

// m990;   next: m991 (next offset: 654)
000651  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000652  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000653  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m991 subroutine call;   next: m994 (next offset: 654)

// m994;   next: m995 (next offset: 658)
000654  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000655  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000656  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000657  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m995 subroutine call;   next: m998 (next offset: 658)

// m998;   next: m999 (next offset: 663)
000658  1 0  "01001000000001000011001100110001"   // (R[4]) = lhi_const_1_B1 (13105); 
000659  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000660  1 0  "01010100100001011011101101001100"   // (R[5]) = w32_const_bor_1_B1 (R[4],47948); 
000661  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000662  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m999 subroutine call;   next: m1002 (next offset: 663)

// m1002;   next: m1003 (next offset: 667)
000663  1 0  "01001000000001001011010111011101"   // (R[4]) = lhi_const_1_B1 (-18979); 
000664  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000665  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000666  1 0  "01010100100001001110101000001110"   // (R[4]) = w32_const_bor_1_B1 (R[4],59918); 

// m1003 subroutine call;   next: m1006 (next offset: 667)

// m1006;   next: m1007 (next offset: 670)
000667  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000668  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000669  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1007 subroutine call;   next: m1010 (next offset: 670)

// m1010;   next: m1011 (next offset: 674)
000670  1 0  "01001000000001000011100010001010"   // (R[4]) = lhi_const_1_B1 (14474); 
000671  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000672  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000673  1 0  "01010100100001001011001101010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],45909); 

// m1011 subroutine call;   next: m1014 (next offset: 674)

// m1014;   next: m1015 (next offset: 677)
000674  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000675  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000676  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1015 subroutine call;   next: m1018 (next offset: 677)

// m1018;   next: m1019 (next offset: 681)
000677  1 0  "01001000000001001011101100110110"   // (R[4]) = lhi_const_1_B1 (-17610); 
000678  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000679  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000680  1 0  "01010100100001000000101101100001"   // (R[4]) = w32_const_bor_1_B1 (R[4],2913); 

// m1019 subroutine call;   next: m1022 (next offset: 681)

// m1022;   next: m1023 (next offset: 684)
000681  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000682  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000683  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1023 subroutine call;   next: m1026 (next offset: 684)

// m1026;   next: m1027 (next offset: 688)
000684  1 0  "01001000000001000011111000101010"   // (R[4]) = lhi_const_1_B1 (15914); 
000685  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000686  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000687  1 0  "01010100100001001010101010101011"   // (R[4]) = w32_const_bor_1_B1 (R[4],43691); 

// m1027 subroutine call;   next: m1030 (next offset: 688)

// m1030;   next: m1031 (next offset: 691)
000688  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000689  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000690  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1031 subroutine call;   next: m1034 (next offset: 691)

// m1034;   next: m1035 (next offset: 694)
000691  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000692  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000693  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m1035 subroutine call;   next: m1038 (next offset: 694)

// m1038;   next: m1039 (next offset: 698)
000694  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000695  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000696  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000697  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m1039 subroutine call;   next: m1042 (next offset: 698)

// m1042;   next: m1043 (next offset: 702)
000698  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000699  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000700  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000701  1 0  "01001000000001010100000000000000"   // (R[5]) = const_17_B1 (); 

// m1043 subroutine call;   next: m1046 (next offset: 702)

// m1046;   next: m1047 (next offset: 705)
000702  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000703  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000704  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1047 subroutine call;   next: m1050 (next offset: 705)

// m1050;   next: m1051 (next offset: 709)
000705  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000706  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000707  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000708  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m1051 subroutine call;   next: m1054 (next offset: 709)

// m1054;   next: m1055 (next offset: 712)
000709  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000710  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000711  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m1055 subroutine call;   next: m1058 (next offset: 712)

// m1058;   next: m1059 (next offset: 715)
000712  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000713  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000714  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m1059 subroutine call;   next: m1062 (next offset: 715)

// m1062;   next: m1063 (next offset: 718)
000715  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000716  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000717  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m1063 subroutine call;   next: m1066 (next offset: 718)

// m1066;   next: m1067 (next offset: 721)
000718  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000719  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000720  1 0  "01001000000001000011111110000000"   // (R[4]) = const_25_B1 (); 

// m1067 subroutine call;   next: m952 (next offset: 721)

// m952;   next: m279, jump target: m281 (next offset: 730)
000721  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000722  1 0  "10001000101001100000000000010111"   // (R[6]) = _ls_const_1_B1 (R[5]); 
000723  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000724  1 0  "00000000011001100001100000000001"   // (R[3],) = _pl_1_B1 (R[3],R[6]); 
000725  1 0  "10011000011001100000000000010111"   // (R[6]) = _rs_const_1_B1 (R[3]); 
000726  1 0  "00000000110000000011000000001110"   // (R[6]) = _gt_const_1_B2 (R[6]); 
000727  1 0  "00100000110000000000000000000101"   // () = nez_br_const_1_B1 (R[6],5); 
000728  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000729  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m279;   next: m280 (next offset: 732)
000730  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000731  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m280 subroutine call;   next: m1106 (next offset: 732)

// m1106, jump target: m1070 (next offset: 734)
000732  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000733  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m281;   next: m1070 (next offset: 735)
000734  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1070;   next: m1071 (next offset: 737)
000735  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000736  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m1071 subroutine call;   next: m1107 (next offset: 737)

// m1107, jump target: m293 (next offset: 739)
000737  1 0  "00100100000000000000000001100111"   // () = j_const_1_B1 (103); 
000738  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m855;   next: m856 (next offset: 743)
000739  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000740  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000741  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000742  1 0  "01010000101001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[5],DMb_stat,PM); 

// m856 subroutine call;   next: m859 (next offset: 743)

// m859;   next: m860 (next offset: 747)
000743  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000744  1 0  "01010000100001010000000000000000"   // (R[5],DMb_stat,PM) = load_1_B1 (R[4],DMb_stat,PM); 
000745  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000746  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m860 subroutine call;   next: m1128 (next offset: 747)

// m1128;   next: m1108 (next offset: 747)

// m1108, jump target: m293 (next offset: 749)
000747  1 0  "00100100000000000000000001011101"   // () = j_const_1_B1 (93); 
000748  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m407;   next: m408 (next offset: 751)
000749  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000750  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m408 subroutine call;   next: m411 (next offset: 751)

// m411;   next: m412 (next offset: 754)
000751  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000752  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000753  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m412 subroutine call;   next: m1125 (next offset: 754)

// m1125;   next: m1109 (next offset: 754)

// m1109, jump target: m293 (next offset: 756)
000754  1 0  "00100100000000000000000001010110"   // () = j_const_1_B1 (86); 
000755  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1079;   next: m387, jump target: m132 (next offset: 759)
000756  1 0  "00100001101000000000000000001010"   // () = nez_br_const_1_B1 (R[13],10); 
000757  1 0  "01010100110000110000000000000000"   // R[3] = R[6]; 
000758  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m387;   next: m388 (next offset: 765)
000759  1 0  "01010100110001010000000000000000"   // R[5] = R[6]; 
000760  1 0  "10101000001010111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[11],SP,-4); 
000761  1 0  "10101000001010101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[10],SP,-8); 
000762  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000763  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000764  1 0  "01001000000001000011111110000000"   // (R[4]) = const_25_B1 (); 

// m388 subroutine call;   next: m1092 (next offset: 765)

// m1092;   next: m1093 (next offset: 768)
000765  1 0  "01010000001010111111111111111100"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000766  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000767  1 0  "01010000001010101111111111111000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m132;   next: m1093 (next offset: 768)

// m1093;   next: m319, jump target: m293 (next offset: 771)
000768  1 0  "00100001010000000000000001000111"   // () = nez_br_const_1_B1 (R[10],71); 
000769  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000770  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m319;   next: m143, jump target: m393 (next offset: 777)
000771  1 0  "01001000000001001100000010000000"   // (R[4]) = const_15_B1 (); 
000772  1 0  "00000000100001100010000000000001"   // (R[4],) = _pl_2_B1 (R[6],R[4]); 
000773  1 0  "00000000100010110010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[11]); 
000774  1 0  "00010100100000000000000000001010"   // () = eqz_br_const_1_B1 (R[4],10); 
000775  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000776  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m143;   next: m401, jump target: m293 (next offset: 781)
000777  1 0  "10010101011001000000000000000001"   // (R[4]) = _ne_const_1_B1 (R[11]); 
000778  1 0  "00100000100000000000000000111101"   // () = nez_br_const_1_B1 (R[4],61); 
000779  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000780  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m401;   next: m402 (next offset: 784)
000781  1 0  "01001000000001000000000000000000"   // (R[4]) = const_19_B3 (); 
000782  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000783  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m402 subroutine call;   next: m1094 (next offset: 784)

// m1094;   next: m1095 (next offset: 784)

// m1095, jump target: m293 (next offset: 786)
000784  1 0  "00100100000000000000000000111000"   // () = j_const_1_B1 (56); 
000785  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m393;   next: m394 (next offset: 789)
000786  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000787  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000788  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m394 subroutine call;   next: m397 (next offset: 789)

// m397;   next: m398 (next offset: 792)
000789  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000790  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000791  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m398 subroutine call;   next: m1124 (next offset: 792)

// m1124;   next: m1096 (next offset: 792)

// m1096;   next: m1110 (next offset: 792)

// m1110, jump target: m293 (next offset: 794)
000792  1 0  "00100100000000000000000000110000"   // () = j_const_1_B1 (48); 
000793  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m383;   next: m384 (next offset: 796)
000794  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000795  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m384 subroutine call;   next: m1123 (next offset: 796)

// m1123;   next: m1111 (next offset: 796)

// m1111, jump target: m293 (next offset: 798)
000796  1 0  "00100100000000000000000000101100"   // () = j_const_1_B1 (44); 
000797  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1081;   next: m379, jump target: m293 (next offset: 801)
000798  1 0  "00100001101000000000000000101001"   // () = nez_br_const_1_B1 (R[13],41); 
000799  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000800  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m379;   next: m380 (next offset: 804)
000801  1 0  "01001000000001000011111110000000"   // (R[4]) = const_25_B1 (); 
000802  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000803  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m380 subroutine call;   next: m87 (next offset: 804)

// m87 (next offset: 808)
000804  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000805  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000806  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000807  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1083;   next: m55, jump target: m371 (next offset: 811)
000808  1 0  "00100001110000000000000000010100"   // () = nez_br_const_1_B1 (R[14],20); 
000809  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000810  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m55;   next: m1077, jump target: m1075 (next offset: 815)
000811  1 0  "00000000110010000010000000001110"   // (R[4]) = _gt_1_B1 (R[6],R[8]); 
000812  1 0  "00100000100000000000000000001000"   // () = nez_br_const_1_B1 (R[4],8); 
000813  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000814  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1077;   next: m375, jump target: m293 (next offset: 818)
000815  1 0  "00100001101000000000000000011000"   // () = nez_br_const_1_B1 (R[13],24); 
000816  1 0  "01001000000000110000000000000000"   // (R[3]) = const_19_B3 (); 
000817  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m375;   next: m376 (next offset: 820)
000818  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000819  1 0  "01001000000001000000000000000000"   // (R[4]) = const_19_B3 (); 

// m376 subroutine call;   next: m1087 (next offset: 820)

// m1087;   next: m1088 (next offset: 820)

// m1088, jump target: m293 (next offset: 822)
000820  1 0  "00100100000000000000000000010100"   // () = j_const_1_B1 (20); 
000821  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1075;   next: m63, jump target: m62 (next offset: 825)
000822  1 0  "00100001101000000000000000000010"   // () = nez_br_const_1_B1 (R[13],2); 
000823  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000824  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m63;   next: m66 (next offset: 826)
000825  1 0  "01001000000001010000000000000000"   // (R[5]) = const_19_B3 (); 

// m62;   next: m66 (next offset: 826)

// m66 (next offset: 830)
000826  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000827  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000828  1 0  "01010100101000110000000000000000"   // R[3] = R[5]; 
000829  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 

// m371;   next: m372 (next offset: 832)
000830  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000831  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m372 subroutine call;   next: m53 (next offset: 832)

// m53 (next offset: 836)
000832  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000833  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000834  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000835  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m367;   next: m368 (next offset: 838)
000836  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000837  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m368 subroutine call;   next: m1122 (next offset: 838)

// m1122;   next: m1114 (next offset: 838)

// m1114, jump target: m293 (next offset: 840)
000838  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000839  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m6;   next: m293 (next offset: 841)
000840  1 0  "01001000000000110011111110000000"   // (R[3]) = const_25_B1 (); 

// m293 (next offset: /)
000841  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000842  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000843  1 0  "00001000001000011111111110111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-68,SP,SP); 
000844  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

