
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:50 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_ldexp_ tlx


// m222;   next: m82, jump target: m24 (next offset: 13)
000000  1 0  "00001000001000010000000000101000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (40,SP,SP); 
000001  1 0  "01001000000010000111111111110000"   // (R[8]) = const_5_B1 (); 
000002  1 0  "00000000100010000100000000000011"   // (R[8]) = _ad_2_B1 (R[4],R[8]); 
000003  1 0  "01001000000000110000000110100101"   // (R[3]) = lhi_const_1_B1 (421); 
000004  1 0  "01001000000001111100001011111000"   // (R[7]) = lhi_const_1_B1 (-15624); 
000005  1 0  "10011001000010000000000000010100"   // (R[8]) = _rs_const_1_B1 (R[8]); 
000006  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000007  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 
000008  1 0  "01010100011000110110111000011111"   // (R[3]) = w32_const_bor_1_B1 (R[3],28191); 
000009  1 0  "01010100111001111111001101011001"   // (R[7]) = w32_const_bor_1_B1 (R[7],62297); 
000010  1 0  "00100001000000000000000000100111"   // () = nez_br_const_2_B1 (R[8],39); 
000011  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000012  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 

// m82;   next: m12, jump target: m13 (next offset: 20)
000013  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000014  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000015  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[6]); 
000016  1 0  "00000000101001100011000000001010"   // (R[6]) = _or_1_B1 (R[5],R[6]); 
000017  1 0  "00100000110000000000000000000110"   // () = nez_br_const_2_B1 (R[6],6); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m12 (next offset: 25)
000020  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000021  1 0  "10101000001001001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[4],SP,-48); 
000022  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000023  1 0  "10101000001001011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[5],SP,-44); 
000024  1 0  "00001000001000011111111111011000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-40,SP,SP); 

// m13;   next: m237 (next offset: 25)

// m237;   next: m238 (next offset: 28)
000025  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 
000026  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000027  1 0  "01001000000001100100001101010000"   // (R[6]) = const_4_B1 (); 

// m238 subroutine call;   next: m235 (next offset: 28)

// m235;   next: m242, jump target: m22 (next offset: 39)
000028  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000029  1 0  "01001000000001100111111111110000"   // (R[6]) = const_5_B1 (); 
000030  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_2_B1 (R[4],R[6]); 
000031  1 0  "10011000110001010000000000010100"   // (R[5]) = _rs_const_1_B1 (R[6]); 
000032  1 0  "01001000000001111111111111111111"   // (R[7]) = lhi_const_1_B1 (-1); 
000033  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000034  1 0  "01010100111001110011110010110000"   // (R[7]) = w32_const_bor_1_B1 (R[7],15536); 
000035  1 0  "00000000110001110011100000001100"   // (R[7]) = _ge_1_B1 (R[6],R[7]); 
000036  1 0  "00100000111000000000000000001101"   // () = nez_br_const_1_B1 (R[7],13); 
000037  1 0  "00001000101010001111111111001010"   // (R[8],MC) = _pl_const_2_B1 (R[5]); 
000038  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m242;   next: m243 (next offset: 44)
000039  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000040  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000041  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000042  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000043  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m243 subroutine call;   next: m21 (next offset: 44)

// m21 (next offset: 51)
000044  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000045  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000046  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000047  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000048  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000049  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000050  1 0  "00001000001000011111111111011000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-40,SP,SP); 

// m22;   next: m314 (next offset: 51)

// m314;   next: m26 (next offset: 51)

// m24;   next: m26 (next offset: 51)

// m26;   next: m265, jump target: m250 (next offset: 55)
000051  1 0  "01100101000001110000011111111111"   // (R[7]) = _eq_const_1_B1 (R[8]); 
000052  1 0  "00100000111000000000000001000011"   // () = nez_br_const_1_B1 (R[7],67); 
000053  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000054  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 

// m265;   next: m266 (next offset: 67)
000055  1 0  "01001000000001011000000000000000"   // (R[5]) = const_3_B1 (); 
000056  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_2_B1 (R[4],R[5]); 
000057  1 0  "00000000110010000011100000000001"   // (R[7],) = _pl_1_B1 (R[8],R[6]); 
000058  1 0  "01001000000001000111111000110111"   // (R[4]) = lhi_const_1_B1 (32311); 
000059  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000060  1 0  "01010100100001001110010000111100"   // (R[4]) = w32_const_bor_1_B1 (R[4],58428); 
000061  1 0  "01001000000000111000100000000000"   // (R[3]) = lhi_const_1_B1 (-30720); 
000062  1 0  "00000000100001010011000000001010"   // (R[6]) = _or_1_B1 (R[5],R[4]); 
000063  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000064  1 0  "01010100011001110111010110011100"   // (R[7]) = w32_const_bor_1_B1 (R[3],30108); 
000065  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000066  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m266 subroutine call;   next: m263 (next offset: 67)

// m263;   next: m273, jump target: m34 (next offset: 72)
000067  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000068  1 0  "01110100100001110000011111111110"   // (R[7]) = _gt_const_2_B1 (R[4]); 
000069  1 0  "00100000111000000000000000101100"   // () = nez_br_const_1_B1 (R[7],44); 
000070  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000071  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m273;   next: m41, jump target: m279 (next offset: 80)
000072  1 0  "01001000000000111000000000001111"   // (R[3]) = lhi_const_1_B1 (-32753); 
000073  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000074  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000075  1 0  "00000000011001110011100000000011"   // (R[7]) = _ad_1_B1 (R[7],R[3]); 
000076  1 0  "00000000100000000001100000001110"   // (R[3]) = _gt_const_1_B2 (R[4]); 
000077  1 0  "00100000011000000000000000011110"   // () = nez_br_const_1_B1 (R[3],30); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m41;   next: m309, jump target: m45 (next offset: 84)
000080  1 0  "10000000100010001111111111001010"   // (R[8]) = _le_const_1_B1 (R[4]); 
000081  1 0  "00100001000000000000000000001010"   // () = nez_br_const_1_B1 (R[8],10); 
000082  1 0  "01010000001000111111111111101100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m309;   next: m310 (next offset: 91)
000084  1 0  "00001000100001000000000000110110"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 
000085  1 0  "10001000100001000000000000010100"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000086  1 0  "00000000100001110010000000001010"   // (R[4]) = _or_1_B1 (R[7],R[4]); 
000087  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000088  1 0  "01001000000001100011110010010000"   // (R[6]) = const_1_B1 (); 
000089  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000090  1 0  "01001000000001110000000000000000"   // (R[7]) = const_6_B3 (); 

// m310 subroutine call;   next: m317 (next offset: 91)

// m317, jump target: m320 (next offset: 93)
000091  1 0  "00100100000000000000000000011001"   // () = j_const_1_B1 (25); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m45;   next: m291, jump target: m51 (next offset: 98)
000093  1 0  "01010100000001001100001101010000"   // (R[4]) = const_2_B1 (); 
000094  1 0  "00000000011001000011100000001110"   // (R[7]) = _gt_1_B1 (R[3],R[4]); 
000095  1 0  "00100000111000000000000000000111"   // () = nez_br_const_1_B1 (R[7],7); 
000096  1 0  "01010000001000111111111111011100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000097  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m291;   next: m292 (next offset: 102)
000098  1 0  "00000000011001000011000000001010"   // (R[6]) = _or_1_B1 (R[3],R[4]); 
000099  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000100  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000101  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m292 subroutine call;   next: m315 (next offset: 102)

// m315, jump target: m320 (next offset: 104)
000102  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000103  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m51 (next offset: 109)
000104  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000105  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000106  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000107  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
000108  1 0  "00001000001000011111111111011000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-40,SP,SP); 

// m279, jump target: m320 (next offset: 115)
000109  1 0  "10001000100001000000000000010100"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000110  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000111  1 0  "00000000100001110010000000001010"   // (R[4]) = _or_1_B1 (R[7],R[4]); 
000112  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000113  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000114  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 

// m34;   next: m320 (next offset: 117)
000115  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000116  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 

// m320, jump target: m60 (next offset: 121)
000117  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000118  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000119  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000120  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m250;   next: m251 (next offset: 125)
000121  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000122  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000123  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000124  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m251 subroutine call;   next: m321 (next offset: 125)

// m321;   next: m60 (next offset: 127)
000125  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000126  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m60 (next offset: /)
000127  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000128  1 0  "10101000001001011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[5],SP,-44); 
000129  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000130  1 0  "10101000001001001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[4],SP,-48); 
000131  1 0  "00001000001000011111111111011000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-40,SP,SP); 

