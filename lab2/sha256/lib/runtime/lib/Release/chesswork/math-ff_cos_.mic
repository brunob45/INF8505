
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:44 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_cos_ tlx


// m109;   next: m10, jump target: m7 (next offset: 10)
000000  1 0  "01001000000001110111111111111111"   // (R[7]) = lhi_const_1_B1 (32767); 
000001  1 0  "01010100111001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[7],65535); 
000002  1 0  "01001000000001110011111111101001"   // (R[7]) = lhi_const_1_B1 (16361); 
000003  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[6]); 
000004  1 0  "01010100111001110010000111111011"   // (R[7]) = w32_const_bor_1_B1 (R[7],8699); 
000005  1 0  "00000000110001110011100000010000"   // (R[7]) = _le_1_B1 (R[6],R[7]); 
000006  1 0  "00001000001000010000000000011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (28,SP,SP); 
000007  1 0  "00100000111000000000000001001011"   // () = nez_br_const_1_B1 (R[7],75); 
000008  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000009  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 

// m10;   next: m18, jump target: m112 (next offset: 15)
000010  1 0  "01001000000001110111111111110000"   // (R[7]) = const_2_B1 (); 
000011  1 0  "00000000110001110011100000001100"   // (R[7]) = _ge_1_B1 (R[6],R[7]); 
000012  1 0  "00100000111000000000000000111100"   // () = nez_br_const_1_B1 (R[7],60); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m18;   next: m19 (next offset: 17)
000015  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000016  1 0  "00001000001001101111111111100100"   // (R[6],MC) = _pl_rd_res_reg_const_1_B1 (-28,SP); 

// m19 subroutine call;   next: m78 (next offset: 17)

// m78;   next: m29, jump target: m24 (next offset: 23)
000017  1 0  "01010000001001101111111111101100"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-20,DMb,SP); 
000018  1 0  "01010000001001111111111111110000"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-16,DMb,SP); 
000019  1 0  "00010000011000110000000000000011"   // (R[3]) = _ad_const_1_B1 (R[3]); 
000020  1 0  "00010100011000000000000000101011"   // () = eqz_br_const_1_B1 (R[3],43); 
000021  1 0  "01010000001001011111111111101000"   // (R[5]) = load__pl_rd_res_reg_const_1_B1 (-24,DMb,SP); 
000022  1 0  "01010000001001001111111111100100"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-28,DMb,SP); 

// m29;   next: m39, jump target: m33 (next offset: 27)
000023  1 0  "01100100011010000000000000000001"   // (R[8]) = _eq_const_2_B1 (R[3]); 
000024  1 0  "00100001000000000000000000011001"   // () = nez_br_const_1_B1 (R[8],25); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m39;   next: m49, jump target: m43 (next offset: 31)
000027  1 0  "01100100011000110000000000000010"   // (R[3]) = _eq_const_1_B1 (R[3]); 
000028  1 0  "00100000011000000000000000000111"   // () = nez_br_const_1_B1 (R[3],7); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m49;   next: m50 (next offset: 33)
000031  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000032  1 0  "01010100000010000000000000000001"   // (R[8]) = const_1_B2 (); 

// m50 subroutine call;   next: m129 (next offset: 33)

// m129, jump target: m57 (next offset: 37)
000033  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000034  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000035  1 0  "00100100000000000000000000110110"   // () = j_const_1_B1 (54); 
000036  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m43;   next: m44 (next offset: 39)
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m44 subroutine call;   next: m123 (next offset: 39)

// m123;   next: m124 (next offset: 44)
000039  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000040  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 
000041  1 0  "01001000000001000000000000000000"   // (R[4]) = const_3_B3 (); 
000042  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000043  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m124 subroutine call;   next: m47 (next offset: 44)

// m47 (next offset: 51)
000044  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000045  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000046  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000047  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000048  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000049  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000050  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m33;   next: m34 (next offset: 53)
000051  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000052  1 0  "01010100000010000000000000000001"   // (R[8]) = const_1_B2 (); 

// m34 subroutine call;   next: m117 (next offset: 53)

// m117;   next: m118 (next offset: 58)
000053  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000054  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 
000055  1 0  "01001000000001000000000000000000"   // (R[4]) = const_3_B3 (); 
000056  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000057  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m118 subroutine call;   next: m37 (next offset: 58)

// m37 (next offset: 65)
000058  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000059  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000060  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000061  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000062  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000063  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000064  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m24;   next: m25 (next offset: 67)
000065  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000066  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m25 subroutine call;   next: m27 (next offset: 67)

// m27 (next offset: 74)
000067  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000068  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000069  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000070  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000071  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000072  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000073  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m112;   next: m113 (next offset: 77)
000074  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000075  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000076  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 

// m113 subroutine call;   next: m16 (next offset: 77)

// m16 (next offset: 84)
000077  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000078  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000079  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000080  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000081  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000082  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000083  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m7;   next: m8 (next offset: 87)
000084  1 0  "01001000000001100000000000000000"   // (R[6]) = const_3_B3 (); 
000085  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000086  1 0  "01001000000001110000000000000000"   // (R[7]) = const_3_B3 (); 

// m8 subroutine call;   next: m134 (next offset: 87)

// m134;   next: m57 (next offset: 90)
000087  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000088  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000089  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m57 (next offset: /)
000090  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000091  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000092  1 0  "10101000001001111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[7],SP,-32); 
000093  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

