
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:54 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_sqrt_ tlx


// m414;   next: m12, jump target: m422 (next offset: 7)
000000  1 0  "01001000000001110111111111110000"   // (R[7]) = const_8_B1 (); 
000001  1 0  "00000000100001110011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[7]); 
000002  1 0  "00001000001000010000000000011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (28,SP,SP); 
000003  1 0  "00000000110001110011100000001011"   // (R[7]) = _eq_1_B1 (R[6],R[7]); 
000004  1 0  "00100000111000000000000011000101"   // () = nez_br_const_1_B1 (R[7],197); 
000005  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000006  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 

// m12;   next: m231, jump target: m33 (next offset: 11)
000007  1 0  "00000000100000000011100000001110"   // (R[7]) = _gt_const_1_B2 (R[4]); 
000008  1 0  "00100000111000000000000000100000"   // () = nez_br_const_1_B1 (R[7],32); 
000009  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000010  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m231;   next: m23, jump target: m21 (next offset: 18)
000011  1 0  "01001000000001110111111111111111"   // (R[7]) = lhi_const_1_B1 (32767); 
000012  1 0  "01010100111001111111111111111111"   // (R[7]) = w32_const_bor_1_B1 (R[7],65535); 
000013  1 0  "00000000100001110011100000000011"   // (R[7]) = _ad_2_B1 (R[4],R[7]); 
000014  1 0  "00000000101001110011100000001010"   // (R[7]) = _or_2_B1 (R[7],R[5]); 
000015  1 0  "00010100111000000000000000010100"   // () = eqz_br_const_1_B1 (R[7],20); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23;   next: m439, jump target: m546 (next offset: 22)
000018  1 0  "00000000100000000011100000001100"   // (R[7]) = _ge_const_1_B2 (R[4]); 
000019  1 0  "00100000111000000000000000010101"   // () = nez_br_const_1_B1 (R[7],21); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m439;   next: m440 (next offset: 25)
000022  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000023  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000024  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m440 subroutine call;   next: m449 (next offset: 25)

// m449;   next: m450 (next offset: 30)
000025  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000026  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000027  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000028  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000029  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m450 subroutine call;   next: m29 (next offset: 30)

// m29 (next offset: 37)
000030  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000031  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000032  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000033  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 
000034  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000035  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000036  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m21 (next offset: 42)
000037  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000038  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 
000039  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000040  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000041  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m546;   next: m235 (next offset: 42)

// m33;   next: m235 (next offset: 42)

// m235;   next: m50, jump target: m66 (next offset: 46)
000042  1 0  "10011000100001110000000000010100"   // (R[7]) = _rs_const_5_B1 (R[4]); 
000043  1 0  "00100000111000000000000000011001"   // () = nez_br_const_2_B1 (R[7],25); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50, jump target: m1 (next offset: 48)
000046  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000047  1 0  "01001000000001100000000000010000"   // (R[6]) = const_6_B1 (); 

// m46;   next: m1 (next offset: 52)
000048  1 0  "10011100101000110000000000001011"   // (R[3]) = _rs_const_4_B1 (R[5]); 
000049  1 0  "00001000111001111111111111101011"   // (R[7],MC) = _pl_const_5_B1 (R[7]); 
000050  1 0  "10001000101001010000000000010101"   // (R[5]) = _ls_const_3_B1 (R[5]); 
000051  1 0  "00000000011001000010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[3]); 

// m1;   next: m242 (next offset: 52)

// m242;   next: m63, jump target: m46 (next offset: 55)
000052  1 0  "00010100100000001111111111111010"   // () = eqz_br_const_1_B1 (R[4],-6); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m63, jump target: m2 (next offset: 57)
000055  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000056  1 0  "01001000000000110000000000000000"   // (R[3]) = const_7_B3 (); 

// m59;   next: m2 (next offset: 59)
000057  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_2_B1 (R[4]); 
000058  1 0  "00001000011000110000000000000001"   // (R[3],MC) = _pl_const_2_B1 (R[3]); 

// m2;   next: m251 (next offset: 59)

// m251;   next: m65, jump target: m59 (next offset: 63)
000059  1 0  "00000000100001100100000000000011"   // (R[8]) = _ad_1_B1 (R[4],R[6]); 
000060  1 0  "00010101000000001111111111111011"   // () = eqz_br_const_1_B1 (R[8],-5); 
000061  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000062  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m65;   next: m258 (next offset: 70)
000063  1 0  "01010100000001100000000000100000"   // (R[6]) = const_5_B2 (); 
000064  1 0  "00000000110000110011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[3]); 
000065  1 0  "00000000101001100100000000010111"   // (R[8]) = _rs_1_B1 (R[5],R[6]); 
000066  1 0  "00001000011001101111111111111111"   // (R[6],MC) = _pl_const_3_B1 (R[3]); 
000067  1 0  "00000000100010000010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[8]); 
000068  1 0  "00000000101000110010100000010010"   // (R[5]) = _ls_1_B1 (R[5],R[3]); 
000069  1 0  "00000000111001100011100000011000"   // (R[7],MC) = _mi_1_B1 (R[7],R[6]); 

// m66;   next: m258 (next offset: 70)

// m258;   next: m71, jump target: m72 (next offset: 80)
000070  1 0  "01001000000001100000000000001111"   // (R[6]) = lhi_const_1_B1 (15); 
000071  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000072  1 0  "00000000100001100010000000000011"   // (R[4]) = _ad_2_B1 (R[4],R[6]); 
000073  1 0  "00001000111001101111110000000001"   // (R[6],MC) = _pl_const_4_B1 (R[7]); 
000074  1 0  "01001000000001110000000000010000"   // (R[7]) = const_6_B1 (); 
000075  1 0  "00000000100001110001100000001010"   // (R[3]) = _or_1_B1 (R[4],R[7]); 
000076  1 0  "00010000110001110000000000000001"   // (R[7]) = _ad_const_1_B1 (R[6]); 
000077  1 0  "00010100111000000000000000000111"   // () = eqz_br_const_1_B1 (R[7],7); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m71;   next: m74 (next offset: 86)
000080  1 0  "01001000000001111000000000000000"   // (R[7]) = const_4_B1 (); 
000081  1 0  "00000000101001110011100000000011"   // (R[7]) = _ad_1_B1 (R[5],R[7]); 
000082  1 0  "10011100111001110000000000011111"   // (R[7]) = _rs_const_3_B1 (R[7]); 
000083  1 0  "10001000011001000000000000000001"   // (R[4]) = _ls_const_2_B1 (R[3]); 
000084  1 0  "10001000101001010000000000000001"   // (R[5]) = _ls_const_2_B1 (R[5]); 
000085  1 0  "00000000100001110001100000000001"   // (R[3],) = _pl_1_B1 (R[4],R[7]); 

// m72;   next: m74 (next offset: 86)

// m74;   next: m81 (next offset: 98)
000086  1 0  "01001000000001001000000000000000"   // (R[4]) = const_4_B1 (); 
000087  1 0  "10001000011010000000000000000001"   // (R[8]) = _ls_const_2_B1 (R[3]); 
000088  1 0  "00000000100001010011100000000011"   // (R[7]) = _ad_1_B1 (R[5],R[4]); 
000089  1 0  "10011000110000110000000000000001"   // (R[3]) = _rs_const_1_B1 (R[6]); 
000090  1 0  "10011100111001110000000000011111"   // (R[7]) = _rs_const_3_B1 (R[7]); 
000091  1 0  "00000000111010000101000000000001"   // (R[10],) = _pl_1_B1 (R[8],R[7]); 
000092  1 0  "10001000101001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[5]); 
000093  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000094  1 0  "01001000000001110000000000000000"   // (R[7]) = const_7_B3 (); 
000095  1 0  "01001000000010000000000000100000"   // (R[8]) = const_3_B1 (); 
000096  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 
000097  1 0  "01001000000000110000000000000000"   // (R[3]) = const_7_B3 (); 

// m81;   next: m84, jump target: m85 (next offset: 103)
000098  1 0  "00000000011010000100100000000001"   // (R[9],) = _pl_1_B1 (R[3],R[8]); 
000099  1 0  "00000001001010100101100000001110"   // (R[11]) = _gt_1_B1 (R[9],R[10]); 
000100  1 0  "00100001011000000000000000000100"   // () = nez_br_const_1_B1 (R[11],4); 
000101  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000102  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m84;   next: m267 (next offset: 106)
000103  1 0  "00000000101010000010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[8]); 
000104  1 0  "00000001000010010001100000000001"   // (R[3],) = _pl_1_B1 (R[9],R[8]); 
000105  1 0  "00000001010010010101000000011000"   // (R[10],MC) = _mi_1_B1 (R[10],R[9]); 

// m85;   next: m267 (next offset: 106)

// m267;   next: m544, jump target: m81 (next offset: 113)
000106  1 0  "00000000100001100100100000000011"   // (R[9]) = _ad_1_B1 (R[6],R[4]); 
000107  1 0  "10011101000010000000000000000001"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000108  1 0  "10001001010010100000000000000001"   // (R[10]) = _ls_const_2_B1 (R[10]); 
000109  1 0  "10001000110001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[6]); 
000110  1 0  "00100001000000001111111111110010"   // () = nez_br_const_2_B1 (R[8],-14); 
000111  1 0  "10011101001010010000000000011111"   // (R[9]) = _rs_const_3_B1 (R[9]); 
000112  1 0  "00000001001010100101000000000001"   // (R[10],) = _pl_1_B1 (R[10],R[9]); 

// m544;   next: m278 (next offset: 117)
000113  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000114  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 
000115  1 0  "01001000000010010000000000000000"   // (R[9]) = const_7_B3 (); 
000116  1 0  "01001000000010001000000000000000"   // (R[8]) = const_4_B1 (); 

// m278;   next: m289, jump target: m135 (next offset: 126)
000117  1 0  "00000001000010010101100000000001"   // (R[11],) = _pl_1_B1 (R[9],R[8]); 
000118  1 0  "00000000011010100110000000001011"   // (R[12]) = _eq_2_B1 (R[3],R[10]); 
000119  1 0  "00000001011001100110100000010001"   // (R[13]) = _le_1_B1 (R[11],R[6]); 
000120  1 0  "00000000011010100111000000010011"   // (R[14]) = _lt_1_B1 (R[3],R[10]); 
000121  1 0  "00000001100011010110000000000011"   // (R[12]) = land_1_B1 (R[12],R[13]); 
000122  1 0  "00000001100011100110000000001010"   // (R[12]) = lor_1_B1 (R[14],R[12]); 
000123  1 0  "00010101100000000000000000010100"   // () = eqz_br_const_2_B1 (R[12],20); 
000124  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000125  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m289;   next: m125, jump target: m126 (next offset: 135)
000126  1 0  "00000001000010110100100000000001"   // (R[9],) = _pl_1_B1 (R[11],R[8]); 
000127  1 0  "00000000100010110110100000000011"   // (R[13]) = _ad_1_B1 (R[11],R[4]); 
000128  1 0  "00000000100010010110000000000011"   // (R[12]) = _ad_1_B1 (R[9],R[4]); 
000129  1 0  "00000000100011010110100000001011"   // (R[13]) = _eq_1_B1 (R[13],R[4]); 
000130  1 0  "00000001100000000110000000001011"   // (R[12]) = eqz_1_B1 (R[12]); 
000131  1 0  "00000001100011010110100000000011"   // (R[13]) = land_1_B1 (R[13],R[12]); 
000132  1 0  "00010101101000000000000000000010"   // () = eqz_br_const_2_B1 (R[13],2); 
000133  1 0  "01010100011011000000000000000000"   // R[12] = R[3]; 
000134  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m125;   next: m128 (next offset: 136)
000135  1 0  "00001000011011000000000000000001"   // (R[12],MC) = _pl_const_2_B1 (R[3]); 

// m126;   next: m128 (next offset: 136)

// m128;   next: m131, jump target: m132 (next offset: 142)
000136  1 0  "00000001010000110101000000011000"   // (R[10],MC) = _mi_1_B1 (R[10],R[3]); 
000137  1 0  "01010101100000110000000000000000"   // R[3] = R[12]; 
000138  1 0  "00000000110010110110000000001101"   // (R[12]) = _ge_1_B1 (R[6],R[11]); 
000139  1 0  "00100001100000000000000000000010"   // () = nez_br_const_1_B1 (R[12],2); 
000140  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000141  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m131;   next: m134 (next offset: 143)
000142  1 0  "00001001010010101111111111111111"   // (R[10],MC) = _pl_const_3_B1 (R[10]); 

// m132;   next: m134 (next offset: 143)

// m134;   next: m298 (next offset: 145)
000143  1 0  "00000000101010000010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[8]); 
000144  1 0  "00000000110010110011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[11]); 

// m135;   next: m298 (next offset: 145)

// m298;   next: m302, jump target: m278 (next offset: 152)
000145  1 0  "00000000100001100101100000000011"   // (R[11]) = _ad_1_B1 (R[6],R[4]); 
000146  1 0  "10011101000010000000000000000001"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000147  1 0  "10001001010010100000000000000001"   // (R[10]) = _ls_const_2_B1 (R[10]); 
000148  1 0  "10001000110001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[6]); 
000149  1 0  "00100001000000001111111111011110"   // () = nez_br_const_2_B1 (R[8],-34); 
000150  1 0  "10011101011010110000000000011111"   // (R[11]) = _rs_const_3_B1 (R[11]); 
000151  1 0  "00000001010010110101000000000001"   // (R[10],) = _pl_1_B1 (R[10],R[11]); 

// m302;   next: m377, jump target: m172 (next offset: 156)
000152  1 0  "00000000110010100010000000001010"   // (R[4]) = _or_2_B1 (R[10],R[6]); 
000153  1 0  "00010100100000000000000000100001"   // () = eqz_br_const_1_B1 (R[4],33); 
000154  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000155  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m377;   next: m378 (next offset: 161)
000156  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000157  1 0  "01001000000001100011111111110000"   // (R[6]) = const_2_B1 (); 
000158  1 0  "01001000000001000011111111110000"   // (R[4]) = const_2_B1 (); 
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 

// m378 subroutine call;   next: m390 (next offset: 161)

// m390;   next: m151, jump target: m170 (next offset: 164)
000161  1 0  "00010100011000000000000000011001"   // () = eqz_br_const_1_B1 (R[3],25); 
000162  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000163  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m151;   next: m381, jump target: m154 (next offset: 169)
000164  1 0  "01100100101001001111111111111111"   // (R[4]) = _eq_const_1_B1 (R[5]); 
000165  1 0  "01001000000001100011111111110000"   // (R[6]) = const_2_B1 (); 
000166  1 0  "00100000100000000000000000010011"   // () = nez_br_const_1_B1 (R[4],19); 
000167  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_2_B1 (R[7]); 
000168  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 

// m381;   next: m382 (next offset: 173)
000169  1 0  "10101000001001111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[7],SP,-28); 
000170  1 0  "01001000000001000011111111110000"   // (R[4]) = const_2_B1 (); 
000171  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000172  1 0  "01001000000001110000000000000000"   // (R[7]) = const_7_B3 (); 

// m382 subroutine call;   next: m393 (next offset: 173)

// m393;   next: m167, jump target: m160 (next offset: 176)
000173  1 0  "00100000011000000000000000000100"   // () = nez_br_const_2_B1 (R[3],4); 
000174  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000175  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m167, jump target: m548 (next offset: 179)
000176  1 0  "00010000101001110000000000000001"   // (R[7]) = _ad_const_1_B1 (R[5]); 
000177  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000178  1 0  "00000000101001110010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[7]); 

// m160;   next: m163, jump target: m164 (next offset: 183)
000179  1 0  "10010100101001111111111111111110"   // (R[7]) = _ne_const_2_B1 (R[5]); 
000180  1 0  "00100000111000000000000000000011"   // () = nez_br_const_1_B1 (R[7],3); 
000181  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000182  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m163;   next: m166 (next offset: 185)
000183  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000184  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 

// m164;   next: m166 (next offset: 185)

// m166, jump target: m548 (next offset: 187)
000185  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000186  1 0  "00001000101001010000000000000010"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 

// m154;   next: m548 (next offset: 188)
000187  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 

// m548;   next: m549 (next offset: 188)

// m170;   next: m549 (next offset: 188)

// m549;   next: m174 (next offset: 188)

// m172;   next: m174 (next offset: 188)

// m174;   next: m177, jump target: m178 (next offset: 198)
000188  1 0  "10011100101001010000000000000001"   // (R[5]) = _rs_const_2_B1 (R[5]); 
000189  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000190  1 0  "00010000111001100000000000000001"   // (R[6]) = _ad_const_1_B1 (R[7]); 
000191  1 0  "10011000111001110000000000000001"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000192  1 0  "10010100110001100000000000000001"   // (R[6]) = _ne_const_1_B1 (R[6]); 
000193  1 0  "01001000000001000011111111100000"   // (R[4]) = const_1_B1 (); 
000194  1 0  "01001000000000111000000000000000"   // (R[3]) = const_4_B1 (); 
000195  1 0  "00100000110000000000000000000010"   // () = nez_br_const_1_B1 (R[6],2); 
000196  1 0  "00000000100001110011100000000001"   // (R[7],) = _pl_2_B1 (R[7],R[4]); 
000197  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m177;   next: m460 (next offset: 199)
000198  1 0  "00000000011001010010100000001010"   // (R[5]) = _or_1_B1 (R[5],R[3]); 

// m178;   next: m460 (next offset: 199)

// m460, jump target: m183 (next offset: 203)
000199  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000200  1 0  "10001000100001000000000000010100"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000201  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000202  1 0  "00000000100001110011100000000001"   // (R[7],) = _pl_1_B1 (R[7],R[4]); 

// m422;   next: m423 (next offset: 208)
000203  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000204  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000205  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m423 subroutine call;   next: m432 (next offset: 208)

// m432;   next: m433 (next offset: 213)
000208  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000209  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000210  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000211  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000212  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m433 subroutine call;   next: m550 (next offset: 213)

// m550;   next: m183 (next offset: 216)
000213  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000214  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000215  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 

// m183 (next offset: /)
000216  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000217  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000218  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000219  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000220  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

