
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:44 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_kernel_sinf_ tlx


// m3;   next: m45, jump target: m15 (next offset: 11)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "00001000001000010000000000011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (28,SP,SP); 
000002  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000004  1 0  "01001000000001110011001000000000"   // (R[7]) = const_2_B1 (); 
000005  1 0  "00000000011001110001100000001100"   // (R[3]) = _ge_1_B1 (R[3],R[7]); 
000006  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000007  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000008  1 0  "00100000011000000000000000001011"   // () = nez_br_const_2_B1 (R[3],11); 
000009  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000010  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 

// m45;   next: m46 (next offset: 13)
000011  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46 subroutine call;   next: m43 (next offset: 13)

// m43;   next: m12, jump target: m13 (next offset: 16)
000013  1 0  "00100000011000000000000000000110"   // () = nez_br_const_1_B1 (R[3],6); 
000014  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m12 (next offset: 21)
000016  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000017  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000018  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000019  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m13;   next: m160 (next offset: 21)

// m160;   next: m60 (next offset: 21)

// m15;   next: m60 (next offset: 21)

// m60;   next: m61 (next offset: 23)
000021  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000022  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m61 subroutine call;   next: m64 (next offset: 23)

// m64;   next: m65 (next offset: 27)
000023  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000024  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000025  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000026  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m65 subroutine call;   next: m68 (next offset: 27)

// m68;   next: m69 (next offset: 32)
000027  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000028  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000029  1 0  "01001000000001010010111100101110"   // (R[5]) = lhi_const_1_B1 (12078); 
000030  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000031  1 0  "01010100101001011100100111010011"   // (R[5]) = w32_const_bor_1_B1 (R[5],51667); 

// m69 subroutine call;   next: m72 (next offset: 32)

// m72;   next: m73 (next offset: 36)
000032  1 0  "01001000000001001011001011010111"   // (R[4]) = lhi_const_1_B1 (-19753); 
000033  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000034  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000035  1 0  "01010100100001000010111100110100"   // (R[4]) = w32_const_bor_1_B1 (R[4],12084); 

// m73 subroutine call;   next: m76 (next offset: 36)

// m76;   next: m77 (next offset: 39)
000036  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m77 subroutine call;   next: m80 (next offset: 39)

// m80;   next: m81 (next offset: 43)
000039  1 0  "01001000000001000011011000111000"   // (R[4]) = lhi_const_1_B1 (13880); 
000040  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000041  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000042  1 0  "01010100100001001110111100011011"   // (R[4]) = w32_const_bor_1_B1 (R[4],61211); 

// m81 subroutine call;   next: m84 (next offset: 43)

// m84;   next: m85 (next offset: 46)
000043  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000044  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000045  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m85 subroutine call;   next: m88 (next offset: 46)

// m88;   next: m89 (next offset: 50)
000046  1 0  "01001000000001001011100101010000"   // (R[4]) = lhi_const_1_B1 (-18096); 
000047  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01010100100001000000110100000001"   // (R[4]) = w32_const_bor_1_B1 (R[4],3329); 

// m89 subroutine call;   next: m92 (next offset: 50)

// m92;   next: m93 (next offset: 53)
000050  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000051  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000052  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m93 subroutine call;   next: m96 (next offset: 53)

// m96;   next: m97 (next offset: 57)
000053  1 0  "01001000000001000011110000001000"   // (R[4]) = lhi_const_1_B1 (15368); 
000054  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000055  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000056  1 0  "01010100100001001000100010001001"   // (R[4]) = w32_const_bor_1_B1 (R[4],34953); 

// m97 subroutine call;   next: m58 (next offset: 57)

// m58;   next: m128, jump target: m104 (next offset: 64)
000057  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000058  1 0  "01001000000001001011111000101010"   // (R[4]) = lhi_const_1_B1 (-16854); 
000059  1 0  "01010100100000111010101010101011"   // (R[3]) = w32_const_bor_1_B1 (R[4],43691); 
000060  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000061  1 0  "00010100100000000000000000011110"   // () = eqz_br_const_1_B1 (R[4],30); 
000062  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m128;   next: m129 (next offset: 68)
000064  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000065  1 0  "01001000000001000011111100000000"   // (R[4]) = const_1_B1 (); 
000066  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000067  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m129 subroutine call;   next: m132 (next offset: 68)

// m132;   next: m133 (next offset: 72)
000068  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000069  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000070  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000071  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m133 subroutine call;   next: m136 (next offset: 72)

// m136;   next: m137 (next offset: 75)
000072  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000073  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000074  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m137 subroutine call;   next: m140 (next offset: 75)

// m140;   next: m141 (next offset: 78)
000075  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000076  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000077  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m141 subroutine call;   next: m144 (next offset: 78)

// m144;   next: m145 (next offset: 81)
000078  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000079  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000080  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m145 subroutine call;   next: m148 (next offset: 81)

// m148;   next: m149 (next offset: 85)
000081  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000082  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000083  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000084  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m149 subroutine call;   next: m152 (next offset: 85)

// m152;   next: m153 (next offset: 88)
000085  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000086  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000087  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m153 subroutine call;   next: m156 (next offset: 88)

// m156;   next: m157 (next offset: 91)
000088  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000089  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000090  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m157 subroutine call;   next: m161 (next offset: 91)

// m161, jump target: m24 (next offset: 93)
000091  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m104;   next: m105 (next offset: 97)
000093  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000094  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000095  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000096  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m105 subroutine call;   next: m108 (next offset: 97)

// m108;   next: m109 (next offset: 100)
000097  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000098  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000099  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m109 subroutine call;   next: m112 (next offset: 100)

// m112;   next: m113 (next offset: 103)
000100  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000101  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000102  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m113 subroutine call;   next: m116 (next offset: 103)

// m116;   next: m117 (next offset: 106)
000103  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000104  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000105  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m117 subroutine call;   next: m162 (next offset: 106)

// m162;   next: m24 (next offset: 106)

// m24 (next offset: /)
000106  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000107  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000108  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 
000109  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

