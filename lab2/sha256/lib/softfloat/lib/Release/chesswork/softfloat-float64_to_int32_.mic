
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:22 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float64_to_int32_ tlx


// m4;   next: m146, jump target: m8 (next offset: 12)
000000  1 0  "10011100100001100000000000010100"   // (R[6]) = _rs_const_1_B1 (R[4]); 
000001  1 0  "00010000110010000000011111111111"   // (R[8]) = _ad_const_2_B1 (R[6]); 
000002  1 0  "01001000000000110000000000001111"   // (R[3]) = lhi_const_1_B1 (15); 
000003  1 0  "00001001000001111111101111101101"   // (R[7],MC) = _pl_const_2_B1 (R[8]); 
000004  1 0  "10011100100001100000000000011111"   // (R[6]) = _rs_const_2_B1 (R[4]); 
000005  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000006  1 0  "00000000011001000010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[3]); 
000007  1 0  "00000000111000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[7]); 
000008  1 0  "00000000000001110100100000011000"   // (R[9],MC) = _mi_const_1_B1 (R[7]); 
000009  1 0  "00100001010000000000000000001110"   // () = nez_br_const_2_B1 (R[10],14); 
000010  1 0  "01001000000000110000000000010000"   // (R[3]) = const_3_B1 (); 
000011  1 0  "00000000011001000001100000001010"   // (R[3]) = _or_3_B1 (R[4],R[3]); 

// m146;   next: m45, jump target: m44 (next offset: 16)
000012  1 0  "10001101000010100000001111111110"   // (R[10]) = _lt_const_2_B1 (R[8]); 
000013  1 0  "00100001010000000000000000000110"   // () = nez_br_const_2_B1 (R[10],6); 
000014  1 0  "00000000101000000010100000010101"   // (R[5]) = nez_1_B1 (R[5]); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m45, jump target: m52 (next offset: 21)
000016  1 0  "00010000111001000000000000011111"   // (R[4]) = _ad_const_1_B1 (R[7]); 
000017  1 0  "00000000011001000010000000010010"   // (R[4]) = _ls_1_B1 (R[3],R[4]); 
000018  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[5]); 
000019  1 0  "00100100000000000000000000100000"   // () = j_const_1_B1 (32); 
000020  1 0  "00000000011010010001100000010111"   // (R[3]) = _rs_1_B1 (R[3],R[9]); 

// m44, jump target: m52 (next offset: 25)
000021  1 0  "00000000100010000001100000001010"   // (R[3]) = _or_2_B1 (R[8],R[4]); 
000022  1 0  "00000000011001010010000000001010"   // (R[4]) = _or_1_B1 (R[3],R[5]); 
000023  1 0  "00100100000000000000000000011100"   // () = j_const_1_B1 (28); 
000024  1 0  "01001000000000110000000000000000"   // (R[3]) = const_2_B3 (); 

// m8;   next: m111, jump target: m25 (next offset: 29)
000025  1 0  "10000001000010100000010000011110"   // (R[10]) = _le_const_1_B1 (R[8]); 
000026  1 0  "00100001010000000000000000001010"   // () = nez_br_const_2_B1 (R[10],10); 
000027  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m111;   next: m21, jump target: m1 (next offset: 36)
000029  1 0  "00000000100001010001100000001010"   // (R[3]) = _or_2_B1 (R[4],R[5]); 
000030  1 0  "01100101000001010000011111111111"   // (R[5]) = _eq_const_1_B1 (R[8]); 
000031  1 0  "00000000011000000001100000010101"   // (R[3]) = nez_1_B1 (R[3]); 
000032  1 0  "00000000011001010001100000000011"   // (R[3]) = land_1_B1 (R[5],R[3]); 
000033  1 0  "00010100011000000000000000100111"   // () = eqz_br_const_1_B1 (R[3],39); 
000034  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000035  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m21, jump target: m1 (next offset: 38)
000036  1 0  "00100100000000000000000000100101"   // () = j_const_1_B1 (37); 
000037  1 0  "01001000000001100000000000000000"   // (R[6]) = const_2_B3 (); 

// m25;   next: m115 (next offset: 38)

// m115;   next: m31, jump target: m30 (next offset: 41)
000038  1 0  "00010100111000000000000000000111"   // () = eqz_br_const_2_B1 (R[7],7); 
000039  1 0  "00000000101001110010000000010010"   // (R[4]) = _ls_1_B1 (R[5],R[7]); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m31, jump target: m33 (next offset: 47)
000041  1 0  "00010001001010000000000000011111"   // (R[8]) = _ad_const_1_B1 (R[9]); 
000042  1 0  "00000000011001110001100000010010"   // (R[3]) = _ls_1_B1 (R[3],R[7]); 
000043  1 0  "00000000101010000010100000010111"   // (R[5]) = _rs_1_B1 (R[5],R[8]); 
000044  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_2_B1 (R[3],R[5]); 
000045  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000046  1 0  "01001000000001011000000000000000"   // (R[5]) = const_4_B1 (); 

// m30;   next: m33 (next offset: 48)
000047  1 0  "01001000000001011000000000000000"   // (R[5]) = const_4_B1 (); 

// m33;   next: m38, jump target: m1 (next offset: 52)
000048  1 0  "00000000011001010011100000001111"   // (R[7]) = _gt_1_B1 (R[3],R[5]); 
000049  1 0  "00100000111000000000000000010111"   // () = nez_br_const_2_B1 (R[7],23); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m38;   next: m52 (next offset: 52)

// m52;   next: m125, jump target: m62 (next offset: 56)
000052  1 0  "00000000100000000011100000001100"   // (R[7]) = _ge_const_1_B2 (R[4]); 
000053  1 0  "00100000111000000000000000000111"   // () = nez_br_const_2_B1 (R[7],7); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m125;   next: m59, jump target: m60 (next offset: 60)
000056  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000057  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000058  1 0  "00001000011000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m59;   next: m162 (next offset: 62)
000060  1 0  "00001000000001001111111111111110"   // (R[4]) = const_1_B1 (); 
000061  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[3],R[4]); 

// m60;   next: m162 (next offset: 62)

// m162;   next: m128 (next offset: 62)

// m62;   next: m128 (next offset: 62)

// m128;   next: m67, jump target: m68 (next offset: 65)
000062  1 0  "00010100110000000000000000000010"   // () = eqz_br_const_2_B1 (R[6],2); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m67;   next: m140 (next offset: 66)
000065  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 

// m68;   next: m140 (next offset: 66)

// m140;   next: m163, jump target: m97 (next offset: 74)
000066  1 0  "00000000011000000010000000010011"   // (R[4]) = _lt_const_1_B2 (R[3]); 
000067  1 0  "00000000100001100011100000011010"   // (R[7]) = _er_1_B1 (R[6],R[4]); 
000068  1 0  "00000000011000000010000000010101"   // (R[4]) = nez_1_B1 (R[3]); 
000069  1 0  "00000000111000000011100000010101"   // (R[7]) = nez_1_B1 (R[7]); 
000070  1 0  "00000000100001110010000000000011"   // (R[4]) = land_1_B1 (R[7],R[4]); 
000071  1 0  "00010100100000000000000000001010"   // () = eqz_br_const_1_B1 (R[4],10); 
000072  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000073  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m163;   next: m1 (next offset: 74)

// m1;   next: m143 (next offset: 74)

// m143;   next: m93, jump target: m92 (next offset: 77)
000074  1 0  "00100000110000000000000000000100"   // () = nez_br_const_1_B1 (R[6],4); 
000075  1 0  "01001000000000111000000000000000"   // (R[3]) = const_4_B1 (); 
000076  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m93 (next offset: 80)
000077  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000078  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000079  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 

// m92;   next: m96 (next offset: 80)

// m96 (next offset: 83)
000080  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000081  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000082  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m97;   next: m100 (next offset: 83)

// m100 (next offset: /)
000083  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000084  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000085  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

