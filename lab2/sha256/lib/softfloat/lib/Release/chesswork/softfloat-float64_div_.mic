
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:33 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float64_div_ tlx


// m253;   next: m232, jump target: m40 (next offset: 28)
000000  1 0  "00001000001000010000000001011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (92,SP,SP); 
000001  1 0  "10011100100010000000000000011111"   // (R[8]) = _rs_const_7_B1 (R[4]); 
000002  1 0  "10011100110010010000000000011111"   // (R[9]) = _rs_const_7_B1 (R[6]); 
000003  1 0  "01001000000000110000000000001111"   // (R[3]) = lhi_const_1_B1 (15); 
000004  1 0  "00000001000010010100000000011010"   // (R[8]) = _er_1_B1 (R[8],R[9]); 
000005  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000006  1 0  "00000000011001000101000000000011"   // (R[10]) = _ad_1_B1 (R[4],R[3]); 
000007  1 0  "10011100100010010000000000010100"   // (R[9]) = _rs_const_6_B1 (R[4]); 
000008  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000009  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000010  1 0  "00000000101010100010100000001010"   // (R[5]) = _or_1_B1 (R[10],R[5]); 
000011  1 0  "00010001001011000000011111111111"   // (R[12]) = _ad_const_2_B1 (R[9]); 
000012  1 0  "10011100110010110000000000010100"   // (R[11]) = _rs_const_6_B1 (R[6]); 
000013  1 0  "10001001000010000000000000011111"   // (R[8]) = _ls_const_3_B1 (R[8]); 
000014  1 0  "10101000001010101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[10],SP,-16); 
000015  1 0  "00010001011010100000011111111111"   // (R[10]) = _ad_const_2_B1 (R[11]); 
000016  1 0  "10101000001010001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[8],SP,-24); 
000017  1 0  "10101000001011001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[12],SP,-28); 
000018  1 0  "01001000000011010111111111110000"   // (R[13]) = const_5_B1 (); 
000019  1 0  "00000000011001100100100000000011"   // (R[9]) = _ad_1_B1 (R[6],R[3]); 
000020  1 0  "10010101010010110000011111111111"   // (R[11]) = _ne_const_1_B1 (R[10]); 
000021  1 0  "10010101100011000000011111111111"   // (R[12]) = _ne_const_1_B1 (R[12]); 
000022  1 0  "00000001000011010100000000000001"   // (R[8],MC) = _pl_4_B1 (R[8],R[13]); 
000023  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000024  1 0  "10101000001000101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[2],SP,-36); 
000025  1 0  "00100001100000000000000000100110"   // () = nez_br_const_1_B1 (R[12],38); 
000026  1 0  "01010100111000110000000000000000"   // R[3] = R[7]; 
000027  1 0  "00000000011010010011100000001010"   // (R[7]) = _or_1_B1 (R[9],R[3]); 

// m232;   next: m14, jump target: m18 (next offset: 32)
000028  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000029  1 0  "00010100101000000000000000001011"   // () = br_eqz_const_1_B1 (R[5],11); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m14;   next: m15 (next offset: 35)
000032  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 
000033  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000034  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m15 subroutine call;   next: m17 (next offset: 35)

// m17 (next offset: 42)
000035  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000036  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000037  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000038  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000039  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000040  1 0  "10101000001001001111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[4],SP,-96); 
000041  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m18;   next: m488 (next offset: 42)

// m488;   next: m485, jump target: m35 (next offset: 45)
000042  1 0  "00100001011000000000000000001111"   // () = nez_br_const_1_B1 (R[11],15); 
000043  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m485;   next: m28, jump target: m32 (next offset: 48)
000045  1 0  "00010100111000000000000000001010"   // () = br_eqz_const_1_B1 (R[7],10); 
000046  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m28;   next: m29 (next offset: 50)
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 

// m29 subroutine call;   next: m31 (next offset: 50)

// m31 (next offset: 57)
000050  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000051  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000052  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000053  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000054  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000055  1 0  "10101000001001001111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[4],SP,-96); 
000056  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m32, jump target: m1 (next offset: 59)
000057  1 0  "00100100000000000000000000101011"   // () = j_const_1_B1 (43); 
000058  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m35;   next: m39 (next offset: 62)
000059  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000060  1 0  "10101000001010001111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[8],SP,-100); 
000061  1 0  "10101000001000001111111110100000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-96]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-96); 

// m39 (next offset: 65)
000062  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000063  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m40;   next: m489 (next offset: 65)

// m489;   next: m486, jump target: m59 (next offset: 68)
000065  1 0  "00100001011000000000000000010011"   // () = nez_br_const_1_B1 (R[11],19); 
000066  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m486;   next: m50, jump target: m54 (next offset: 71)
000068  1 0  "00010100111000000000000000001010"   // () = br_eqz_const_1_B1 (R[7],10); 
000069  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000070  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50;   next: m51 (next offset: 73)
000071  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000072  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 

// m51 subroutine call;   next: m53 (next offset: 73)

// m53 (next offset: 80)
000073  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000074  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000075  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000076  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000077  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000078  1 0  "10101000001001001111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[4],SP,-96); 
000079  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m54;   next: m58 (next offset: 83)
000080  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000081  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000082  1 0  "10101000001000001111111110100000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-96]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-96); 

// m58 (next offset: 86)
000083  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000084  1 0  "10101000001001011111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[5],SP,-100); 
000085  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m59;   next: m257 (next offset: 86)

// m257;   next: m260, jump target: m85 (next offset: 89)
000086  1 0  "00100001010000000000000000100011"   // () = nez_br_const_2_B1 (R[10],35); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m260;   next: m265, jump target: m81 (next offset: 92)
000089  1 0  "00100000111000000000000000010101"   // () = nez_br_const_2_B1 (R[7],21); 
000090  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m265;   next: m492, jump target: m76 (next offset: 100)
000092  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000093  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000094  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[5],R[4]); 
000095  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000096  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[5]); 
000097  1 0  "00100000100000000000000000001001"   // () = nez_br_const_2_B1 (R[4],9); 
000098  1 0  "10101000001010001111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[8],SP,-100); 
000099  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m492;   next: m1 (next offset: 101)
000100  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m1;   next: m75 (next offset: 101)

// m75 (next offset: 108)
000101  1 0  "00001000000001011111111111111111"   // (R[5]) = const_4_B1 (); 
000102  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000103  1 0  "10101000001001011111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[5],SP,-96); 
000104  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000105  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000106  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000107  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m76;   next: m80 (next offset: 108)

// m80 (next offset: 112)
000108  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000109  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000110  1 0  "10101000001000001111111110100000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-96]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-96); 
000111  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m81;   next: m83 (next offset: 112)

// m83;   next: m84 (next offset: 118)
000112  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000113  1 0  "01010101010001100000000000000000"   // R[6] = R[10]; 
000114  1 0  "01010101001001110000000000000000"   // R[7] = R[9]; 
000115  1 0  "01010100101010000000000000000000"   // R[8] = R[5]; 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 

// m84 subroutine call;   next: m490 (next offset: 118)

// m490, jump target: m268 (next offset: 123)
000118  1 0  "01010100110010100000000000000000"   // R[10] = R[6]; 
000119  1 0  "01010100111010010000000000000000"   // R[9] = R[7]; 
000120  1 0  "01010101000000110000000000000000"   // R[3] = R[8]; 
000121  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000122  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m85;   next: m268 (next offset: 124)
000123  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m268;   next: m271, jump target: m102 (next offset: 129)
000124  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000125  1 0  "01010000001010001111111111101100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000126  1 0  "00100000110000000000000000010000"   // () = nez_br_const_2_B1 (R[6],16); 
000127  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000128  1 0  "10101000001010011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[9],SP,-16); 

// m271;   next: m97, jump target: m98 (next offset: 132)
000129  1 0  "00100000100000000000000000001000"   // () = nez_br_const_2_B1 (R[4],8); 
000130  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 
000131  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 

// m97 (next offset: 139)
000132  1 0  "10101000001000001111111110100000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-96]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-96); 
000133  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000134  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000135  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000136  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000137  1 0  "10101000001001011111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[5],SP,-100); 
000138  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

// m98;   next: m100 (next offset: 139)

// m100;   next: m101 (next offset: 142)
000139  1 0  "01010101000001010000000000000000"   // R[5] = R[8]; 
000140  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000141  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 

// m101 subroutine call;   next: m491 (next offset: 142)

// m491, jump target: m293 (next offset: 144)
000142  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000143  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m102;   next: m293 (next offset: 146)
000144  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000145  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 

// m293;   next: m151, jump target: m152 (next offset: 173)
000146  1 0  "01001000000000110000000000010000"   // (R[3]) = const_2_B1 (); 
000147  1 0  "01010000001010011111111111110000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000148  1 0  "00000000011001110011100000001010"   // (R[7]) = _or_3_B1 (R[7],R[3]); 
000149  1 0  "00000000011010010101000000001010"   // (R[10]) = _or_3_B1 (R[9],R[3]); 
000150  1 0  "10001000111010010000000000001011"   // (R[9]) = _ls_const_4_B1 (R[7]); 
000151  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000152  1 0  "10001001010001110000000000001011"   // (R[7]) = _ls_const_4_B1 (R[10]); 
000153  1 0  "10001000100010100000000000001011"   // (R[10]) = _ls_const_4_B1 (R[4]); 
000154  1 0  "10011101000000110000000000010101"   // (R[3]) = _rs_const_5_B1 (R[8]); 
000155  1 0  "10011100100001010000000000010101"   // (R[5]) = _rs_const_5_B1 (R[4]); 
000156  1 0  "00000000011010010010000000001010"   // (R[4]) = _or_1_B1 (R[9],R[3]); 
000157  1 0  "00000000101001110001100000001010"   // (R[3]) = _or_1_B1 (R[7],R[5]); 
000158  1 0  "10001001000001010000000000001011"   // (R[5]) = _ls_const_4_B1 (R[8]); 
000159  1 0  "01010000001001111111111111100100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000160  1 0  "00000000110001110100000000011000"   // (R[8],MC) = _mi_1_B1 (R[6],R[7]); 
000161  1 0  "00001001000010010000001111111101"   // (R[9],MC) = _pl_const_3_B1 (R[8]); 
000162  1 0  "00000000011001000011000000001011"   // (R[6]) = _eq_1_B1 (R[3],R[4]); 
000163  1 0  "00000001010001010011100000010001"   // (R[7]) = _le_1_B1 (R[10],R[5]); 
000164  1 0  "00000000011001000100000000010100"   // (R[8]) = _lt_1_B1 (R[3],R[4]); 
000165  1 0  "00000000110001110011000000000011"   // (R[6]) = land_1_B1 (R[6],R[7]); 
000166  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000167  1 0  "00000000110010000011000000001010"   // (R[6]) = lor_1_B1 (R[8],R[6]); 
000168  1 0  "10101000001010101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[10],SP,-16); 
000169  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000170  1 0  "00010100110000000000000000001010"   // () = eqz_br_const_1_B1 (R[6],10); 
000171  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
000172  1 0  "10101000001010011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[9],SP,-20); 

// m151;   next: m154 (next offset: 182)
000173  1 0  "10001000100001100000000000011111"   // (R[6]) = _ls_const_3_B1 (R[4]); 
000174  1 0  "10011100101001010000000000000001"   // (R[5]) = _rs_const_4_B1 (R[5]); 
000175  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000176  1 0  "10011100100001000000000000000001"   // (R[4]) = _rs_const_4_B1 (R[4]); 
000177  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_2_B1 (R[7]); 
000178  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_1_B1 (R[6],R[5]); 
000179  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000180  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
000181  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 

// m152;   next: m154 (next offset: 182)

// m154;   next: m155 (next offset: 184)
000182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000183  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m155 subroutine call;   next: m347 (next offset: 184)

// m347;   next: m348 (next offset: 196)
000184  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000185  1 0  "00010000110001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[6]); 
000186  1 0  "00010000011001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[3]); 
000187  1 0  "10011100011001110000000000010000"   // (R[7]) = _rs_const_3_B1 (R[3]); 
000188  1 0  "10011100110001100000000000010000"   // (R[6]) = _rs_const_3_B1 (R[6]); 
000189  1 0  "10101000001000111111111110111100"   // (DMb[-68]) = store__pl_rd_res_reg_const_1_B1 (R[3],-68,DMb[-68],SP); 
000190  1 0  "01111100001001111111111111011010"   // (__spill_DMh[-38]) = stack_store_bndl_B2 (R[7],SP,-38); 
000191  1 0  "01111100001001011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[5],SP,-40); 
000192  1 0  "01111100001001101111111111010110"   // (__spill_DMh[-42]) = stack_store_bndl_B2 (R[6],SP,-42); 
000193  1 0  "01111100001001001111111111010100"   // (__spill_DMh[-44]) = stack_store_bndl_B2 (R[4],SP,-44); 
000194  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000195  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m348 subroutine call;   next: m351 (next offset: 196)

// m351;   next: m352 (next offset: 200)
000196  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 
000197  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000199  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m352 subroutine call;   next: m355 (next offset: 200)

// m355;   next: m356 (next offset: 204)
000200  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000201  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000202  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000203  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m356 subroutine call;   next: m359 (next offset: 204)

// m359;   next: m360 (next offset: 208)
000204  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000205  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m360 subroutine call;   next: m363 (next offset: 208)

// m363;   next: m367, jump target: m366 (next offset: 215)
000208  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000209  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000210  1 0  "00000000100001010100000000000001"   // (R[8],MC) = _pl_2_B1 (R[5],R[4]); 
000211  1 0  "00000001000001000010100000010100"   // (R[5]) = _lt_1_B1 (R[8],R[4]); 
000212  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000213  1 0  "01001000000001100000000000000001"   // (R[6]) = const_1_B1 (); 
000214  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m367;   next: m371 (next offset: 216)
000215  1 0  "01001000000001100000000000000000"   // (R[6]) = const_3_B3 (); 

// m366;   next: m371 (next offset: 216)

// m371;   next: m372 (next offset: 232)
000216  1 0  "10001001000001010000000000010000"   // (R[5]) = _ls_const_2_B1 (R[8]); 
000217  1 0  "10011101000010000000000000010000"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000218  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000219  1 0  "00000000110010000011000000000001"   // (R[6],MC) = _pl_1_B1 (R[6],R[8]); 
000220  1 0  "00000000101001110011100000000001"   // (R[7],MC) = _pl_2_B1 (R[7],R[5]); 
000221  1 0  "10011100100010000000000000010000"   // (R[8]) = _rs_const_3_B1 (R[4]); 
000222  1 0  "00000000011001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[3],R[6]); 
000223  1 0  "00000000111001010010100000010100"   // (R[5]) = _lt_1_B1 (R[7],R[5]); 
000224  1 0  "00010000100001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[4]); 
000225  1 0  "00000000101001100011000000000001"   // (R[6],MC) = _pl_3_B1 (R[6],R[5]); 
000226  1 0  "10101000001001101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[6],SP,-52); 
000227  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000228  1 0  "01111100001010001111111111001010"   // (__spill_DMh[-54]) = stack_store_bndl_B2 (R[8],SP,-54); 
000229  1 0  "01111100001001001111111111001000"   // (__spill_DMh[-56]) = stack_store_bndl_B2 (R[4],SP,-56); 
000230  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000231  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m372 subroutine call;   next: m375 (next offset: 232)

// m375;   next: m376 (next offset: 236)
000232  1 0  "01001100001001001111111111001000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 
000233  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000234  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000235  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m376 subroutine call;   next: m379 (next offset: 236)

// m379;   next: m380 (next offset: 240)
000236  1 0  "01001100001001001111111111001010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 
000237  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000238  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000239  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m380 subroutine call;   next: m383 (next offset: 240)

// m383;   next: m384 (next offset: 244)
000240  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000241  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000242  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000243  1 0  "01001100001001001111111111001010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 

// m384 subroutine call;   next: m387 (next offset: 244)

// m387;   next: m391, jump target: m390 (next offset: 251)
000244  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000245  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000246  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_2_B1 (R[5],R[4]); 
000247  1 0  "00000000110001000010000000010100"   // (R[4]) = _lt_1_B1 (R[6],R[4]); 
000248  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000249  1 0  "01001000000001010000000000000001"   // (R[5]) = const_1_B1 (); 
000250  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m391;   next: m167 (next offset: 252)
000251  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m390;   next: m167 (next offset: 252)

// m167, jump target: m2 (next offset: 272)
000252  1 0  "10011100110001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[6]); 
000253  1 0  "10001000110001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[6]); 
000254  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000255  1 0  "00000000101001110010100000000001"   // (R[5],MC) = _pl_1_B1 (R[5],R[7]); 
000256  1 0  "00000000100001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[6],R[4]); 
000257  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_2_B1 (R[3],R[5]); 
000258  1 0  "00000000110001000010000000010100"   // (R[4]) = _lt_1_B1 (R[6],R[4]); 
000259  1 0  "00000000100001010010100000000001"   // (R[5],MC) = _pl_3_B1 (R[5],R[4]); 
000260  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000261  1 0  "00000000100001100010000000000001"   // (R[4],MC) = add_1_B1 (R[6],R[4]); 
000262  1 0  "00000000101000000011000000000010"   // (R[6],MC) = addx_const_1_B3 (R[5],MC); 
000263  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000264  1 0  "00000000000001010010100000011000"   // (R[5],MC) = sub_const_1_B1 (R[5]); 
000265  1 0  "01010000001000111111111111100000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000266  1 0  "00000000011001000010000000011001"   // (R[4],MC) = subx_1_B1 (R[3],R[4],MC); 
000267  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000268  1 0  "00000000011001100001100000011001"   // (R[3],MC) = subx_2_B1 (R[3],R[6],MC); 
000269  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000270  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000271  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m163;   next: m2 (next offset: 278)
000272  1 0  "00000000101001110010100000000001"   // (R[5],MC) = add_1_B1 (R[5],R[7]); 
000273  1 0  "00000000100001100010000000000010"   // (R[4],MC) = addx_1_B1 (R[4],R[6],MC); 
000274  1 0  "01010000001010001111111110111100"   // (R[8]) = load__pl_rd_res_reg_const_1_B1 (-68,DMb[-68],SP); 
000275  1 0  "00000000011000000001100000000010"   // (R[3],MC) = addx_const_1_B3 (R[3],MC); 
000276  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_1_B1 (R[8]); 
000277  1 0  "10101000001010001111111110111100"   // (DMb[-68]) = store__pl_rd_res_reg_const_1_B1 (R[8],-68,DMb[-68],SP); 

// m2;   next: m164 (next offset: 278)

// m164;   next: m169, jump target: m163 (next offset: 282)
000278  1 0  "00000000011000000100000000010011"   // (R[8]) = _lt_const_1_B2 (R[3]); 
000279  1 0  "00100001000000001111111111110111"   // () = nez_br_const_1_B1 (R[8],-9); 
000280  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000281  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m169;   next: m170 (next offset: 286)
000282  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000283  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000284  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000285  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m170 subroutine call;   next: m171 (next offset: 286)

// m171;   next: m434, jump target: m189 (next offset: 291)
000286  1 0  "00010000011001000000001111111111"   // (R[4]) = _ad_const_1_B1 (R[3]); 
000287  1 0  "01111000100001000000000000000100"   // (R[4]) = _gt_const_1_B1 (R[4]); 
000288  1 0  "00100000100000000000000001100000"   // () = nez_br_const_1_B1 (R[4],96); 
000289  1 0  "10101000001000111111111110111000"   // (DMb[-72]) = store__pl_rd_res_reg_const_1_B1 (R[3],-72,DMb[-72],SP); 
000290  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m434;   next: m435 (next offset: 297)
000291  1 0  "00010000011001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[3]); 
000292  1 0  "10011100011001100000000000010000"   // (R[6]) = _rs_const_3_B1 (R[3]); 
000293  1 0  "01111100001001101111111111011010"   // (__spill_DMh[-38]) = stack_store_bndl_B2 (R[6],SP,-38); 
000294  1 0  "01111100001001011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[5],SP,-40); 
000295  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000296  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 

// m435 subroutine call;   next: m438 (next offset: 297)

// m438;   next: m439 (next offset: 301)
000297  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 
000298  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000299  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000300  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m439 subroutine call;   next: m442 (next offset: 301)

// m442;   next: m443 (next offset: 305)
000301  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000302  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000303  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000304  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m443 subroutine call;   next: m446 (next offset: 305)

// m446;   next: m447 (next offset: 309)
000305  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000306  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000307  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000308  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m447 subroutine call;   next: m450 (next offset: 309)

// m450;   next: m454, jump target: m453 (next offset: 316)
000309  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000310  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000311  1 0  "00000000100001010011100000000001"   // (R[7],MC) = _pl_2_B1 (R[5],R[4]); 
000312  1 0  "00000000111001000010000000010100"   // (R[4]) = _lt_1_B1 (R[7],R[4]); 
000313  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000314  1 0  "01001000000001010000000000000001"   // (R[5]) = const_1_B1 (); 
000315  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m454;   next: m458 (next offset: 317)
000316  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m453;   next: m458 (next offset: 317)

// m458;   next: m459 (next offset: 330)
000317  1 0  "10001000111001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[7]); 
000318  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000319  1 0  "10011100111001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[7]); 
000320  1 0  "00000000100001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[6],R[4]); 
000321  1 0  "00000000101001110010100000000001"   // (R[5],MC) = _pl_1_B1 (R[5],R[7]); 
000322  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_2_B1 (R[3],R[5]); 
000323  1 0  "00000000110001000010000000010100"   // (R[4]) = _lt_1_B1 (R[6],R[4]); 
000324  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
000325  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_3_B1 (R[5],R[4]); 
000326  1 0  "01001100001001001111111111001000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 
000327  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000328  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000329  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m459 subroutine call;   next: m462 (next offset: 330)

// m462;   next: m463 (next offset: 334)
000330  1 0  "01001100001001001111111111001000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 
000331  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000332  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000333  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 

// m463 subroutine call;   next: m466 (next offset: 334)

// m466;   next: m467 (next offset: 338)
000334  1 0  "01001100001001001111111111001010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 
000335  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000336  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000337  1 0  "01001100001001011111111111011000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m467 subroutine call;   next: m470 (next offset: 338)

// m470;   next: m471 (next offset: 342)
000338  1 0  "01001100001001011111111111011010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000339  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000340  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000341  1 0  "01001100001001001111111111001010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 

// m471 subroutine call;   next: m474 (next offset: 342)

// m474;   next: m478, jump target: m477 (next offset: 349)
000342  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000343  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000344  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_2_B1 (R[5],R[4]); 
000345  1 0  "00000000110001000010000000010100"   // (R[4]) = _lt_1_B1 (R[6],R[4]); 
000346  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000347  1 0  "01001000000001010000000000000001"   // (R[5]) = const_1_B1 (); 
000348  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m478;   next: m186 (next offset: 350)
000349  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m477;   next: m186 (next offset: 350)

// m186, jump target: m3 (next offset: 370)
000350  1 0  "10011100110001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[6]); 
000351  1 0  "10001000110001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[6]); 
000352  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000353  1 0  "00000000101001110010100000000001"   // (R[5],MC) = _pl_1_B1 (R[5],R[7]); 
000354  1 0  "00000000100001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[6],R[4]); 
000355  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_2_B1 (R[3],R[5]); 
000356  1 0  "00000000110001000010000000010100"   // (R[4]) = _lt_1_B1 (R[6],R[4]); 
000357  1 0  "00000000100001010010000000000001"   // (R[4],MC) = _pl_3_B1 (R[5],R[4]); 
000358  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000359  1 0  "00000000101001100010100000000001"   // (R[5],MC) = add_1_B1 (R[6],R[5]); 
000360  1 0  "00000000100000000011000000000010"   // (R[6],MC) = addx_const_1_B3 (R[4],MC); 
000361  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000362  1 0  "00000000000001000010000000011000"   // (R[4],MC) = sub_const_1_B1 (R[4]); 
000363  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000364  1 0  "00000000011001010010100000011001"   // (R[5],MC) = subx_1_B1 (R[3],R[5],MC); 
000365  1 0  "01010000001000111111111111100000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000366  1 0  "00000000011001100011000000011001"   // (R[6],MC) = subx_2_B1 (R[3],R[6],MC); 
000367  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000368  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000369  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m182;   next: m3 (next offset: 376)
000370  1 0  "00000000011001000010000000000001"   // (R[4],MC) = add_1_B1 (R[4],R[3]); 
000371  1 0  "00000000101001110010100000000010"   // (R[5],MC) = addx_1_B1 (R[5],R[7],MC); 
000372  1 0  "01010000001010001111111110111000"   // (R[8]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb[-72],SP); 
000373  1 0  "00000000110000000011000000000010"   // (R[6],MC) = addx_const_1_B3 (R[6],MC); 
000374  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_1_B1 (R[8]); 
000375  1 0  "10101000001010001111111110111000"   // (DMb[-72]) = store__pl_rd_res_reg_const_1_B1 (R[8],-72,DMb[-72],SP); 

// m3;   next: m183 (next offset: 376)

// m183;   next: m300, jump target: m182 (next offset: 380)
000376  1 0  "00000000110000000100000000010011"   // (R[8]) = _lt_const_1_B2 (R[6]); 
000377  1 0  "00100001000000001111111111110111"   // () = nez_br_const_1_B1 (R[8],-9); 
000378  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000379  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m300;   next: m224 (next offset: 386)
000380  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_1_B1 (R[6],R[5]); 
000381  1 0  "00000000100001010010100000001010"   // (R[5]) = _or_1_B1 (R[5],R[4]); 
000382  1 0  "01010000001001001111111110111000"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb[-72],SP); 
000383  1 0  "00000000101000000010100000010101"   // (R[5]) = nez_1_B1 (R[5]); 
000384  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[5]); 
000385  1 0  "10101000001001001111111110111000"   // (DMb[-72]) = store__pl_rd_res_reg_const_1_B1 (R[4],-72,DMb[-72],SP); 

// m189;   next: m224 (next offset: 386)

// m224;   next: m225 (next offset: 397)
000386  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000387  1 0  "01010000001000111111111110111000"   // (R[3]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb[-72],SP); 
000388  1 0  "01010000001001101111111110111100"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-68,DMb[-68],SP); 
000389  1 0  "10001000110001000000000000010101"   // (R[4]) = _ls_const_1_B1 (R[6]); 
000390  1 0  "10011100011001010000000000001011"   // (R[5]) = _rs_const_1_B1 (R[3]); 
000391  1 0  "00000000100001010011100000001010"   // (R[7]) = _or_1_B1 (R[4],R[5]); 
000392  1 0  "10001000011010000000000000010101"   // (R[8]) = _ls_const_1_B1 (R[3]); 
000393  1 0  "10011100110001100000000000001011"   // (R[6]) = _rs_const_1_B1 (R[6]); 
000394  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000395  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000396  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m225 subroutine call;   next: m227 (next offset: 397)

// m227 (next offset: /)
000397  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000398  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000399  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000400  1 0  "10101000001001101111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[6],SP,-100); 
000401  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000402  1 0  "10101000001001001111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[4],SP,-96); 
000403  1 0  "00001000001000011111111110100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-92,SP,SP); 

