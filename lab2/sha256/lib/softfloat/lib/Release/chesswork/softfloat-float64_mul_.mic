
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:23 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float64_mul_ tlx


// m182;   next: m190, jump target: m40 (next offset: 30)
000000  1 0  "01001000000000110000000000001111"   // (R[3]) = lhi_const_1_B1 (15); 
000001  1 0  "00001000001000010000000001001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (76,SP,SP); 
000002  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000011001100100000000000011"   // (R[8]) = _ad_1_B1 (R[6],R[3]); 
000004  1 0  "10011100100010010000000000011111"   // (R[9]) = _rs_const_5_B1 (R[4]); 
000005  1 0  "10011100110010100000000000011111"   // (R[10]) = _rs_const_5_B1 (R[6]); 
000006  1 0  "00000001001010100100100000011010"   // (R[9]) = _er_1_B1 (R[9],R[10]); 
000007  1 0  "00000000111010000111000000001010"   // (R[14]) = _or_1_B1 (R[8],R[7]); 
000008  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000009  1 0  "10001001001010110000000000011111"   // (R[11]) = _ls_const_1_B1 (R[9]); 
000010  1 0  "10011100110010100000000000010100"   // (R[10]) = _rs_const_4_B1 (R[6]); 
000011  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000012  1 0  "10011100100010000000000000010100"   // (R[8]) = _rs_const_4_B1 (R[4]); 
000013  1 0  "10101000001010011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[9],SP,-16); 
000014  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000015  1 0  "00010001010011010000011111111111"   // (R[13]) = _ad_const_1_B1 (R[10]); 
000016  1 0  "00000000011001010011100000001010"   // (R[7]) = _or_1_B1 (R[3],R[5]); 
000017  1 0  "00010001000010010000011111111111"   // (R[9]) = _ad_const_1_B1 (R[8]); 
000018  1 0  "10101000001010111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[11],SP,-84); 
000019  1 0  "10101000001011101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[14],SP,-32); 
000020  1 0  "01001000000011000111111111110000"   // (R[12]) = const_6_B1 (); 
000021  1 0  "10101000001011011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[13],SP,-28); 
000022  1 0  "00000000111000000101000000010101"   // (R[10]) = nez_1_B1 (R[7]); 
000023  1 0  "00000001110000000111000000010101"   // (R[14]) = nez_1_B1 (R[14]); 
000024  1 0  "10010101001011110000011111111111"   // (R[15]) = _ne_const_1_B1 (R[9]); 
000025  1 0  "00000001011011000101100000000001"   // (R[11],MC) = _pl_4_B1 (R[11],R[12]); 
000026  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 
000027  1 0  "00100001111000000000000000011001"   // () = nez_br_const_1_B1 (R[15],25); 
000028  1 0  "01100101101010000000011111111111"   // (R[8]) = _eq_const_1_B1 (R[13]); 
000029  1 0  "10010101101011010000011111111111"   // (R[13]) = _ne_const_1_B1 (R[13]); 

// m190;   next: m24, jump target: m28 (next offset: 35)
000030  1 0  "00000001000011100001100000000011"   // (R[3]) = land_1_B1 (R[8],R[14]); 
000031  1 0  "00000000011010100011100000001010"   // (R[7]) = lor_1_B1 (R[10],R[3]); 
000032  1 0  "00010100111000000000000000001010"   // () = eqz_br_const_1_B1 (R[7],10); 
000033  1 0  "01010000001010001111111111100100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000034  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m24;   next: m25 (next offset: 37)
000035  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000036  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m25 subroutine call;   next: m27 (next offset: 37)

// m27 (next offset: 44)
000037  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000038  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000039  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000040  1 0  "10101000001000111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[3],SP,-84); 
000041  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000042  1 0  "10101000001001011111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[5],SP,-80); 
000043  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m28;   next: m195 (next offset: 44)

// m195;   next: m35, jump target: m1 (next offset: 50)
000044  1 0  "00000000011010000010100000001010"   // (R[5]) = _or_1_B1 (R[8],R[3]); 
000045  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000046  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[5],R[4]); 
000047  1 0  "00010100100000000000000000011010"   // () = br_eqz_const_1_B1 (R[4],26); 
000048  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m35;   next: m39 (next offset: 50)

// m39 (next offset: 54)
000050  1 0  "10101000001000001111111110110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-80]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-80); 
000051  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000052  1 0  "10101000001010111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[11],SP,-84); 
000053  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m40;   next: m514 (next offset: 54)

// m514;   next: m511, jump target: m68 (next offset: 57)
000054  1 0  "00100001101000000000000000011110"   // () = nez_br_const_1_B1 (R[13],30); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m511;   next: m50, jump target: m54 (next offset: 61)
000057  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000058  1 0  "00010100111000000000000000001010"   // () = br_eqz_const_1_B1 (R[7],10); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000060  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50;   next: m51 (next offset: 63)
000061  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000062  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m51 subroutine call;   next: m53 (next offset: 63)

// m53 (next offset: 70)
000063  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000064  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000065  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000066  1 0  "10101000001000111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[3],SP,-84); 
000067  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000068  1 0  "10101000001001011111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[5],SP,-80); 
000069  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m54;   next: m200 (next offset: 70)

// m200;   next: m517, jump target: m63 (next offset: 75)
000070  1 0  "00000000011010010010000000001010"   // (R[4]) = _or_1_B1 (R[9],R[3]); 
000071  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[5]); 
000072  1 0  "00100000100000000000000000001000"   // () = br_nez_const_1_B1 (R[4],8); 
000073  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000074  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m517;   next: m1 (next offset: 75)

// m1;   next: m62 (next offset: 75)

// m62 (next offset: 82)
000075  1 0  "00001000000001001111111111111111"   // (R[4]) = const_4_B1 (); 
000076  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000077  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000078  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000079  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000080  1 0  "10101000001000111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[3],SP,-84); 
000081  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m63;   next: m67 (next offset: 82)

// m67 (next offset: 86)
000082  1 0  "10101000001000001111111110110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-80]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-80); 
000083  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000084  1 0  "10101000001010111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[11],SP,-84); 
000085  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m68;   next: m203 (next offset: 86)

// m203;   next: m512, jump target: m85 (next offset: 89)
000086  1 0  "00100001001000000000000000010010"   // () = br_nez_const_1_B1 (R[9],18); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m512;   next: m80, jump target: m81 (next offset: 92)
000089  1 0  "00100000111000000000000000000101"   // () = br_nez_const_1_B1 (R[7],5); 
000090  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m80 (next offset: 96)
000092  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000093  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000094  1 0  "10101000001000001111111110110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-80]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-80); 
000095  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m81;   next: m83 (next offset: 96)

// m83;   next: m84 (next offset: 101)
000096  1 0  "01010101001001100000000000000000"   // R[6] = R[9]; 
000097  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000098  1 0  "01010100101010000000000000000000"   // R[8] = R[5]; 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010100100001110000000000000000"   // R[7] = R[4]; 

// m84 subroutine call;   next: m515 (next offset: 101)

// m515, jump target: m209 (next offset: 106)
000101  1 0  "01010101000001010000000000000000"   // R[5] = R[8]; 
000102  1 0  "01010100110010010000000000000000"   // R[9] = R[6]; 
000103  1 0  "01010100111000110000000000000000"   // R[3] = R[7]; 
000104  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000105  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m85;   next: m209 (next offset: 107)
000106  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m209;   next: m513, jump target: m102 (next offset: 112)
000107  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000108  1 0  "01010000001010001111111111101100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000109  1 0  "00100000110000000000000000001110"   // () = br_nez_const_1_B1 (R[6],14); 
000110  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000111  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 

// m513;   next: m97, jump target: m98 (next offset: 115)
000112  1 0  "00100000100000000000000000000110"   // () = br_nez_const_1_B1 (R[4],6); 
000113  1 0  "10101000001010011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[9],SP,-28); 
000114  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m97 (next offset: 120)
000115  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000116  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000117  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000118  1 0  "10101000001000001111111110110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-80]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-80); 
000119  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

// m98;   next: m100 (next offset: 120)

// m100;   next: m101 (next offset: 123)
000120  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 
000121  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000122  1 0  "01010101000001010000000000000000"   // R[5] = R[8]; 

// m101 subroutine call;   next: m516 (next offset: 123)

// m516, jump target: m413 (next offset: 125)
000123  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000124  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m102;   next: m413 (next offset: 127)
000125  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000126  1 0  "10101000001010011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[9],SP,-28); 

// m413;   next: m414 (next offset: 151)
000127  1 0  "10001001000001010000000000001100"   // (R[5]) = _ls_const_3_B1 (R[8]); 
000128  1 0  "01010000001010101111111111100100"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000129  1 0  "00000000110010100101000000000001"   // (R[10],MC) = _pl_2_B1 (R[10],R[6]); 
000130  1 0  "10001000111001100000000000001100"   // (R[6]) = _ls_const_3_B1 (R[7]); 
000131  1 0  "10011101000001110000000000010100"   // (R[7]) = _rs_const_4_B1 (R[8]); 
000132  1 0  "01010000001010011111111111101100"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000133  1 0  "00010001001001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[9]); 
000134  1 0  "10011100101000110000000000010000"   // (R[3]) = _rs_const_3_B1 (R[5]); 
000135  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000136  1 0  "01001000000010110000000000010000"   // (R[11]) = const_3_B1 (); 
000137  1 0  "00000001000010110100000000001010"   // (R[8]) = _or_3_B1 (R[8],R[11]); 
000138  1 0  "00001001010010101111110000000000"   // (R[10],MC) = _pl_const_2_B1 (R[10]); 
000139  1 0  "10011101001010010000000000010000"   // (R[9]) = _rs_const_3_B1 (R[9]); 
000140  1 0  "00000000110001110011000000001010"   // (R[6]) = _or_1_B1 (R[6],R[7]); 
000141  1 0  "00010000101001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[5]); 
000142  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000143  1 0  "01111100001000111111111111100110"   // (__spill_DMh[-26]) = stack_store_bndl_B2 (R[3],SP,-26); 
000144  1 0  "01111100001001011111111111100100"   // (__spill_DMh[-28]) = stack_store_bndl_B2 (R[5],SP,-28); 
000145  1 0  "10101000001010001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[8],SP,-32); 
000146  1 0  "10101000001010101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[10],SP,-36); 
000147  1 0  "01111100001010011111111111011010"   // (__spill_DMh[-38]) = stack_store_bndl_B2 (R[9],SP,-38); 
000148  1 0  "01111100001001001111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[4],SP,-40); 
000149  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000150  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m414 subroutine call;   next: m417 (next offset: 151)

// m417;   next: m418 (next offset: 155)
000151  1 0  "01001100001001001111111111011000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000152  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000153  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000154  1 0  "01001100001001011111111111100110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-26],SP,-26); 

// m418 subroutine call;   next: m421 (next offset: 155)

// m421;   next: m422 (next offset: 159)
000155  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000156  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000157  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000158  1 0  "01001100001001011111111111100100"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-28],SP,-28); 

// m422 subroutine call;   next: m425 (next offset: 159)

// m425;   next: m426 (next offset: 163)
000159  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000160  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000161  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000162  1 0  "01001100001001011111111111100110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-26],SP,-26); 

// m426 subroutine call;   next: m429 (next offset: 163)

// m429;   next: m433, jump target: m432 (next offset: 170)
000163  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000164  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000165  1 0  "00000000100001010100000000000001"   // (R[8],MC) = _pl_2_B1 (R[4],R[5]); 
000166  1 0  "00000001000001010010000000010100"   // (R[4]) = _lt_1_B1 (R[8],R[5]); 
000167  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000168  1 0  "01001000000001100000000000000001"   // (R[6]) = const_2_B1 (); 
000169  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m433;   next: m437 (next offset: 171)
000170  1 0  "01001000000001100000000000000000"   // (R[6]) = const_5_B3 (); 

// m432;   next: m437 (next offset: 171)

// m437;   next: m438 (next offset: 187)
000171  1 0  "10001001000001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[8]); 
000172  1 0  "10011101000010000000000000010000"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000173  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000174  1 0  "00000000110010000011000000000001"   // (R[6],MC) = _pl_1_B1 (R[6],R[8]); 
000175  1 0  "00000000100001110011100000000001"   // (R[7],MC) = _pl_2_B1 (R[7],R[4]); 
000176  1 0  "10011100101010000000000000010000"   // (R[8]) = _rs_const_3_B1 (R[5]); 
000177  1 0  "00000000011001100001100000000001"   // (R[3],MC) = _pl_2_B1 (R[3],R[6]); 
000178  1 0  "00000000111001000010000000010100"   // (R[4]) = _lt_1_B1 (R[7],R[4]); 
000179  1 0  "00010000101001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[5]); 
000180  1 0  "00000000011001000001100000000001"   // (R[3],MC) = _pl_3_B1 (R[3],R[4]); 
000181  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000182  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 
000183  1 0  "01111100001010001111111111010010"   // (__spill_DMh[-46]) = stack_store_bndl_B2 (R[8],SP,-46); 
000184  1 0  "01111100001001011111111111010000"   // (__spill_DMh[-48]) = stack_store_bndl_B2 (R[5],SP,-48); 
000185  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000186  1 0  "01001100001001001111111111011000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 

// m438 subroutine call;   next: m441 (next offset: 187)

// m441;   next: m442 (next offset: 191)
000187  1 0  "01001100001001001111111111011000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000188  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000189  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000190  1 0  "01001100001001011111111111010010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-46],SP,-46); 

// m442 subroutine call;   next: m445 (next offset: 191)

// m445;   next: m446 (next offset: 195)
000191  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000192  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000193  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000194  1 0  "01001100001001011111111111010000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-48],SP,-48); 

// m446 subroutine call;   next: m449 (next offset: 195)

// m449;   next: m450 (next offset: 199)
000195  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000196  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000197  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000198  1 0  "01001100001001011111111111010010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-46],SP,-46); 

// m450 subroutine call;   next: m453 (next offset: 199)

// m453;   next: m457, jump target: m456 (next offset: 206)
000199  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000200  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000201  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_2_B1 (R[4],R[5]); 
000202  1 0  "00000000110001010011100000010100"   // (R[7]) = _lt_1_B1 (R[6],R[5]); 
000203  1 0  "00100000111000000000000000000010"   // () = nez_br_const_1_B1 (R[7],2); 
000204  1 0  "01001000000001000000000000000001"   // (R[4]) = const_2_B1 (); 
000205  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m457;   next: m461 (next offset: 207)
000206  1 0  "01001000000001000000000000000000"   // (R[4]) = const_5_B3 (); 

// m456;   next: m461 (next offset: 207)

// m461;   next: m462 (next offset: 226)
000207  1 0  "10011100110001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[6]); 
000208  1 0  "00000000100001110010000000000001"   // (R[4],MC) = _pl_1_B1 (R[4],R[7]); 
000209  1 0  "10001000110001100000000000010000"   // (R[6]) = _ls_const_2_B1 (R[6]); 
000210  1 0  "01010000001010001111111111001100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000211  1 0  "00000000011001000010000000000001"   // (R[4],MC) = _pl_2_B1 (R[3],R[4]); 
000212  1 0  "00000000110010000011100000000001"   // (R[7],MC) = _pl_2_B1 (R[8],R[6]); 
000213  1 0  "00000000111001100001100000010100"   // (R[3]) = _lt_1_B1 (R[7],R[6]); 
000214  1 0  "00000000011001000001100000000001"   // (R[3],MC) = _pl_3_B1 (R[4],R[3]); 
000215  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000216  1 0  "00000000110001110011000000000001"   // (R[6],MC) = add_1_B1 (R[7],R[6]); 
000217  1 0  "00010000101001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[5]); 
000218  1 0  "10011100101001110000000000010000"   // (R[7]) = _rs_const_3_B1 (R[5]); 
000219  1 0  "00000000011000000001100000000010"   // (R[3],MC) = addx_const_1_B3 (R[3],MC); 
000220  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000221  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
000222  1 0  "01111100001001111111111111001110"   // (__spill_DMh[-50]) = stack_store_bndl_B2 (R[7],SP,-50); 
000223  1 0  "01111100001001001111111111001100"   // (__spill_DMh[-52]) = stack_store_bndl_B2 (R[4],SP,-52); 
000224  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000225  1 0  "01001100001001011111111111010000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-48],SP,-48); 

// m462 subroutine call;   next: m465 (next offset: 226)

// m465;   next: m466 (next offset: 230)
000226  1 0  "01001100001001001111111111001100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-52],SP,-52); 
000227  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000228  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000229  1 0  "01001100001001011111111111010010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-46],SP,-46); 

// m466 subroutine call;   next: m469 (next offset: 230)

// m469;   next: m470 (next offset: 234)
000230  1 0  "01001100001001001111111111001110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-50],SP,-50); 
000231  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000232  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000233  1 0  "01001100001001011111111111010000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-48],SP,-48); 

// m470 subroutine call;   next: m473 (next offset: 234)

// m473;   next: m474 (next offset: 238)
000234  1 0  "01001100001001011111111111010010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-46],SP,-46); 
000235  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000236  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000237  1 0  "01001100001001001111111111001110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-50],SP,-50); 

// m474 subroutine call;   next: m477 (next offset: 238)

// m477;   next: m481, jump target: m480 (next offset: 245)
000238  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000239  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000240  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_2_B1 (R[4],R[5]); 
000241  1 0  "00000000110001010010100000010100"   // (R[5]) = _lt_1_B1 (R[6],R[5]); 
000242  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000243  1 0  "01001000000001000000000000000001"   // (R[4]) = const_2_B1 (); 
000244  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m481;   next: m485 (next offset: 246)
000245  1 0  "01001000000001000000000000000000"   // (R[4]) = const_5_B3 (); 

// m480;   next: m485 (next offset: 246)

// m485;   next: m486 (next offset: 262)
000246  1 0  "10011100110001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[6]); 
000247  1 0  "10001000110001010000000000010000"   // (R[5]) = _ls_const_2_B1 (R[6]); 
000248  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000249  1 0  "00000000100001110010000000000001"   // (R[4],MC) = _pl_1_B1 (R[4],R[7]); 
000250  1 0  "00000000101001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[6],R[5]); 
000251  1 0  "00000000011001000010000000000001"   // (R[4],MC) = _pl_2_B1 (R[3],R[4]); 
000252  1 0  "00000000110001010010100000010100"   // (R[5]) = _lt_1_B1 (R[6],R[5]); 
000253  1 0  "00000000100001010010100000000001"   // (R[5],MC) = _pl_3_B1 (R[4],R[5]); 
000254  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000255  1 0  "00000000100001100001100000000001"   // (R[3],MC) = add_1_B1 (R[6],R[4]); 
000256  1 0  "00000000101000000011000000000010"   // (R[6],MC) = addx_const_1_B3 (R[5],MC); 
000257  1 0  "01001100001001001111111111001100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-52],SP,-52); 
000258  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000259  1 0  "10101000001000111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[3],SP,-48); 
000260  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000261  1 0  "01001100001001011111111111100100"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-28],SP,-28); 

// m486 subroutine call;   next: m489 (next offset: 262)

// m489;   next: m490 (next offset: 266)
000262  1 0  "01001100001001001111111111001100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-52],SP,-52); 
000263  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000264  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000265  1 0  "01001100001001011111111111100110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-26],SP,-26); 

// m490 subroutine call;   next: m493 (next offset: 266)

// m493;   next: m494 (next offset: 270)
000266  1 0  "01001100001001001111111111001110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-50],SP,-50); 
000267  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000268  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000269  1 0  "01001100001001011111111111100100"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-28],SP,-28); 

// m494 subroutine call;   next: m497 (next offset: 270)

// m497;   next: m498 (next offset: 274)
000270  1 0  "01001100001001011111111111100110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-26],SP,-26); 
000271  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000272  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000273  1 0  "01001100001001001111111111001110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-50],SP,-50); 

// m498 subroutine call;   next: m501 (next offset: 274)

// m501;   next: m505, jump target: m504 (next offset: 281)
000274  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000275  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000276  1 0  "00000000100001010011000000000001"   // (R[6],MC) = _pl_2_B1 (R[4],R[5]); 
000277  1 0  "00000000110001010010100000010100"   // (R[5]) = _lt_1_B1 (R[6],R[5]); 
000278  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000279  1 0  "01001000000001000000000000000001"   // (R[4]) = const_2_B1 (); 
000280  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m505;   next: m411 (next offset: 282)
000281  1 0  "01001000000001000000000000000000"   // (R[4]) = const_5_B3 (); 

// m504;   next: m411 (next offset: 282)

// m411;   next: m319, jump target: m148 (next offset: 311)
000282  1 0  "10011100110001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[6]); 
000283  1 0  "10001000110001010000000000010000"   // (R[5]) = _ls_const_2_B1 (R[6]); 
000284  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000285  1 0  "00000000100001110010000000000001"   // (R[4],MC) = _pl_1_B1 (R[4],R[7]); 
000286  1 0  "00000000101001100011000000000001"   // (R[6],MC) = _pl_2_B1 (R[6],R[5]); 
000287  1 0  "00000000011001000010000000000001"   // (R[4],MC) = _pl_2_B1 (R[3],R[4]); 
000288  1 0  "00000000110001010010100000010100"   // (R[5]) = _lt_1_B1 (R[6],R[5]); 
000289  1 0  "00000000100001010010000000000001"   // (R[4],MC) = _pl_3_B1 (R[4],R[5]); 
000290  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000291  1 0  "00000000101001100010100000000001"   // (R[5],MC) = add_1_B1 (R[6],R[5]); 
000292  1 0  "00000000100000000010000000000010"   // (R[4],MC) = addx_const_1_B3 (R[4],MC); 
000293  1 0  "01010000001000111111111111010000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000294  1 0  "00000000011001000011000000000001"   // (R[6],MC) = add_1_B1 (R[3],R[4]); 
000295  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000296  1 0  "00000000100000000010000000000010"   // (R[4],MC) = addx_const_1_B3 (R[4],MC); 
000297  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000298  1 0  "00000000110001110011100000000001"   // (R[7],MC) = add_1_B1 (R[6],R[7]); 
000299  1 0  "01010000001001101111111111100000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000300  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000301  1 0  "00000000011000000001100000010101"   // (R[3]) = nez_1_B1 (R[3]); 
000302  1 0  "00000000100001100011000000000010"   // (R[6],MC) = addx_1_B1 (R[4],R[6],MC); 
000303  1 0  "00000000011001010010000000001010"   // (R[4]) = _or_2_B1 (R[5],R[3]); 
000304  1 0  "10101000001001001111111110111000"   // (DMb[-72]) = store__pl_rd_res_reg_const_1_B1 (R[4],-72,DMb[-72],SP); 
000305  1 0  "01001000000001010000000000100000"   // (R[5]) = const_1_B1 (); 
000306  1 0  "00000000110001010010000000010100"   // (R[4]) = _lt_2_B1 (R[6],R[5]); 
000307  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000308  1 0  "00100000100000000000000000001110"   // () = nez_br_const_1_B1 (R[4],14); 
000309  1 0  "10101000001001111111111110111100"   // (DMb[-68]) = store__pl_rd_res_reg_const_1_B1 (R[7],-68,DMb[-68],SP); 
000310  1 0  "10101000001001101111111111000000"   // (DMb[-64]) = store__pl_rd_res_reg_const_1_B1 (R[6],-64,DMb[-64],SP); 

// m319;   next: m150 (next offset: 324)
000311  1 0  "10001000110000110000000000011111"   // (R[3]) = _ls_const_1_B1 (R[6]); 
000312  1 0  "01010000001001111111111110111100"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-68,DMb[-68],SP); 
000313  1 0  "10001000111001000000000000011111"   // (R[4]) = _ls_const_1_B1 (R[7]); 
000314  1 0  "01010000001010001111111110111000"   // (R[8]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb[-72],SP); 
000315  1 0  "00000001000000000100000000010101"   // (R[8]) = nez_1_B1 (R[8]); 
000316  1 0  "10011100111001110000000000000001"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000317  1 0  "10011100110001100000000000000001"   // (R[6]) = _rs_const_1_B1 (R[6]); 
000318  1 0  "00000000011001110001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[7]); 
000319  1 0  "00000000100010000010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[8]); 
000320  1 0  "10101000001001101111111111000000"   // (DMb[-64]) = store__pl_rd_res_reg_const_1_B1 (R[6],-64,DMb[-64],SP); 
000321  1 0  "10101000001001001111111110111000"   // (DMb[-72]) = store__pl_rd_res_reg_const_1_B1 (R[4],-72,DMb[-72],SP); 
000322  1 0  "10101000001000111111111110111100"   // (DMb[-68]) = store__pl_rd_res_reg_const_1_B1 (R[3],-68,DMb[-68],SP); 
000323  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 

// m148;   next: m150 (next offset: 324)

// m150;   next: m151 (next offset: 330)
000324  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000325  1 0  "01010000001001111111111110111100"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-68,DMb[-68],SP); 
000326  1 0  "01010000001010001111111110111000"   // (R[8]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb[-72],SP); 
000327  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000328  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000329  1 0  "01010000001001101111111111000000"   // (R[6]) = load__pl_rd_res_reg_const_1_B1 (-64,DMb[-64],SP); 

// m151 subroutine call;   next: m153 (next offset: 330)

// m153 (next offset: /)
000330  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000331  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000332  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000333  1 0  "10101000001000111111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[3],SP,-84); 
000334  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000335  1 0  "10101000001001011111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[5],SP,-80); 
000336  1 0  "00001000001000011111111110110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-76,SP,SP); 

