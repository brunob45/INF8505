
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:20 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-normalizeFloat64Subnormal_ tlx


// m31;   next: m17, jump target: m7 (next offset: 4)
000000  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (12,SP,SP); 
000001  1 0  "00010100100000000000000000010010"   // () = eqz_br_const_1_B1 (R[4],18); 
000002  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000003  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 

// m17;   next: m18 (next offset: 8)
000004  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000005  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000006  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m18 subroutine call;   next: m36 (next offset: 8)

// m36;   next: m23, jump target: m22 (next offset: 13)
000008  1 0  "00001000011001001111111111110101"   // (R[4],MC) = _pl_const_1_B1 (R[3]); 
000009  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000010  1 0  "00010100100000000000000000000110"   // () = eqz_br_const_1_B1 (R[4],6); 
000011  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000012  1 0  "00000000110001000100000000010010"   // (R[8]) = _ls_1_B1 (R[6],R[4]); 

// m23;   next: m25 (next offset: 18)
000013  1 0  "00000000000001000010100000011000"   // (R[5],MC) = _mi_const_1_B1 (R[4]); 
000014  1 0  "00010000101001010000000000011111"   // (R[5]) = _ad_const_1_B1 (R[5]); 
000015  1 0  "00000000111001000011100000010010"   // (R[7]) = _ls_1_B1 (R[7],R[4]); 
000016  1 0  "00000000110001010011000000010111"   // (R[6]) = _rs_1_B1 (R[6],R[5]); 
000017  1 0  "00000000110001110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[6]); 

// m22;   next: m25 (next offset: 18)

// m25, jump target: m28 (next offset: 21)
000018  1 0  "01010100000001100000000000000001"   // (R[6]) = const_1_B2 (); 
000019  1 0  "00100100000000000000000000010010"   // () = j_const_1_B1 (18); 
000020  1 0  "00000000110001000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[4]); 

// m7;   next: m8 (next offset: 26)
000021  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 
000022  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000023  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000024  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m8 subroutine call;   next: m9 (next offset: 26)

// m9;   next: m13, jump target: m12 (next offset: 31)
000026  1 0  "00001000011001101111111111110101"   // (R[6],MC) = _pl_const_1_B1 (R[3]); 
000027  1 0  "00000000110000000011100000010011"   // (R[7]) = _lt_const_1_B2 (R[6]); 
000028  1 0  "00100000111000000000000000000100"   // () = nez_br_const_1_B1 (R[7],4); 
000029  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000030  1 0  "00000000000001100010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[6]); 

// m13, jump target: m15 (next offset: 34)
000031  1 0  "00000001000001100011100000010010"   // (R[7]) = _ls_1_B1 (R[8],R[6]); 
000032  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000033  1 0  "01001000000010000000000000000000"   // (R[8]) = const_2_B3 (); 

// m12;   next: m15 (next offset: 37)
000034  1 0  "00000001000001000011100000010111"   // (R[7]) = _rs_1_B1 (R[8],R[4]); 
000035  1 0  "00010000110001100000000000011111"   // (R[6]) = _ad_const_1_B1 (R[6]); 
000036  1 0  "00000001000001100100000000010010"   // (R[8]) = _ls_1_B1 (R[8],R[6]); 

// m15;   next: m28 (next offset: 38)
000037  1 0  "00001000100001101111111111100001"   // (R[6],MC) = _pl_const_2_B1 (R[4]); 

// m28 (next offset: /)
000038  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000039  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000040  1 0  "00001000001000011111111111110100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-12,SP,SP); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

