
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:29 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-roundAndPackFloat32_ tlx


// m33;   next: m121, jump target: m100 (next offset: 6)
000000  1 0  "00010000101010001111111111111111"   // (R[8]) = __ushort_1_B1 (R[5]); 
000001  1 0  "10001000100000110000000000011111"   // (R[3]) = _ls_const_2_B1 (R[4]); 
000002  1 0  "10001101000001000000000011111101"   // (R[4]) = _lt_const_3_B1 (R[8]); 
000003  1 0  "00100000100000000000000000100011"   // () = nez_br_const_2_B1 (R[4],35); 
000004  1 0  "00010000110001110000000001111111"   // (R[7]) = _ad_const_2_B1 (R[6]); 
000005  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m121;   next: m55, jump target: m56 (next offset: 15)
000006  1 0  "00001000110010000000000001000000"   // (R[8],MC) = _pl_const_1_B1 (R[6]); 
000007  1 0  "01100100101001000000000011111101"   // (R[4]) = _eq_const_1_B1 (R[5]); 
000008  1 0  "00000001000000000100000000010011"   // (R[8]) = _lt_const_2_B2 (R[8]); 
000009  1 0  "01110100101010010000000011111101"   // (R[9]) = _gt_const_1_B1 (R[5]); 
000010  1 0  "00000000100010000010000000000011"   // (R[4]) = land_1_B1 (R[4],R[8]); 
000011  1 0  "00000000100010010010000000001010"   // (R[4]) = lor_1_B1 (R[9],R[4]); 
000012  1 0  "00010100100000000000000000000100"   // () = eqz_br_const_2_B1 (R[4],4); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m55 (next offset: 18)
000015  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000016  1 0  "01001000000001010111111110000000"   // (R[5]) = const_2_B1 (); 
000017  1 0  "00000000011001010001100000000001"   // (R[3],) = _pl_2_B1 (R[3],R[5]); 

// m56;   next: m58 (next offset: 18)

// m58;   next: m125, jump target: m98 (next offset: 22)
000018  1 0  "00000000101000000010000000001100"   // (R[4]) = _ge_const_1_B2 (R[5]); 
000019  1 0  "00100000100000000000000000010011"   // () = nez_br_const_2_B1 (R[4],19); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m125;   next: m79, jump target: m77 (next offset: 26)
000022  1 0  "00000000000001010010100000011000"   // (R[5],MC) = _mi_const_1_B1 (R[5]); 
000023  1 0  "00010100101000000000000000001101"   // () = eqz_br_const_1_B1 (R[5],13); 
000024  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m79;   next: m193, jump target: m167 (next offset: 30)
000026  1 0  "10001100101001000000000000100000"   // (R[4]) = _lt_const_1_B1 (R[5]); 
000027  1 0  "00100000100000000000000000000011"   // () = nez_br_const_2_B1 (R[4],3); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m193, jump target: m196 (next offset: 32)
000030  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000031  1 0  "00000000110000000011000000010101"   // (R[6]) = nez_1_B1 (R[6]); 

// m167;   next: m196 (next offset: 38)
000032  1 0  "00000000000001010010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[5]); 
000033  1 0  "00010000100001000000000000011111"   // (R[4]) = _ad_const_3_B1 (R[4]); 
000034  1 0  "00000000110001010010100000010111"   // (R[5]) = _rs_1_B1 (R[6],R[5]); 
000035  1 0  "00000000110001000010000000010010"   // (R[4]) = _ls_1_B1 (R[6],R[4]); 
000036  1 0  "00000000100000000011000000010101"   // (R[6]) = nez_1_B1 (R[4]); 
000037  1 0  "00000000101001100011000000001010"   // (R[6]) = _or_1_B1 (R[5],R[6]); 

// m196;   next: m86 (next offset: 38)

// m77;   next: m86 (next offset: 38)

// m86;   next: m197 (next offset: 40)
000038  1 0  "00010000110001110000000001111111"   // (R[7]) = _ad_const_2_B1 (R[6]); 
000039  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m98;   next: m197 (next offset: 40)

// m197;   next: m159 (next offset: 40)

// m100;   next: m159 (next offset: 40)

// m159;   next: m105, jump target: m106 (next offset: 51)
000040  1 0  "10110000111001000000000001000000"   // (R[4]) = _er_const_1_B1 (R[7]); 
000041  1 0  "00000000100000000011100000001011"   // (R[7]) = eqz_1_B1 (R[4]); 
000042  1 0  "00001000110001000000000001000000"   // (R[4],MC) = _pl_const_1_B1 (R[6]); 
000043  1 0  "00010000111001100000000000000001"   // (R[6]) = _ad_const_1_B1 (R[7]); 
000044  1 0  "00001000000001111111111111111111"   // (R[7]) = const_1_B1 (); 
000045  1 0  "10011100100001000000000000000111"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000046  1 0  "00000000110001110011000000011010"   // (R[6]) = _er_1_B1 (R[6],R[7]); 
000047  1 0  "00000000100001100011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[6]); 
000048  1 0  "00100000110000000000000000000010"   // () = nez_br_const_1_B1 (R[6],2); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m105;   next: m110 (next offset: 52)
000051  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m106;   next: m110 (next offset: 52)

// m110 (next offset: /)
000052  1 0  "10001000101001010000000000010111"   // (R[5]) = _ls_const_1_B1 (R[5]); 
000053  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000054  1 0  "00000000011001010010100000000001"   // (R[5],) = _pl_1_B1 (R[3],R[5]); 
000055  1 0  "00000000101001100001100000000001"   // (R[3],) = _pl_1_B1 (R[5],R[6]); 

