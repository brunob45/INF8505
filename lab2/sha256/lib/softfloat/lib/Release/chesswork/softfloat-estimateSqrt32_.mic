
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:19 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-estimateSqrt32_ tlx


// m38;   next: m78, jump target: m67 (next offset: 10)
000000  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (12,SP,SP); 
000001  1 0  "10011100101001100000000000011011"   // (R[6]) = _rs_const_3_B1 (R[5]); 
000002  1 0  "00010000110001110000000000001111"   // (R[7]) = _ad_const_1_B1 (R[6]); 
000003  1 0  "00010000100001100000000000000001"   // (R[6]) = _ad_const_2_B1 (R[4]); 
000004  1 0  "10011100101000110000000000010001"   // (R[3]) = _rs_const_4_B1 (R[5]); 
000005  1 0  "10101000001001011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[5],SP,-4); 
000006  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000007  1 0  "00100000110000000000000000011100"   // () = nez_br_const_2_B1 (R[6],28); 
000008  1 0  "10001000111001110000000000000001"   // (R[7]) = _ls_const_3_B1 (R[7]); 
000009  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m78;   next: m79 (next offset: 19)
000010  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000011  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000012  1 0  "00000000101001110010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[7]); 
000013  1 0  "00001100011001101000000000000000"   // (R[6],MC) = _pl_const_1_B1 (R[3]); 
000014  1 0  "01001100101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 
000015  1 0  "00000000110001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[6],R[5]); 
000016  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000017  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m79 subroutine call;   next: m76 (next offset: 19)

// m76;   next: m12, jump target: m11 (next offset: 27)
000019  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000020  1 0  "00000000011001000010100000000001"   // (R[5],) = _pl_1_B1 (R[3],R[4]); 
000021  1 0  "01001000000001000000000000000010"   // (R[4]) = const_2_B1 (); 
000022  1 0  "00000000101001000001100000001101"   // (R[3]) = _ge_1_B1 (R[5],R[4]); 
000023  1 0  "00001000000001101000000000000000"   // (R[6]) = const_3_B1 (); 
000024  1 0  "00100000011000000000000000000011"   // () = nez_br_const_1_B1 (R[3],3); 
000025  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000026  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 

// m12;   next: m14 (next offset: 29)
000027  1 0  "10001000101001100000000000001111"   // (R[6]) = _ls_const_1_B1 (R[5]); 
000028  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 

// m11;   next: m14 (next offset: 29)

// m14;   next: m20, jump target: m24 (next offset: 33)
000029  1 0  "00000000110001000010100000001111"   // (R[5]) = _gt_1_B1 (R[6],R[4]); 
000030  1 0  "00100000101000000000000000010101"   // () = nez_br_const_1_B1 (R[5],21); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000032  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m20 (next offset: 37)
000033  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000034  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000035  1 0  "10011000100000110000000000000001"   // (R[3]) = _rs_const_2_B1 (R[4]); 
000036  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m67;   next: m68 (next offset: 46)
000037  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000038  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000039  1 0  "00000000101001110010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[7]); 
000040  1 0  "00001000011001100100000000000000"   // (R[6],MC) = _pl_const_2_B1 (R[3]); 
000041  1 0  "01001100101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 
000042  1 0  "00000000110001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[6],R[5]); 
000043  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000044  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m68 subroutine call;   next: m65 (next offset: 46)

// m65;   next: m24 (next offset: 53)
000046  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000047  1 0  "10001000011001010000000000001110"   // (R[5]) = _ls_const_2_B1 (R[3]); 
000048  1 0  "10001000100001000000000000001111"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000049  1 0  "00000000100001010011000000000001"   // (R[6],) = _pl_1_B1 (R[5],R[4]); 
000050  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000051  1 0  "10011100100001000000000000000001"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000052  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 

// m24;   next: m25 (next offset: 55)
000053  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000054  1 0  "01001000000001010000000000000000"   // (R[5]) = const_1_B3 (); 

// m25 subroutine call;   next: m28 (next offset: 55)

// m28 (next offset: /)
000055  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000056  1 0  "10011100100001100000000000000001"   // (R[6]) = _rs_const_1_B1 (R[4]); 
000057  1 0  "10011100011001010000000000000001"   // (R[5]) = _rs_const_1_B1 (R[3]); 
000058  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000059  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000060  1 0  "00000000101001100001100000000001"   // (R[3],) = _pl_1_B1 (R[5],R[6]); 
000061  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

