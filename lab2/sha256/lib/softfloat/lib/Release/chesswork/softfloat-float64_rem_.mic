
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:33 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float64_rem_ tlx


// m378;   next: m386, jump target: m32 (next offset: 26)
000000  1 0  "00001000001000010000000001001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (72,SP,SP); 
000001  1 0  "01001000000000110000000000001111"   // (R[3]) = lhi_const_1_B1 (15); 
000002  1 0  "10011100100010000000000000010100"   // (R[8]) = _rs_const_6_B1 (R[4]); 
000003  1 0  "01010100011010111111111111111111"   // (R[11]) = w32_const_bor_1_B1 (R[3],65535); 
000004  1 0  "10011100100010100000000000011111"   // (R[10]) = _rs_const_7_B1 (R[4]); 
000005  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000006  1 0  "00000000100010110010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[11]); 
000007  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000008  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[5]); 
000009  1 0  "00010001000011000000011111111111"   // (R[12]) = _ad_const_3_B1 (R[8]); 
000010  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000011  1 0  "10011100110010010000000000010100"   // (R[9]) = _rs_const_6_B1 (R[6]); 
000012  1 0  "01010100111000110000000000000000"   // R[3] = R[7]; 
000013  1 0  "00000000110010110011100000000011"   // (R[7]) = _ad_1_B1 (R[6],R[11]); 
000014  1 0  "00010001001001010000011111111111"   // (R[5]) = _ad_const_3_B1 (R[9]); 
000015  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000016  1 0  "10101000001011001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[12],SP,-20); 
000017  1 0  "00000000011001110100000000001010"   // (R[8]) = _or_1_B1 (R[7],R[3]); 
000018  1 0  "00000000100000000010000000010101"   // (R[4]) = nez_1_B1 (R[4]); 
000019  1 0  "10010101100011000000011111111111"   // (R[12]) = _ne_const_1_B1 (R[12]); 
000020  1 0  "10010100101011010000011111111111"   // (R[13]) = _ne_const_1_B1 (R[5]); 
000021  1 0  "10101000001010101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[10],SP,-24); 
000022  1 0  "10101000001000101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[2],SP,-28); 
000023  1 0  "00100001100000000000000000001111"   // () = nez_br_const_1_B1 (R[12],15); 
000024  1 0  "01100100101010110000011111111111"   // (R[11]) = _eq_const_1_B1 (R[5]); 
000025  1 0  "00000001000000000100100000010101"   // (R[9]) = nez_1_B1 (R[8]); 

// m386;   next: m25, jump target: m1 (next offset: 31)
000026  1 0  "00000001001010110010100000000011"   // (R[5]) = land_1_B1 (R[11],R[9]); 
000027  1 0  "00000000100001010011100000001010"   // (R[7]) = lor_1_B1 (R[4],R[5]); 
000028  1 0  "00010100111000000000000000100011"   // () = eqz_br_const_1_B1 (R[7],35); 
000029  1 0  "01010000001001001111111110110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 
000030  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m25;   next: m26 (next offset: 33)
000031  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000032  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 

// m26 subroutine call;   next: m28 (next offset: 33)

// m28 (next offset: 40)
000033  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000034  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000035  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000036  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000037  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000038  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000039  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 

// m32;   next: m655 (next offset: 40)

// m655;   next: m651, jump target: m50 (next offset: 43)
000040  1 0  "00100001101000000000000000010001"   // () = nez_br_const_1_B1 (R[13],17); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000042  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m651;   next: m42, jump target: m46 (next offset: 46)
000043  1 0  "00010101000000000000000000001010"   // () = eqz_br_const_2_B1 (R[8],10); 
000044  1 0  "01010000001001001111111110110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 
000045  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m42;   next: m43 (next offset: 48)
000046  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000047  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 

// m43 subroutine call;   next: m45 (next offset: 48)

// m45 (next offset: 55)
000048  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000049  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000050  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000051  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000052  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000053  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000054  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 

// m46;   next: m49 (next offset: 56)
000055  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m49 (next offset: 59)
000056  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000057  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50;   next: m389 (next offset: 59)

// m389;   next: m653, jump target: m67 (next offset: 62)
000059  1 0  "00100000101000000000000000010011"   // () = br_nez_const_1_B1 (R[5],19); 
000060  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000061  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m653;   next: m663, jump target: m63 (next offset: 65)
000062  1 0  "00100001000000000000000000001001"   // () = br_nez_const_1_B1 (R[8],9); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m663;   next: m1 (next offset: 65)

// m1;   next: m62 (next offset: 65)

// m62 (next offset: 73)
000065  1 0  "01001000000001010111111111111111"   // (R[5]) = lhi_const_1_B1 (32767); 
000066  1 0  "01010100101001001111111111111111"   // (R[4]) = w32_const_bor_1_B1 (R[5],65535); 
000067  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000068  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000069  1 0  "00001000000001011111111111111111"   // (R[5]) = const_5_B1 (); 
000070  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000071  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000072  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 

// m63;   next: m65 (next offset: 73)

// m65;   next: m66 (next offset: 78)
000073  1 0  "01010100101001100000000000000000"   // R[6] = R[5]; 
000074  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000075  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 
000076  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000077  1 0  "01010100101010000000000000000000"   // R[8] = R[5]; 

// m66 subroutine call;   next: m656 (next offset: 78)

// m656;   next: m395 (next offset: 80)
000078  1 0  "01010101000000110000000000000000"   // R[3] = R[8]; 
000079  1 0  "01010100110001010000000000000000"   // R[5] = R[6]; 

// m67;   next: m395 (next offset: 80)

// m395;   next: m654, jump target: m83 (next offset: 85)
000080  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000081  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000082  1 0  "00100000110000000000000000010011"   // () = br_nez_const_1_B1 (R[6],19); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000084  1 0  "01010000001010001111111110110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m654;   next: m78, jump target: m79 (next offset: 89)
000085  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000086  1 0  "00100000101000000000000000000101"   // () = br_nez_const_1_B1 (R[5],5); 
000087  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m78 (next offset: 93)
000089  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000090  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000091  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m79;   next: m81 (next offset: 93)

// m81;   next: m82 (next offset: 98)
000093  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000094  1 0  "01010000001001011111111110110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000095  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000096  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000097  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 

// m82 subroutine call;   next: m657 (next offset: 98)

// m657;   next: m85 (next offset: 103)
000098  1 0  "01010100111001000000000000000000"   // R[4] = R[7]; 
000099  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000100  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000101  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000102  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 

// m83;   next: m85 (next offset: 103)

// m85;   next: m90, jump target: m91 (next offset: 108)
000103  1 0  "00000000110001010011000000011000"   // (R[6],MC) = _mi_2_B1 (R[6],R[5]); 
000104  1 0  "01101100110001011111111111111111"   // (R[5]) = _ge_const_3_B1 (R[6]); 
000105  1 0  "00100000101000000000000000000101"   // () = nez_br_const_1_B1 (R[5],5); 
000106  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000107  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90 (next offset: 112)
000108  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000109  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000110  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 
000111  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m91;   next: m405 (next offset: 112)

// m405;   next: m97, jump target: m96 (next offset: 121)
000112  1 0  "00000000110000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[6]); 
000113  1 0  "01010100000001000000000000001011"   // (R[4]) = const_4_B2 (); 
000114  1 0  "00000000100001010101000000011000"   // (R[10],MC) = _mi_1_B1 (R[4],R[5]); 
000115  1 0  "00000001000010100010100000010010"   // (R[5]) = _ls_1_B1 (R[8],R[10]); 
000116  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000117  1 0  "01001000000010010000000000010000"   // (R[9]) = const_3_B1 (); 
000118  1 0  "00010101010000000000000000000110"   // () = eqz_br_const_2_B1 (R[10],6); 
000119  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000120  1 0  "00000000100010010010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[9]); 

// m97;   next: m420 (next offset: 126)
000121  1 0  "00000000000010100101100000011000"   // (R[11],MC) = _mi_const_1_B1 (R[10]); 
000122  1 0  "00010001011010110000000000011111"   // (R[11]) = _ad_const_2_B1 (R[11]); 
000123  1 0  "00000000100010100010000000010010"   // (R[4]) = _ls_1_B1 (R[4],R[10]); 
000124  1 0  "00000001000010110100000000010111"   // (R[8]) = _rs_1_B1 (R[8],R[11]); 
000125  1 0  "00000000100010000010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[8]); 

// m96;   next: m420 (next offset: 126)

// m420;   next: m123, jump target: m125 (next offset: 139)
000126  1 0  "00000000111010010011100000001010"   // (R[7]) = _or_2_B1 (R[7],R[9]); 
000127  1 0  "10001000011010000000000000001011"   // (R[8]) = _ls_const_4_B1 (R[3]); 
000128  1 0  "10001000111001110000000000001011"   // (R[7]) = _ls_const_4_B1 (R[7]); 
000129  1 0  "10011100011000110000000000010101"   // (R[3]) = _rs_const_5_B1 (R[3]); 
000130  1 0  "00000000011001110001100000001010"   // (R[3]) = _or_1_B1 (R[7],R[3]); 
000131  1 0  "00000001000001010011100000010001"   // (R[7]) = _le_1_B1 (R[8],R[5]); 
000132  1 0  "00000000011001000100100000001011"   // (R[9]) = _eq_1_B1 (R[3],R[4]); 
000133  1 0  "00000000011001000101000000010100"   // (R[10]) = _lt_1_B1 (R[3],R[4]); 
000134  1 0  "00000000111010010011100000000011"   // (R[7]) = land_1_B1 (R[9],R[7]); 
000135  1 0  "00000000111010100100100000001010"   // (R[9]) = lor_1_B1 (R[10],R[7]); 
000136  1 0  "00010101001000000000000000000100"   // () = eqz_br_const_1_B1 (R[9],4); 
000137  1 0  "10101000001010001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[8],SP,-32); 
000138  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 

// m123;   next: m162 (next offset: 142)
000139  1 0  "00000000101010000010100000011000"   // (R[5],MC) = sub_1_B1 (R[5],R[8]); 
000140  1 0  "00000000100000110010000000011001"   // (R[4],MC) = subx_1_B1 (R[4],R[3],MC); 
000141  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 

// m125;   next: m162 (next offset: 142)

// m162, jump target: m2 (next offset: 153)
000142  1 0  "10011101000001110000000000010000"   // (R[7]) = _rs_const_3_B1 (R[8]); 
000143  1 0  "10011100011010100000000000010000"   // (R[10]) = _rs_const_3_B1 (R[3]); 
000144  1 0  "00010001000010001111111111111111"   // (R[8]) = __ushort_1_B1 (R[8]); 
000145  1 0  "00010000011000111111111111111111"   // (R[3]) = __ushort_1_B1 (R[3]); 
000146  1 0  "00001000110001101111111111100000"   // (R[6],MC) = _pl_const_5_B1 (R[6]); 
000147  1 0  "10101000001010011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[9],SP,-36); 
000148  1 0  "01111100001001111111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[7],SP,-40); 
000149  1 0  "01111100001010001111111111010110"   // (__spill_DMh[-42]) = stack_store_bndl_B2 (R[8],SP,-42); 
000150  1 0  "01111100001010101111111111010100"   // (__spill_DMh[-44]) = stack_store_bndl_B2 (R[10],SP,-44); 
000151  1 0  "00100100000000000000000001100001"   // () = j_const_1_B1 (97); 
000152  1 0  "01111100001000111111111111011010"   // (__spill_DMh[-38]) = stack_store_bndl_B2 (R[3],SP,-38); 

// m134;   next: m135 (next offset: 156)
000153  1 0  "10101000001001001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[4],SP,-52); 
000154  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000155  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m135 subroutine call;   next: m136 (next offset: 156)

// m136;   next: m139, jump target: m140 (next offset: 160)
000156  1 0  "10000100011001010000000000000100"   // (R[5]) = _le_const_1_B1 (R[3]); 
000157  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000158  1 0  "01001000000001000000000000000000"   // (R[4]) = const_2_B3 (); 
000159  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 

// m139;   next: m510 (next offset: 162)
000160  1 0  "00001000011001001111111111111100"   // (R[4],MC) = _pl_const_1_B1 (R[3]); 
000161  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 

// m140;   next: m510 (next offset: 162)

// m510;   next: m511 (next offset: 168)
000162  1 0  "00010000100001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[4]); 
000163  1 0  "10011100100000110000000000010000"   // (R[3]) = _rs_const_3_B1 (R[4]); 
000164  1 0  "01111100001000111111111111001010"   // (__spill_DMh[-54]) = stack_store_bndl_B2 (R[3],SP,-54); 
000165  1 0  "01111100001001011111111111001000"   // (__spill_DMh[-56]) = stack_store_bndl_B2 (R[5],SP,-56); 
000166  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000167  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 

// m511 subroutine call;   next: m514 (next offset: 168)

// m514;   next: m515 (next offset: 172)
000168  1 0  "01001100001001001111111111010110"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000169  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000170  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000171  1 0  "01001100001001011111111111001010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 

// m515 subroutine call;   next: m518 (next offset: 172)

// m518;   next: m519 (next offset: 176)
000172  1 0  "01001100001001001111111111011000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000173  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000174  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000175  1 0  "01001100001001011111111111001000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 

// m519 subroutine call;   next: m522 (next offset: 176)

// m522;   next: m523 (next offset: 180)
000176  1 0  "01001100001001001111111111011000"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000177  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000178  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000179  1 0  "01001100001001011111111111001010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 

// m523 subroutine call;   next: m526 (next offset: 180)

// m526;   next: m530, jump target: m529 (next offset: 187)
000180  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000181  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000182  1 0  "00000000100001010011100000000001"   // (R[7],MC) = _pl_1_B1 (R[4],R[5]); 
000183  1 0  "00000000111001010010100000010100"   // (R[5]) = _lt_1_B1 (R[7],R[5]); 
000184  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000185  1 0  "01001000000001000000000000000001"   // (R[4]) = const_1_B1 (); 
000186  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m530;   next: m534 (next offset: 188)
000187  1 0  "01001000000001000000000000000000"   // (R[4]) = const_2_B3 (); 

// m529;   next: m534 (next offset: 188)

// m534;   next: m535 (next offset: 201)
000188  1 0  "10001000111001010000000000010000"   // (R[5]) = _ls_const_2_B1 (R[7]); 
000189  1 0  "10011100111001110000000000010000"   // (R[7]) = _rs_const_2_B1 (R[7]); 
000190  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000191  1 0  "00000000101001100011000000000001"   // (R[6],MC) = _pl_1_B1 (R[6],R[5]); 
000192  1 0  "00000000100001110010000000000001"   // (R[4],MC) = _pl_2_B1 (R[4],R[7]); 
000193  1 0  "00000000011001000001100000000001"   // (R[3],MC) = _pl_1_B1 (R[3],R[4]); 
000194  1 0  "00000000110001010010100000010100"   // (R[5]) = _lt_1_B1 (R[6],R[5]); 
000195  1 0  "00000000011001010001100000000001"   // (R[3],MC) = _pl_3_B1 (R[3],R[5]); 
000196  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000197  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000198  1 0  "10101000001001101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[6],SP,-60); 
000199  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000200  1 0  "01001100001001011111111111001000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 

// m535 subroutine call;   next: m538 (next offset: 201)

// m538;   next: m539 (next offset: 205)
000201  1 0  "01001100001001001111111111011010"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
000202  1 0  "10101000001000111111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[3],SP,-68); 
000203  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000204  1 0  "01001100001001011111111111001010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 

// m539 subroutine call;   next: m542 (next offset: 205)

// m542;   next: m543 (next offset: 209)
000205  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 
000206  1 0  "10101000001000111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[3],SP,-72); 
000207  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000208  1 0  "01001100001001011111111111001000"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-56],SP,-56); 

// m543 subroutine call;   next: m546 (next offset: 209)

// m546;   next: m547 (next offset: 213)
000209  1 0  "01001100001001011111111111001010"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-54],SP,-54); 
000210  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000211  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000212  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 

// m547 subroutine call;   next: m550 (next offset: 213)

// m550;   next: m554, jump target: m553 (next offset: 220)
000213  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000214  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000215  1 0  "00000000100001010010000000000001"   // (R[4],MC) = _pl_1_B1 (R[4],R[5]); 
000216  1 0  "00000000100001010011000000010100"   // (R[6]) = _lt_1_B1 (R[4],R[5]); 
000217  1 0  "00100000110000000000000000000010"   // () = nez_br_const_1_B1 (R[6],2); 
000218  1 0  "01001000000001010000000000000001"   // (R[5]) = const_1_B1 (); 
000219  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m554;   next: m508 (next offset: 221)
000220  1 0  "01001000000001010000000000000000"   // (R[5]) = const_2_B3 (); 

// m553;   next: m508 (next offset: 221)

// m508;   next: m155 (next offset: 245)
000221  1 0  "10011100100001100000000000010000"   // (R[6]) = _rs_const_2_B1 (R[4]); 
000222  1 0  "00000000101001100010100000000001"   // (R[5],MC) = _pl_2_B1 (R[5],R[6]); 
000223  1 0  "10001000100001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[4]); 
000224  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000225  1 0  "00000000100001110011000000000001"   // (R[6],MC) = _pl_1_B1 (R[7],R[4]); 
000226  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_1_B1 (R[3],R[5]); 
000227  1 0  "00000000110001000001100000010100"   // (R[3]) = _lt_1_B1 (R[6],R[4]); 
000228  1 0  "00000000011001010001100000000001"   // (R[3],MC) = _pl_3_B1 (R[5],R[3]); 
000229  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000230  1 0  "00000000101001100010000000000001"   // (R[4],MC) = add_1_B1 (R[6],R[5]); 
000231  1 0  "10001000100001010000000000011101"   // (R[5]) = _ls_const_3_B1 (R[4]); 
000232  1 0  "00000000011000000001100000000010"   // (R[3],MC) = addx_const_1_B3 (R[3],MC); 
000233  1 0  "10011100100001000000000000000011"   // (R[4]) = _rs_const_4_B1 (R[4]); 
000234  1 0  "10001000011000110000000000011101"   // (R[3]) = _ls_const_3_B1 (R[3]); 
000235  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000236  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000237  1 0  "01010000001010001111111111001100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000238  1 0  "10001001000010000000000000011101"   // (R[8]) = _ls_const_3_B1 (R[8]); 
000239  1 0  "10011100111001110000000000000011"   // (R[7]) = _rs_const_4_B1 (R[7]); 
000240  1 0  "10011100110001100000000000000011"   // (R[6]) = _rs_const_4_B1 (R[6]); 
000241  1 0  "00000000011001000010000000001010"   // (R[4]) = _or_1_B1 (R[3],R[4]); 
000242  1 0  "00000000111010000011100000001010"   // (R[7]) = _or_1_B1 (R[8],R[7]); 
000243  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_1_B1 (R[5],R[6]); 
000244  1 0  "01010000001000111111111111010000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m155 chess_separator_scheduler;   next: m156 (next offset: 245)

// m156;   next: m157 (next offset: 247)
000245  1 0  "00000000000001010010100000011000"   // (R[5],MC) = sub_const_1_B1 (R[5]); 
000246  1 0  "00000000111001000010000000011001"   // (R[4],MC) = subx_1_B1 (R[7],R[4],MC); 

// m157 chess_separator_scheduler;   next: m158 (next offset: 247)

// m158;   next: m2 (next offset: 249)
000247  1 0  "00001000011001101111111111100011"   // (R[6],MC) = _pl_const_4_B1 (R[3]); 
000248  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 

// m2;   next: m159 (next offset: 249)

// m159;   next: m164, jump target: m134 (next offset: 253)
000249  1 0  "00000000110000000001100000001110"   // (R[3]) = _gt_const_2_B2 (R[6]); 
000250  1 0  "00100000011000001111111110011101"   // () = nez_br_const_1_B1 (R[3],-99); 
000251  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000252  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m164;   next: m258, jump target: m168 (next offset: 265)
000253  1 0  "01010000001000111111111111100000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000254  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000255  1 0  "10011100011010000000000000001000"   // (R[8]) = _rs_const_1_B1 (R[3]); 
000256  1 0  "10001000110001110000000000011000"   // (R[7]) = _ls_const_1_B1 (R[6]); 
000257  1 0  "00000000111010000100000000001010"   // (R[8]) = _or_1_B1 (R[7],R[8]); 
000258  1 0  "10011100110000110000000000001000"   // (R[3]) = _rs_const_1_B1 (R[6]); 
000259  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000260  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000261  1 0  "01110100111000111111111111100000"   // (R[3]) = _gt_const_1_B1 (R[7]); 
000262  1 0  "00100000011000000000000000001001"   // () = nez_br_const_1_B1 (R[3],9); 
000263  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000264  1 0  "10101000001010001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[8],SP,-16); 

// m258, jump target: m648 (next offset: 273)
000265  1 0  "10001000100000110000000000011000"   // (R[3]) = _ls_const_1_B1 (R[4]); 
000266  1 0  "10011100100001100000000000001000"   // (R[6]) = _rs_const_1_B1 (R[4]); 
000267  1 0  "10011100101001010000000000001000"   // (R[5]) = _rs_const_1_B1 (R[5]); 
000268  1 0  "01010000001010011111111111110000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000269  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000270  1 0  "01010000001010001111111111100000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000271  1 0  "00100100000000000000000001111011"   // () = j_const_1_B1 (123); 
000272  1 0  "00000000011001010011100000001010"   // (R[7]) = _or_1_B1 (R[3],R[5]); 

// m168;   next: m169 (next offset: 275)
000273  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000274  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m169 subroutine call;   next: m170 (next offset: 275)

// m170;   next: m173, jump target: m174 (next offset: 279)
000275  1 0  "10000100011001000000000000000100"   // (R[4]) = _le_const_1_B1 (R[3]); 
000276  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000277  1 0  "01001000000001010000000000000000"   // (R[5]) = const_2_B3 (); 
000278  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m173;   next: m195 (next offset: 280)
000279  1 0  "00001000011001011111111111111100"   // (R[5],MC) = _pl_const_1_B1 (R[3]); 

// m174;   next: m195 (next offset: 280)

// m195;   next: m429, jump target: m425 (next offset: 289)
000280  1 0  "01010000001000111111111111010000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000281  1 0  "00001000011001000000000000011000"   // (R[4],MC) = _pl_const_3_B1 (R[3]); 
000282  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 
000283  1 0  "00000000100000000011100000010011"   // (R[7]) = _lt_const_1_B2 (R[4]); 
000284  1 0  "00000000000001000011000000011000"   // (R[6],MC) = _mi_const_1_B1 (R[4]); 
000285  1 0  "00000000101000110010100000010111"   // (R[5]) = _rs_1_B1 (R[5],R[3]); 
000286  1 0  "00100000111000000000000000001011"   // () = nez_br_const_1_B1 (R[7],11); 
000287  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000288  1 0  "00010000110000110000000000011111"   // (R[3]) = _ad_const_2_B1 (R[6]); 

// m429;   next: m223, jump target: m586 (next offset: 293)
000289  1 0  "01010000001010001111111111011000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000290  1 0  "00010100100000000000000000011110"   // () = eqz_br_const_2_B1 (R[4],30); 
000291  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000292  1 0  "00000000111001000011000000010010"   // (R[6]) = _ls_1_B1 (R[7],R[4]); 

// m223, jump target: m586 (next offset: 299)
000293  1 0  "00000001000001000010000000010010"   // (R[4]) = _ls_1_B1 (R[8],R[4]); 
000294  1 0  "00000000111000110001100000010111"   // (R[3]) = _rs_1_B1 (R[7],R[3]); 
000295  1 0  "00000000011001000001100000001010"   // (R[3]) = _or_1_B1 (R[4],R[3]); 
000296  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000297  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000298  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m425;   next: m204, jump target: m202 (next offset: 302)
000299  1 0  "00010100110000000000000000010100"   // () = eqz_br_const_2_B1 (R[6],20); 
000300  1 0  "00000000000001100010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[6]); 
000301  1 0  "00010000100001110000000000011111"   // (R[7]) = _ad_const_2_B1 (R[4]); 

// m204;   next: m209, jump target: m207 (next offset: 306)
000302  1 0  "10001100110010000000000000100000"   // (R[8]) = _lt_const_2_B1 (R[6]); 
000303  1 0  "00100001000000000000000000001001"   // () = nez_br_const_1_B1 (R[8],9); 
000304  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000305  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m209;   next: m212, jump target: m213 (next offset: 310)
000306  1 0  "01101100110010000000000001000000"   // (R[8]) = _ge_const_2_B1 (R[6]); 
000307  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000308  1 0  "01001000000001110000000000000000"   // (R[7]) = const_2_B3 (); 
000309  1 0  "01010100111001100000000000000000"   // R[6] = R[7]; 

// m212;   next: m658 (next offset: 311)
000310  1 0  "00000000100000110011000000010111"   // (R[6]) = _rs_1_B1 (R[4],R[3]); 

// m213;   next: m658 (next offset: 311)

// m658, jump target: m586 (next offset: 314)
000311  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000312  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000313  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m207, jump target: m586 (next offset: 321)
000314  1 0  "00000000100001110011100000010010"   // (R[7]) = _ls_1_B1 (R[4],R[7]); 
000315  1 0  "00000000100001100010000000010111"   // (R[4]) = _rs_1_B1 (R[4],R[6]); 
000316  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000317  1 0  "00000000011001100001100000010111"   // (R[3]) = _rs_1_B1 (R[3],R[6]); 
000318  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000319  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000320  1 0  "00000000011001110011000000001010"   // (R[6]) = _or_1_B1 (R[7],R[3]); 

// m202;   next: m586 (next offset: 322)
000321  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m586;   next: m587 (next offset: 334)
000322  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000323  1 0  "10011100100000110000000000010000"   // (R[3]) = _rs_const_3_B1 (R[4]); 
000324  1 0  "10011100101001110000000000010000"   // (R[7]) = _rs_const_3_B1 (R[5]); 
000325  1 0  "00010000100001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[4]); 
000326  1 0  "00010000101001011111111111111111"   // (R[5]) = __ushort_1_B1 (R[5]); 
000327  1 0  "01111100001001111111111111110110"   // (__spill_DMh[-10]) = stack_store_bndl_B2 (R[7],SP,-10); 
000328  1 0  "01111100001001011111111111010110"   // (__spill_DMh[-42]) = stack_store_bndl_B2 (R[5],SP,-42); 
000329  1 0  "01111100001000111111111111110100"   // (__spill_DMh[-12]) = stack_store_bndl_B2 (R[3],SP,-12); 
000330  1 0  "01111100001001001111111111010100"   // (__spill_DMh[-44]) = stack_store_bndl_B2 (R[4],SP,-44); 
000331  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000332  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000333  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m587 subroutine call;   next: m590 (next offset: 334)

// m590;   next: m591 (next offset: 338)
000334  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 
000335  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000336  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000337  1 0  "01001100001001011111111111110110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-10],SP,-10); 

// m591 subroutine call;   next: m594 (next offset: 338)

// m594;   next: m595 (next offset: 342)
000338  1 0  "01001100001001001111111111110100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-12],SP,-12); 
000339  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000340  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000341  1 0  "01001100001001011111111111010110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 

// m595 subroutine call;   next: m598 (next offset: 342)

// m598;   next: m599 (next offset: 346)
000342  1 0  "01001100001001001111111111110100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-12],SP,-12); 
000343  1 0  "10101000001000111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[3],SP,-60); 
000344  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000345  1 0  "01001100001001011111111111110110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-10],SP,-10); 

// m599 subroutine call;   next: m602 (next offset: 346)

// m602;   next: m606, jump target: m605 (next offset: 353)
000346  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000347  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000348  1 0  "00000000100001010100000000000001"   // (R[8],MC) = _pl_1_B1 (R[4],R[5]); 
000349  1 0  "00000001000001010010000000010100"   // (R[4]) = _lt_1_B1 (R[8],R[5]); 
000350  1 0  "00100000100000000000000000000010"   // () = nez_br_const_1_B1 (R[4],2); 
000351  1 0  "01001000000001100000000000000001"   // (R[6]) = const_1_B1 (); 
000352  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m606;   next: m610 (next offset: 354)
000353  1 0  "01001000000001100000000000000000"   // (R[6]) = const_2_B3 (); 

// m605;   next: m610 (next offset: 354)

// m610;   next: m611 (next offset: 370)
000354  1 0  "10001001000001000000000000010000"   // (R[4]) = _ls_const_2_B1 (R[8]); 
000355  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000356  1 0  "10011101000010000000000000010000"   // (R[8]) = _rs_const_2_B1 (R[8]); 
000357  1 0  "00000000100001110011100000000001"   // (R[7],MC) = _pl_1_B1 (R[7],R[4]); 
000358  1 0  "00000000110010000100000000000001"   // (R[8],MC) = _pl_2_B1 (R[6],R[8]); 
000359  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000360  1 0  "00000000111001000011100000010100"   // (R[7]) = _lt_1_B1 (R[7],R[4]); 
000361  1 0  "00000000011010000001100000000001"   // (R[3],MC) = _pl_1_B1 (R[3],R[8]); 
000362  1 0  "00010000101001001111111111111111"   // (R[4]) = __ushort_1_B1 (R[5]); 
000363  1 0  "10011100101001100000000000010000"   // (R[6]) = _rs_const_3_B1 (R[5]); 
000364  1 0  "00000000011001110001100000000001"   // (R[3],MC) = _pl_3_B1 (R[3],R[7]); 
000365  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000366  1 0  "01111100001001101111111111010100"   // (__spill_DMh[-44]) = stack_store_bndl_B2 (R[6],SP,-44); 
000367  1 0  "01111100001001001111111111110100"   // (__spill_DMh[-12]) = stack_store_bndl_B2 (R[4],SP,-12); 
000368  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000369  1 0  "01001100001001011111111111010110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 

// m611 subroutine call;   next: m614 (next offset: 370)

// m614;   next: m615 (next offset: 375)
000370  1 0  "01001100001001011111111111110110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-10],SP,-10); 
000371  1 0  "01001100001001001111111111110100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-12],SP,-12); 
000372  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000373  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000374  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m615 subroutine call;   next: m618 (next offset: 375)

// m618;   next: m619 (next offset: 380)
000375  1 0  "01001100001001011111111111010110"   // (R[5]) = stack_load_bndl_B2 (__spill_DMh[-42],SP,-42); 
000376  1 0  "01001100001001001111111111010100"   // (R[4]) = stack_load_bndl_B2 (__spill_DMh[-44],SP,-44); 
000377  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000378  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000379  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m619 subroutine call;   next: m584 (next offset: 380)

// m584;   next: m227 (next offset: 391)
000380  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000381  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_1_B1 (R[5],R[3]); 
000382  1 0  "10001000101001010000000000010000"   // (R[5]) = _ls_const_2_B1 (R[5]); 
000383  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000384  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_1_B1 (R[3],R[5]); 
000385  1 0  "01010000001000111111111111001000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000386  1 0  "00000000011001010010100000000001"   // (R[5],MC) = _pl_1_B1 (R[5],R[3]); 
000387  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000388  1 0  "01010000001010001111111111100000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000389  1 0  "01010000001000111111111111001100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000390  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m227 chess_separator_scheduler;   next: m228 (next offset: 391)

// m228;   next: m648 (next offset: 395)
000391  1 0  "00000000110000110011100000011000"   // (R[7],MC) = sub_1_B1 (R[6],R[3]); 
000392  1 0  "01010000001000111111111111011000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000393  1 0  "00000000011001010011000000011001"   // (R[6],MC) = subx_1_B1 (R[3],R[5],MC); 
000394  1 0  "01010000001010011111111111110000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m648;   next: m277 (next offset: 395)

// m277;   next: m452, jump target: m277 (next offset: 404)
000395  1 0  "01010100110001010000000000000000"   // R[5] = R[6]; 
000396  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_2_B1 (R[4]); 
000397  1 0  "01010100111000110000000000000000"   // R[3] = R[7]; 
000398  1 0  "00000000011010010011100000011000"   // (R[7],MC) = sub_1_B1 (R[3],R[9]); 
000399  1 0  "00000000101010000011000000011001"   // (R[6],MC) = subx_1_B1 (R[5],R[8],MC); 
000400  1 0  "00000000110000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[6]); 
000401  1 0  "00100001010000001111111111111000"   // () = nez_br_const_1_B1 (R[10],-8); 
000402  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000403  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m452;   next: m294, jump target: m295 (next offset: 416)
000404  1 0  "00000000011001110100100000000001"   // (R[9],MC) = add_1_B1 (R[7],R[3]); 
000405  1 0  "00000000101001100100000000000010"   // (R[8],MC) = addx_1_B1 (R[6],R[5],MC); 
000406  1 0  "00000001000010010100100000001010"   // (R[9]) = _or_1_B1 (R[8],R[9]); 
000407  1 0  "00010000100001000000000000000001"   // (R[4]) = _ad_const_1_B1 (R[4]); 
000408  1 0  "00000000100000000010000000010101"   // (R[4]) = nez_1_B1 (R[4]); 
000409  1 0  "00000001001000000100100000001011"   // (R[9]) = eqz_1_B1 (R[9]); 
000410  1 0  "00000000100010010010000000000011"   // (R[4]) = land_1_B1 (R[9],R[4]); 
000411  1 0  "00000001000000000100000000010011"   // (R[8]) = _lt_const_1_B2 (R[8]); 
000412  1 0  "00000000100010000010000000001010"   // (R[4]) = lor_1_B1 (R[8],R[4]); 
000413  1 0  "00010100100000000000000000000011"   // () = eqz_br_const_1_B1 (R[4],3); 
000414  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000415  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m294;   next: m297 (next offset: 418)
000416  1 0  "01010100101001100000000000000000"   // R[6] = R[5]; 
000417  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 

// m295;   next: m297 (next offset: 418)

// m297;   next: m303, jump target: m305 (next offset: 422)
000418  1 0  "00000000110000000010100000001100"   // (R[5]) = _ge_const_1_B2 (R[6]); 
000419  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000420  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000421  1 0  "00000000110000000001100000010011"   // (R[3]) = _lt_const_1_B2 (R[6]); 

// m303;   next: m307 (next offset: 424)
000422  1 0  "00000000000001110011100000011000"   // (R[7],MC) = sub_const_1_B1 (R[7]); 
000423  1 0  "00000000000001100011000000011001"   // (R[6],MC) = subx_const_1_B1 (R[6],MC); 

// m305;   next: m307 (next offset: 424)

// m307;   next: m308 (next offset: 428)
000424  1 0  "00000000011001000010000000011010"   // (R[4]) = _er_1_B1 (R[4],R[3]); 
000425  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000426  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000427  1 0  "00001000101001011111111111111100"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 

// m308 subroutine call;   next: m310 (next offset: 428)

// m310 (next offset: /)
000428  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000429  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000430  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000431  1 0  "10101000001001001111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[4],SP,-80); 
000432  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
000433  1 0  "10101000001001011111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[5],SP,-76); 
000434  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 

