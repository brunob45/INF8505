
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Jan 24 11:28:29 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float32_to_int32_ tlx


// m113;   next: m50, jump target: m7 (next offset: 12)
000000  1 0  "10011100100000110000000000010111"   // (R[3]) = _rs_const_1_B1 (R[4]); 
000001  1 0  "01001000000001010000000001111111"   // (R[5]) = lhi_const_1_B1 (127); 
000002  1 0  "00010000011000110000000011111111"   // (R[3]) = _ad_const_2_B1 (R[3]); 
000003  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000004  1 0  "00000000100001010011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[5]); 
000005  1 0  "00001000011001111111111101101010"   // (R[7],MC) = _pl_const_2_B1 (R[3]); 
000006  1 0  "01001000000010000000000010000000"   // (R[8]) = const_5_B1 (); 
000007  1 0  "00000000110010000100000000001010"   // (R[8]) = _or_2_B1 (R[6],R[8]); 
000008  1 0  "00000000111000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[7]); 
000009  1 0  "00100001010000000000000000011100"   // () = nez_br_const_2_B1 (R[10],28); 
000010  1 0  "10011100100001010000000000011111"   // (R[5]) = _rs_const_2_B1 (R[4]); 
000011  1 0  "00000000101000000100100000001011"   // (R[9]) = eqz_1_B1 (R[5]); 

// m50;   next: m54, jump target: m53 (next offset: 16)
000012  1 0  "10001100011001000000000001111110"   // (R[4]) = _lt_const_1_B1 (R[3]); 
000013  1 0  "00100000100000000000000000000110"   // () = nez_br_const_2_B1 (R[4],6); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m54, jump target: m60 (next offset: 21)
000016  1 0  "00000000000001110010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[7]); 
000017  1 0  "00010000111001100000000000011111"   // (R[6]) = _ad_const_1_B1 (R[7]); 
000018  1 0  "00000001000001000001100000010111"   // (R[3]) = _rs_1_B1 (R[8],R[4]); 
000019  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000020  1 0  "00000001000001100010000000010010"   // (R[4]) = _ls_1_B1 (R[8],R[6]); 

// m53;   next: m60 (next offset: 23)
000021  1 0  "00000000011001100010000000001010"   // (R[4]) = _or_1_B1 (R[3],R[6]); 
000022  1 0  "01001000000000110000000000000000"   // (R[3]) = const_4_B3 (); 

// m60;   next: m118, jump target: m70 (next offset: 27)
000023  1 0  "00000000100000000011000000001100"   // (R[6]) = _ge_const_1_B2 (R[4]); 
000024  1 0  "00100000110000000000000000000111"   // () = nez_br_const_2_B1 (R[6],7); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m118;   next: m67, jump target: m68 (next offset: 31)
000027  1 0  "10001000100001000000000000000001"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000028  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000029  1 0  "00001000011000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m67;   next: m126 (next offset: 33)
000031  1 0  "00001000000001001111111111111110"   // (R[4]) = const_1_B1 (); 
000032  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[3],R[4]); 

// m68;   next: m126 (next offset: 33)

// m126;   next: m127 (next offset: 33)

// m70;   next: m127 (next offset: 33)

// m127;   next: m75, jump target: m88 (next offset: 36)
000033  1 0  "00010100101000000000000000100000"   // () = br_eqz_const_1_B1 (R[5],32); 
000034  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000035  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m75 (next offset: 39)
000036  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000037  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m7;   next: m11, jump target: m41 (next offset: 43)
000039  1 0  "10001100011010100000000010011110"   // (R[10]) = _lt_const_2_B1 (R[3]); 
000040  1 0  "00100001010000000000000000010011"   // () = nez_br_const_2_B1 (R[10],19); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000042  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m11;   next: m101, jump target: m36 (next offset: 48)
000043  1 0  "01001000000001011100111100000000"   // (R[5]) = const_3_B1 (); 
000044  1 0  "00000000100001010010000000001011"   // (R[4]) = _eq_1_B1 (R[4],R[5]); 
000045  1 0  "00100000100000000000000000001011"   // () = nez_br_const_2_B1 (R[4],11); 
000046  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m101;   next: m33, jump target: m34 (next offset: 55)
000048  1 0  "00000000110000000010000000010101"   // (R[4]) = nez_1_B1 (R[6]); 
000049  1 0  "01100100011000110000000011111111"   // (R[3]) = _eq_const_1_B1 (R[3]); 
000050  1 0  "00000000011001000010000000000011"   // (R[4]) = land_1_B1 (R[3],R[4]); 
000051  1 0  "00000000100010010010000000001010"   // (R[4]) = lor_1_B1 (R[9],R[4]); 
000052  1 0  "00010100100000000000000000000100"   // () = eqz_br_const_1_B1 (R[4],4); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m33 (next offset: 58)
000055  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000056  1 0  "01001000000001000111111111111111"   // (R[4]) = lhi_const_1_B1 (32767); 
000057  1 0  "01010100100000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[4],65535); 

// m34;   next: m124 (next offset: 58)

// m124;   next: m40 (next offset: 58)

// m36;   next: m40 (next offset: 58)

// m40 (next offset: 61)
000058  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000059  1 0  "01001000000000111000000000000000"   // (R[3]) = const_2_B1 (); 
000060  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m41;   next: m43 (next offset: 61)

// m43;   next: m46, jump target: m47 (next offset: 64)
000061  1 0  "00010100101000000000000000000100"   // () = br_eqz_const_1_B1 (R[5],4); 
000062  1 0  "00000001000001110001100000010010"   // (R[3]) = _ls_1_B1 (R[8],R[7]); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46 (next offset: 67)
000064  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000065  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 
000066  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m47;   next: m88 (next offset: 67)

// m88 (next offset: /)
000067  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000068  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000069  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

