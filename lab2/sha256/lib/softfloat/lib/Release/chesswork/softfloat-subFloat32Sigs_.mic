
// File generated by mist version N-2018.03#7d02e3ca79#180723, Thu Feb 28 14:35:21 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-subFloat32Sigs_ tlx


// m5;   next: m173, jump target: m267 (next offset: 17)
000000  1 0  "01001000000000110000000001111111"   // (R[3]) = lhi_const_1_B1 (127); 
000001  1 0  "01010100011010001111111111111111"   // (R[8]) = w32_const_bor_1_B1 (R[3],65535); 
000002  1 0  "00000000100010000100100000000011"   // (R[9]) = _ad_1_B1 (R[4],R[8]); 
000003  1 0  "10011100100001110000000000010111"   // (R[7]) = _rs_const_1_B1 (R[4]); 
000004  1 0  "00000000101010000100000000000011"   // (R[8]) = _ad_1_B1 (R[5],R[8]); 
000005  1 0  "10011100101000110000000000010111"   // (R[3]) = _rs_const_1_B1 (R[5]); 
000006  1 0  "00010000111001110000000011111111"   // (R[7]) = _ad_const_2_B1 (R[7]); 
000007  1 0  "00010000011000110000000011111111"   // (R[3]) = _ad_const_2_B1 (R[3]); 
000008  1 0  "10001001000010110000000000000111"   // (R[11]) = _ls_const_2_B1 (R[8]); 
000009  1 0  "00000000111000110100000000011000"   // (R[8],MC) = _mi_1_B1 (R[7],R[3]); 
000010  1 0  "10001001001010100000000000000111"   // (R[10]) = _ls_const_2_B1 (R[9]); 
000011  1 0  "10010100111011010000000011111111"   // (R[13]) = _ne_const_1_B1 (R[7]); 
000012  1 0  "00000001000000000111000000001110"   // (R[14]) = _gt_const_1_B2 (R[8]); 
000013  1 0  "01001000000011000100000000000000"   // (R[12]) = const_4_B1 (); 
000014  1 0  "00100001110000000000000001000111"   // () = nez_br_const_1_B1 (R[14],71); 
000015  1 0  "00000001010011000100100000001010"   // (R[9]) = _or_3_B1 (R[10],R[12]); 
000016  1 0  "00000001011011000110000000001010"   // (R[12]) = _or_3_B1 (R[11],R[12]); 

// m173;   next: m266, jump target: m51 (next offset: 21)
000017  1 0  "00000001000000000111100000010011"   // (R[15]) = _lt_const_2_B2 (R[8]); 
000018  1 0  "00100001111000000000000000011101"   // () = nez_br_const_1_B1 (R[15],29); 
000019  1 0  "10110000110011100000000000000001"   // (R[14]) = _er_const_1_B1 (R[6]); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m266;   next: m169, jump target: m70 (next offset: 24)
000021  1 0  "00100001101000000000000000001010"   // () = nez_br_const_1_B1 (R[13],10); 
000022  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000023  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m169;   next: m63, jump target: m65 (next offset: 28)
000024  1 0  "00000001010010110011000000001010"   // (R[6]) = _or_2_B1 (R[10],R[11]); 
000025  1 0  "00010100110000000000000000000011"   // () = eqz_br_const_1_B1 (R[6],3); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000027  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m63;   next: m62 (next offset: 30)
000028  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m62 subroutine call;   next: m64 (next offset: 30)

// m64 (next offset: 30)

// m65;   next: m69 (next offset: 30)

// m69 (next offset: 33)
000030  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000031  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000032  1 0  "01010100110000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[6],65535); 

// m70;   next: m270 (next offset: 33)

// m270;   next: m75, jump target: m76 (next offset: 36)
000033  1 0  "00100000111000000000000000000011"   // () = br_nez_const_1_B1 (R[7],3); 
000034  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000035  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m75;   next: m78 (next offset: 38)
000036  1 0  "01010100000001110000000000000001"   // (R[7]) = const_2_B2 (); 
000037  1 0  "01010100000000110000000000000001"   // (R[3]) = const_2_B2 (); 

// m76;   next: m78 (next offset: 38)

// m78;   next: m83, jump target: m1 (next offset: 42)
000038  1 0  "00000001011010100010000000010100"   // (R[4]) = _lt_1_B1 (R[11],R[10]); 
000039  1 0  "00100000100000000000000001001101"   // () = nez_br_const_1_B1 (R[4],77); 
000040  1 0  "01010101010010010000000000000000"   // R[9] = R[10]; 
000041  1 0  "01010101011011000000000000000000"   // R[12] = R[11]; 

// m83;   next: m85 (next offset: 42)

// m85;   next: m90, jump target: m2 (next offset: 46)
000042  1 0  "00000001001011000011000000010100"   // (R[6]) = _lt_1_B1 (R[9],R[12]); 
000043  1 0  "00100000110000000000000000100110"   // () = nez_br_const_1_B1 (R[6],38); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90 (next offset: 49)
000046  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000047  1 0  "01001000000000110000000000000000"   // (R[3]) = const_3_B3 (); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m51;   next: m96 (next offset: 49)

// m96;   next: m177, jump target: m113 (next offset: 53)
000049  1 0  "10010100011001100000000011111111"   // (R[6]) = _ne_const_1_B1 (R[3]); 
000050  1 0  "00100000110000000000000000001010"   // () = nez_br_const_1_B1 (R[6],10); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m177;   next: m106, jump target: m108 (next offset: 56)
000053  1 0  "00010101011000000000000000000011"   // () = eqz_br_const_1_B1 (R[11],3); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m106;   next: m105 (next offset: 58)
000056  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m105 subroutine call;   next: m107 (next offset: 58)

// m107 (next offset: 58)

// m108;   next: m112 (next offset: 58)

// m112 (next offset: 62)
000058  1 0  "01001000000001000111111110000000"   // (R[4]) = const_1_B1 (); 
000059  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000060  1 0  "10001001110001100000000000011111"   // (R[6]) = _ls_const_1_B1 (R[14]); 
000061  1 0  "00000000100001100001100000000001"   // (R[3],) = _pl_1_B1 (R[6],R[4]); 

// m113;   next: m271 (next offset: 62)

// m271;   next: m118, jump target: m119 (next offset: 65)
000062  1 0  "00100000111000000000000000000011"   // () = br_nez_const_1_B1 (R[7],3); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m118;   next: m181 (next offset: 67)
000065  1 0  "00001001000010000000000000000001"   // (R[8],MC) = _pl_const_2_B1 (R[8]); 
000066  1 0  "01010101010010010000000000000000"   // R[9] = R[10]; 

// m119;   next: m181 (next offset: 67)

// m181;   next: m126, jump target: m124 (next offset: 71)
000067  1 0  "00000000000010000011000000011000"   // (R[6],MC) = _mi_const_1_B1 (R[8]); 
000068  1 0  "00010100110000000000000000001101"   // () = eqz_br_const_1_B1 (R[6],13); 
000069  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000070  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m126;   next: m262, jump target: m226 (next offset: 75)
000071  1 0  "10001100110001000000000000100000"   // (R[4]) = _lt_const_1_B1 (R[6]); 
000072  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000073  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000074  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m262, jump target: m272 (next offset: 77)
000075  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000076  1 0  "00000001001000000100100000010101"   // (R[9]) = nez_1_B1 (R[9]); 

// m226;   next: m272 (next offset: 83)
000077  1 0  "00000000000001100010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[6]); 
000078  1 0  "00010000100001000000000000011111"   // (R[4]) = _ad_const_1_B1 (R[4]); 
000079  1 0  "00000001001001000010000000010010"   // (R[4]) = _ls_1_B1 (R[9],R[4]); 
000080  1 0  "00000001001001100011000000010111"   // (R[6]) = _rs_1_B1 (R[9],R[6]); 
000081  1 0  "00000000100000000010000000010101"   // (R[4]) = nez_1_B1 (R[4]); 
000082  1 0  "00000000100001100100100000001010"   // (R[9]) = _or_1_B1 (R[6],R[4]); 

// m272;   next: m274 (next offset: 83)

// m124;   next: m274 (next offset: 83)

// m274;   next: m2 (next offset: 83)

// m2;   next: m134 (next offset: 83)

// m134, jump target: m138 (next offset: 87)
000083  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 
000084  1 0  "01010101110001000000000000000000"   // R[4] = R[14]; 
000085  1 0  "00100100000000000000000000100010"   // () = j_const_1_B1 (34); 
000086  1 0  "00000001100010010011000000011000"   // (R[6],MC) = _mi_1_B1 (R[12],R[9]); 

// m267;   next: m146, jump target: m25 (next offset: 90)
000087  1 0  "00100001101000000000000000001001"   // () = nez_br_const_1_B1 (R[13],9); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m146;   next: m19, jump target: m21 (next offset: 93)
000090  1 0  "00010101010000000000000000000011"   // () = eqz_br_const_1_B1 (R[10],3); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m19;   next: m18 (next offset: 95)
000093  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000094  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m18 subroutine call;   next: m20 (next offset: 95)

// m20 (next offset: 95)

// m21;   next: m24 (next offset: 95)

// m24 (next offset: 98)
000095  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000096  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000097  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m25;   next: m149 (next offset: 98)

// m149;   next: m30, jump target: m31 (next offset: 101)
000098  1 0  "00100000011000000000000000000011"   // () = br_nez_const_1_B1 (R[3],3); 
000099  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000100  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30;   next: m152 (next offset: 103)
000101  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_1_B1 (R[8]); 
000102  1 0  "01010101011011000000000000000000"   // R[12] = R[11]; 

// m31;   next: m152 (next offset: 103)

// m152;   next: m38, jump target: m36 (next offset: 106)
000103  1 0  "00010101000000000000000000001101"   // () = eqz_br_const_1_B1 (R[8],13); 
000104  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000105  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m38;   next: m252, jump target: m201 (next offset: 110)
000106  1 0  "10001101000001000000000000100000"   // (R[4]) = _lt_const_1_B1 (R[8]); 
000107  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000108  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000109  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m252, jump target: m268 (next offset: 112)
000110  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000111  1 0  "00000001100000000110000000010101"   // (R[12]) = nez_1_B1 (R[12]); 

// m201;   next: m268 (next offset: 118)
000112  1 0  "00000000000010000010000000011000"   // (R[4],MC) = _mi_const_1_B1 (R[8]); 
000113  1 0  "00010000100001000000000000011111"   // (R[4]) = _ad_const_1_B1 (R[4]); 
000114  1 0  "00000001100001000010000000010010"   // (R[4]) = _ls_1_B1 (R[12],R[4]); 
000115  1 0  "00000001100010000010100000010111"   // (R[5]) = _rs_1_B1 (R[12],R[8]); 
000116  1 0  "00000000100000000010000000010101"   // (R[4]) = nez_1_B1 (R[4]); 
000117  1 0  "00000000100001010110000000001010"   // (R[12]) = _or_1_B1 (R[5],R[4]); 

// m268;   next: m273 (next offset: 118)

// m36;   next: m273 (next offset: 118)

// m273;   next: m1 (next offset: 118)

// m1;   next: m46 (next offset: 118)

// m46;   next: m138 (next offset: 120)
000118  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000119  1 0  "00000001001011000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[9],R[12]); 

// m138;   next: m137 (next offset: 122)
000120  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000121  1 0  "00001000111001011111111111111111"   // (R[5],MC) = _pl_const_1_B1 (R[7]); 

// m137 subroutine call;   next: m139 (next offset: 122)

// m139 (next offset: /)

