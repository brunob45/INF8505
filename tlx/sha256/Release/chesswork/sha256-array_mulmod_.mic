
// File generated by mist version N-2018.03#7d02e3ca79#180723, Wed Apr 10 22:33:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i sha256-array_mulmod_ tlx


// m4;   next: m5 (next offset: 11)
000000  1 0  "00001000001000010000000000010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (20,SP,SP); 
000001  1 0  "01010100101010000000000000000000"   // R[8] = R[5]; 
000002  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000003  1 0  "01010100011001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[3],0); 
000004  1 0  "10101000001001111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[7],SP,-4); 
000005  1 0  "10101000001001101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[6],SP,-8); 
000006  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000007  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000008  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000009  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000010  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m5 subroutine call;   next: m6 (next offset: 11)

// m6;   next: m7 (next offset: 17)
000011  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000012  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000013  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000014  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000015  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m7 subroutine call;   next: m8 (next offset: 17)

// m8;   next: m9 (next offset: 19)
000017  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000018  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m9 subroutine call;   next: m10 (next offset: 19)

// m10;   next: m11 (next offset: 23)
000019  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000020  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000021  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000022  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m11 subroutine call;   next: m42 (next offset: 23)

// m42, jump target: m1 (next offset: 25)
000023  1 0  "00100100000000000000000000011010"   // () = j_const_1_B1 (26); 
000024  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m19;   next: m20 (next offset: 28)
000025  1 0  "01001000000001010000000000000000"   // (R[5]) = const_1_B3 (); 
000026  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000027  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m20 subroutine call;   next: m50 (next offset: 28)

// m50;   next: m25, jump target: m29 (next offset: 31)
000028  1 0  "00010100011000000000000000001001"   // () = eqz_br_const_1_B1 (R[3],9); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m25;   next: m26 (next offset: 35)
000031  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000032  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000033  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000034  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m26 subroutine call;   next: m27 (next offset: 35)

// m27;   next: m28 (next offset: 39)
000035  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000036  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m28 subroutine call;   next: m74 (next offset: 39)

// m74;   next: m31 (next offset: 39)

// m29;   next: m31 (next offset: 39)

// m31;   next: m32 (next offset: 43)
000039  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000040  1 0  "01010100110001010000000000000000"   // R[5] = R[6]; 
000041  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000042  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m32 subroutine call;   next: m33 (next offset: 43)

// m33;   next: m34 (next offset: 47)
000043  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000044  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000045  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000046  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m34 subroutine call;   next: m35 (next offset: 47)

// m35;   next: m36 (next offset: 50)
000047  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 

// m36 subroutine call;   next: m75 (next offset: 50)

// m75;   next: m1 (next offset: 50)

// m1;   next: m37 (next offset: 50)

// m37;   next: m38 (next offset: 52)
000050  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000051  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m38 subroutine call;   next: m53 (next offset: 52)

// m53;   next: m45, jump target: m19 (next offset: 55)
000052  1 0  "00100000011000001111111111100011"   // () = nez_br_const_1_B1 (R[3],-29); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m45 (next offset: /)
000055  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000056  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000057  1 0  "00001000001000011111111111101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-20,SP,SP); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

