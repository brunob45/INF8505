
// File generated by mist version N-2018.03#7d02e3ca79#180723, Wed Apr 10 22:33:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i sha256-array_bit_set_ tlx

[
    0 : void_array_bit_set___P__uchar___uint typ=iword bnd=e stl=PM
   15 : __vola typ=iword bnd=b stl=PM
   18 : __extPM typ=iword bnd=b stl=PM
   19 : __extDMb typ=w08 bnd=b stl=DMb
   20 : __sp typ=w32 bnd=b stl=SP
   24 : __extPM_void typ=iword bnd=b stl=PM
   25 : __extDMb_void typ=w08 bnd=b stl=DMb
   30 : __la typ=w32 bnd=p tref=w32__
   31 : inout typ=w32 bnd=p tref=ARRAY_TYPE__
   32 : bit typ=w32 bnd=p tref=uint__
   33 : __ct_0s0 typ=w32 val=12s0 bnd=m
   36 : __tmpa0 typ=w32 bnd=m tref=__P__uchar__
   39 : void_array_reset___P__uchar typ=int26 val=0r bnd=m
   40 : __link typ=w32 bnd=m
   43 : __tmp typ=bool bnd=m
   44 : __ct_128 typ=w32 val=128f bnd=m
   48 : __tmp typ=w32 bnd=m
   49 : __tmp typ=w32 bnd=m
   52 : __fchtmp typ=__uchar bnd=m
   54 : __ct_1 typ=w32 val=1f bnd=m
   58 : __tmp typ=w32 bnd=m
   60 : __tmp typ=w32 bnd=m
   61 : __tmp typ=w32 bnd=m
   63 : __ct_0S0 typ=w32 val=-12S0 bnd=m
   80 : __either typ=bool bnd=m
   81 : __trgt typ=int16 val=14j bnd=m
   82 : __trgt typ=int26 val=2j bnd=m
   83 : __seff typ=any bnd=m
   84 : __seff typ=any bnd=m
   85 : __seff typ=any bnd=m
   86 : __seff typ=any bnd=m
   89 : __stack_offs_ typ=any val=-4o0 bnd=m
   90 : __stack_offs_ typ=any val=-8o0 bnd=m
   91 : __stack_offs_ typ=any val=-12o0 bnd=m
]
Fvoid_array_bit_set___P__uchar___uint {
    #3 off=0 nxt=4
    (__vola.14 var=15) source ()  <27>;
    (__extPM.17 var=18) source ()  <30>;
    (__extDMb.18 var=19) source ()  <31>;
    (__sp.19 var=20) source ()  <32>;
    (__extPM_void.23 var=24) source ()  <36>;
    (__extDMb_void.24 var=25) source ()  <37>;
    (__la.29 var=30 stl=R off=2) inp ()  <42>;
    (inout.32 var=31 stl=R off=4) inp ()  <45>;
    (bit.35 var=32 stl=R off=5) inp ()  <48>;
    (__ct_0s0.137 var=33) const_inp ()  <208>;
    (void_array_reset___P__uchar.138 var=39) const_inp ()  <209>;
    <42> {
      (__sp.43 var=20 __seff.164 var=86 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_2_B1 (__ct_0s0.137 __sp.19 __sp.19)  <238>;
      (__seff.186 var=86 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.164)  <322>;
    } stp=0;
    <43> {
      (__link.49 var=40 stl=lnk) jal_const_1_B1 (void_array_reset___P__uchar.138)  <239>;
      (__link.182 var=40 stl=LR off=0) LR_1_dr_move_lnk_1_w32 (__link.49)  <309>;
    } stp=4;
    <59> {
      (bit.236 var=32 stl=__spill_DMw off=-4) stack_store_bndl_B3 (bit.183 __sp.43 __stack_offs_.259)  <310>;
      (bit.183 var=32 stl=dmw_wr) to___spill_DMw_dmw_wr_2_dr_move_R_2_w32 (bit.35)  <313>;
    } stp=1;
    <60> {
      (inout.239 var=31 stl=__spill_DMw off=-8) stack_store_bndl_B3 (inout.184 __sp.43 __stack_offs_.260)  <314>;
      (inout.184 var=31 stl=dmw_wr) to___spill_DMw_dmw_wr_2_dr_move_R_2_w32 (inout.32)  <317>;
    } stp=2;
    <61> {
      (__la.242 var=30 stl=__spill_DMw off=-12) stack_store_bndl_B3 (__la.185 __sp.43 __stack_offs_.261)  <318>;
      (__la.185 var=30 stl=dmw_wr) to___spill_DMw_dmw_wr_2_dr_move_R_2_w32 (__la.29)  <321>;
    } stp=3;
    (__stack_offs_.259 var=89) const_inp ()  <367>;
    (__stack_offs_.260 var=90) const_inp ()  <368>;
    (__stack_offs_.261 var=91) const_inp ()  <369>;
    <74> {
      () vd_nop_ID ()  <383>;
    } stp=5;
    call {
        (__extDMb.51 var=19 __extDMb_void.52 var=25 __extPM.53 var=18 __extPM_void.54 var=24 __vola.55 var=15) Fvoid_array_reset___P__uchar (__link.182 inout.32 __extDMb.18 __extDMb_void.24 __extPM.17 __extPM_void.23 __vola.14)  <64>;
    } #4 off=6 nxt=5
    #5 off=6 nxt=8 tgt=9
    (__trgt.140 var=81) const_inp ()  <211>;
    <40> {
      (__tmp.130 var=43 stl=aluC) _ge_const_1_B1 (bit.187)  <236>;
      (bit.187 var=32 stl=aluA) aluA_2_dr_move_R_2_w32 (bit.188)  <323>;
      (__tmp.190 var=43 stl=R off=5) R_2_dr_move_aluC_2_bool (__tmp.130)  <329>;
    } stp=1;
    <41> {
      () nez_br_const_1_B1 (__tmp.189 __trgt.140)  <237>;
      (__tmp.189 var=43 stl=eqA) eqA_2_dr_move_R_2_bool (__tmp.190)  <328>;
    } stp=2;
    <62> {
      (bit.245 var=32 stl=dmw_rd) stack_load_bndl_B3 (bit.236 __sp.43 __stack_offs_.262)  <324>;
      (bit.188 var=32 stl=R off=4) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (bit.245)  <327>;
    } stp=0;
    (__stack_offs_.262 var=89) const_inp ()  <370>;
    <75> {
      () vd_nop_ID ()  <384>;
    } stp=3;
    <76> {
      () vd_nop_ID ()  <385>;
    } stp=4;
    if {
        {
            () if_expr (__either.135)  <83>;
            (__either.135 var=80) undefined ()  <205>;
        } #7
        {
            <73> {
              (__la.256 var=30 stl=dmw_rd) stack_load_bndl_B3 (__la.242 __sp.43 __stack_offs_.265)  <363>;
              (__la.230 var=30 stl=R off=4) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__la.256)  <366>;
            } stp=0;
            (__stack_offs_.265 var=91) const_inp ()  <373>;
        } #9 off=24 nxt=12
        {
            (__trgt.141 var=82) const_inp ()  <212>;
            <31> {
              (__tmp.78 var=48 stl=tshC) _rs_const_1_B1 (bit.191)  <227>;
              (bit.191 var=32 stl=tshA) tshA_2_dr_move_R_2_w32 (bit.188)  <330>;
              (__tmp.193 var=48 stl=R off=3) R_2_dr_move_tshC_2_w32 (__tmp.78)  <332>;
            } stp=0;
            <32> {
              (__tmp.88 var=58 stl=aluC) _ad_const_1_B1 (bit.202)  <228>;
              (bit.202 var=32 stl=aluA) aluA_2_dr_move_R_2_w32 (bit.188)  <343>;
              (__tmp.204 var=58 stl=R off=4) R_2_dr_move_aluC_2_w32 (__tmp.88)  <345>;
            } stp=5;
            <33> {
              (__tmp.79 var=49 stl=aluC __seff.154 var=84 stl=aluM) _mi_1_B1 (__ct_128.215 __tmp.192)  <229>;
              (__tmp.192 var=48 stl=aluB) aluB_2_dr_move_R_2_w32 (__tmp.193)  <331>;
              (__seff.194 var=84 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.154)  <333>;
              (__tmp.196 var=49 stl=R off=6) R_2_dr_move_aluC_2_w32 (__tmp.79)  <335>;
              (__ct_128.215 var=44 stl=aluA) aluA_2_dr_move_R_2_w32 (__ct_128.216)  <359>;
            } stp=2;
            <34> {
              (__tmpa0.81 var=36 stl=aluC __seff.156 var=85) _pl_1_B1 (inout.197 __tmp.195)  <230>;
              (__tmp.195 var=49 stl=aluB) aluA_aluB_2_dr_move_R_2_w32_B1 (__tmp.196)  <334>;
              (inout.197 var=31 stl=aluA) aluA_aluB_2_dr_move_R_2_w32_B0 (inout.198)  <336>;
              (__tmpa0.201 var=36 stl=R off=5) R_2_dr_move_aluC_2_w32 (__tmpa0.81)  <342>;
            } stp=4;
            <35> {
              (__tmp.90 var=60 stl=tshC) _ls_1_B1 (__ct_1.219 __tmp.203)  <231>;
              (__tmp.203 var=58 stl=tshB) tshB_2_dr_move_R_2_w32 (__tmp.204)  <344>;
              (__tmp.208 var=60 stl=R off=4) R_2_dr_move_tshC_2_w32 (__tmp.90)  <349>;
              (__ct_1.219 var=54 stl=tshA) tshA_2_dr_move_R_2_w32 (__ct_1.220)  <361>;
            } stp=7;
            <36> {
              (__fchtmp.82 var=52 stl=dmb_rd) load_1_B1 (__tmpa0.200 __extDMb.51 __extDMb_void.52)  <232>;
              (__tmpa0.200 var=36 stl=dm_addr) dm_addr_1_dr_move_R_1_w32 (__tmpa0.201)  <341>;
              (__fchtmp.206 var=52 stl=R off=6) R_2_dr_move_dmb_rd_2___uchar (__fchtmp.82)  <347>;
            } stp=8;
            <37> {
              (__tmp.91 var=61 stl=aluC) _or_1_B1 (__fchtmp.205 __tmp.207)  <233>;
              (__fchtmp.205 var=52 stl=aluA) aluA_aluB_2_dr_move_R_2___uchar_B0 (__fchtmp.206)  <346>;
              (__tmp.207 var=60 stl=aluB) aluA_aluB_2_dr_move_R_2_w32_B1 (__tmp.208)  <348>;
              (__tmp.210 var=61 stl=R off=3) R_2_dr_move_aluC_2_w32 (__tmp.91)  <351>;
            } stp=9;
            <38> {
              (__extDMb.94 var=19 __extDMb_void.95 var=25) __uchar_store_1_B1 (__tmpa0.211 __tmp.209 __extDMb.51 __extDMb_void.52)  <234>;
              (__tmp.209 var=61 stl=sxW) sxW_2_dr_move_R_2_w32 (__tmp.210)  <350>;
              (__tmpa0.211 var=36 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__tmpa0.201)  <352>;
            } stp=12;
            <39> {
              () j_const_1_B1 (__trgt.141)  <235>;
            } stp=11;
            <66> {
              (__ct_128.218 var=44 stl=aluB) const_1_B2 ()  <294>;
              (__ct_128.216 var=44 stl=R off=6) R_2_dr_move_aluB_2_MC_2_w32_B1 (__ct_128.218)  <360>;
            } stp=1;
            <68> {
              (__ct_1.222 var=54 stl=aluB) const_2_B2 ()  <298>;
              (__ct_1.220 var=54 stl=R off=3) R_2_dr_move_aluB_2_MC_2_w32_B1 (__ct_1.222)  <362>;
            } stp=6;
            <63> {
              (inout.248 var=31 stl=dmw_rd) stack_load_bndl_B3 (inout.239 __sp.43 __stack_offs_.263)  <337>;
              (inout.198 var=31 stl=R off=5) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (inout.248)  <340>;
            } stp=3;
            <64> {
              (__la.251 var=30 stl=dmw_rd) stack_load_bndl_B3 (__la.242 __sp.43 __stack_offs_.264)  <354>;
              (__la.213 var=30 stl=R off=4) from___spill_DMw_R_2_dr_move_dmw_rd_2_w32 (__la.251)  <357>;
            } stp=10;
            (__stack_offs_.263 var=90) const_inp ()  <371>;
            (__stack_offs_.264 var=91) const_inp ()  <372>;
        } #8 off=11 tgt=12
        {
            (__extDMb.96 var=19) merge (__extDMb.51 __extDMb.94)  <104>;
            (__extDMb_void.97 var=25) merge (__extDMb_void.52 __extDMb_void.95)  <105>;
            (__la.229 var=30 stl=R off=4) merge (__la.230 __la.213)  <302>;
        } #10
    } #6
    #12 off=25 nxt=-2
    () sink (__vola.55)  <113>;
    () sink (__extPM.53)  <116>;
    () sink (__extDMb.96)  <117>;
    () sink (__sp.104)  <118>;
    () sink (__extPM_void.54)  <122>;
    () sink (__extDMb_void.97)  <123>;
    (__ct_0S0.139 var=63) const_inp ()  <210>;
    <27> {
      (__sp.104 var=20 __seff.148 var=83 stl=aluM) _pl_rd_res_reg_const_wr_res_reg_1_B1 (__ct_0S0.139 __sp.43 __sp.43)  <223>;
      (__seff.214 var=83 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.148)  <358>;
    } stp=1;
    <28> {
      () __rts_jr_1_B1 (__la.212)  <224>;
      (__la.212 var=30 stl=trgt) trgt_2_dr_move_R_2_w32 (__la.229)  <353>;
    } stp=0;
    <77> {
      () vd_nop_ID ()  <386>;
    } stp=2;
    61 -> 43 del=1;
    33 -> 68 del=0;
    31 -> 32 del=0;
    37 -> 64 del=0;
} #0
0 : 'ops.h';
----------
0 : (0,159:0,0);
3 : (0,161:16,1);
4 : (0,161:4,1);
5 : (0,162:12,2);
6 : (0,162:4,2);
8 : (0,163:4,3);
9 : (0,162:4,7);
12 : (0,162:4,10);
----------
64 : (0,161:4,1);
83 : (0,162:4,2);
104 : (0,162:4,9);
105 : (0,162:4,9);
223 : (0,162:4,0) (0,162:4,10);
224 : (0,162:4,10);
227 : (0,164:35,3);
228 : (0,164:53,4);
229 : (0,164:29,3);
230 : (0,164:13,3);
231 : (0,164:45,4);
232 : (0,164:13,4);
233 : (0,164:40,4);
234 : (0,164:40,4) (0,164:13,4);
236 : (0,162:12,2);
237 : (0,162:4,2);
238 : (0,159:5,0);
239 : (0,161:4,1);
294 : (0,164:29,0);
298 : (0,164:43,0);
324 : (0,162:12,0) (0,164:35,0) (0,164:53,0);
337 : (0,164:13,0);
354 : (0,162:4,0);
363 : (0,162:4,0);

