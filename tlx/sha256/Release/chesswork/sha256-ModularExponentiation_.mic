
// File generated by mist version N-2018.03#7d02e3ca79#180723, Wed Apr 10 23:52:57 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i sha256-ModularExponentiation_ tlx


// m4;   next: m5 (next offset: 27)
000000  1 0  "00001000001000010000000001000000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (64,SP,SP); 
000001  1 0  "01001000000011000000000000000000"   // (R[12]) = lhi_const_1_B1 (0); 
000002  1 0  "01001000000010110000000000000000"   // (R[11]) = lhi_const_1_B1 (0); 
000003  1 0  "01001000000010100000000000000000"   // (R[10]) = lhi_const_1_B1 (0); 
000004  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000005  1 0  "01010101100011000000000000000000"   // (R[12]) = w32_const_bor_1_B1 (R[12],0); 
000006  1 0  "01010101011010110000000000000000"   // (R[11]) = w32_const_bor_1_B1 (R[11],0); 
000007  1 0  "01010101010010100000000000000000"   // (R[10]) = w32_const_bor_1_B1 (R[10],0); 
000008  1 0  "01010100011000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[3],0); 
000009  1 0  "10101000001001011111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[5],SP,-52); 
000010  1 0  "10101000011000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[3],DMb_stat); 
000011  1 0  "10101001010000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[10],DMb_stat); 
000012  1 0  "10101001011000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[11],DMb_stat); 
000013  1 0  "10101001100000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[12],DMb_stat); 
000014  1 0  "10101000001010011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[9],SP,-36); 
000015  1 0  "10101000001010001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[8],SP,-40); 
000016  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000017  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000018  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000019  1 0  "10101000001000101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[2],SP,-60); 
000020  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000021  1 0  "10101000001010101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[10],SP,-24); 
000022  1 0  "10101000001010111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[11],SP,-28); 
000023  1 0  "10101000001011001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[12],SP,-32); 
000024  1 0  "01010101000001010000000000000000"   // R[5] = R[8]; 
000025  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000026  1 0  "01010100100010000000000000000000"   // R[8] = R[4]; 

// m5 subroutine call;   next: m6 (next offset: 27)

// m6;   next: m7 (next offset: 35)
000027  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000028  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000029  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000030  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000031  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000032  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 
000033  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000034  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m7 subroutine call;   next: m31 (next offset: 35)

// m31, jump target: m1 (next offset: 37)
000035  1 0  "00100100000000000000000000010011"   // () = j_const_1_B1 (19); 
000036  1 0  "01001000000001010000000000000000"   // (R[5]) = const_1_B3 (); 

// m15;   next: m16 (next offset: 39)
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m16 subroutine call;   next: m43 (next offset: 39)

// m43;   next: m21, jump target: m23 (next offset: 42)
000039  1 0  "00010100011000000000000000000111"   // () = eqz_br_const_1_B1 (R[3],7); 
000040  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m21;   next: m22 (next offset: 47)
000042  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000043  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000044  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000045  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000046  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m22 subroutine call;   next: m64 (next offset: 47)

// m64;   next: m25 (next offset: 48)
000047  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m23;   next: m25 (next offset: 48)

// m25;   next: m26 (next offset: 53)
000048  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000049  1 0  "01010000001010001111111111001000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000050  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000051  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000052  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m26 subroutine call;   next: m27 (next offset: 53)

// m27;   next: m1 (next offset: 55)
000053  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000054  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 

// m1;   next: m28 (next offset: 55)

// m28;   next: m33, jump target: m15 (next offset: 60)
000055  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000056  1 0  "00000000101001110011100000010100"   // (R[7]) = _lt_1_B1 (R[5],R[7]); 
000057  1 0  "00100000111000001111111111101010"   // () = nez_br_const_1_B1 (R[7],-22); 
000058  1 0  "10101000001001011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[5],SP,-64); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m33;   next: m34 (next offset: 66)
000060  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000061  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000062  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000063  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000064  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000065  1 0  "01010101000001000000000000000000"   // R[4] = R[8]; 

// m34 subroutine call;   next: m35 (next offset: 66)

// m35;   next: m36 (next offset: 81)
000066  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000067  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000068  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000069  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000070  1 0  "01010000100010000000000000000000"   // (R[8]) = load_1_B1 (R[4],DMb_stat); 
000071  1 0  "01010000111001110000000000000000"   // (R[7]) = load_1_B1 (R[7],DMb_stat); 
000072  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 
000073  1 0  "01010000110001100000000000000000"   // (R[6]) = load_1_B1 (R[6],DMb_stat); 
000074  1 0  "10101000001010001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[8],SP,-16); 
000075  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000076  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000077  1 0  "10101000001001111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[7],SP,-4); 
000078  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000079  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000080  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 

// m36 subroutine call;   next: m38 (next offset: 81)

// m38 (next offset: /)
000081  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000082  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000083  1 0  "00001000001000011111111111000000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-64,SP,SP); 
000084  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

