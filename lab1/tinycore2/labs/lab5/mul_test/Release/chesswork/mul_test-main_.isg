
// File generated by amnesia version N-2018.03#7d02e3ca79#180723, Fri Jan 25 15:45:39 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// amnesia -I/users/Cours/inf8505/12/Documents/inf8505/lab1/tinycore2/labs/lab5/lib/isg mul_test-main_ tinycore2

toolrelease _18R1;
//Children of func_bndl

ldh_const_1 : func_bndl {
    arg : ( word:o sbyte:i );
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
}
ldh_const_1_B1 : ldh_const_1 {
    rid : 56;
    isg : t;
    inp : ( __CTcnv8_sbyte_cstP3_7_3P11_2_0_E1 );
    out : ( aluC );
    rsc : (2) aluC cnv8 ;
    opn : ( aluC_ldh_cnv8_E1
            cnv8_sbyte_cstP3_7_3P11_2_0_E1
            cnv8_copy0___CTcnv8_sbyte_cstP3_7_3P11_2_0_E1 );
    ins : "101xxxxxxxxxxx";
}

word_const_bor_1 : func_bndl {
    arg : ( word:o word:i ubyte:i );
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
}
word_const_bor_1_B1 : word_const_bor_1 {
    rid : 57;
    isg : t;
    inp : ( aluA __CTaluB_ubyte_cstP3_7_3P11_2_0_E1 );
    out : ( aluC );
    rsc : (2) aluB aluC ;
    opn : ( aluB_conv0___CTaluB_ubyte_cstP3_7_3P11_2_0_E1
            aluB_ubyte_cstP3_7_3P11_2_0_E1
            aluC_bor_aluA_aluB_alu_E1 );
    ins : "110xxxxxxxxxxx";
}

const_1 : func_bndl {
    arg : ( word:o );
    fst : 2;
    ost : ( 2 );
}
const_1_B1 : const_1 {
    rid : 58;
    isg : t;
    out : ( aluC );
    rsc : (2) aluC ;
    opn : ( aluC_sbyte_cstP3_7_3P11_2_0_E1
            aluC_conv0___CTaluC_sbyte_cstP3_7_3P11_2_0_E1 );
    ins : "10000000xxx011";
}

load_1 : func_bndl {
    arg : ( word:o word:i word:i );
    fst : 2;
    ist : ( 2 3 );
    ost : ( 3 );
}
load_1_B1 : load_1 {
    rid : 59;
    isg : t;
    inp : ( dmAddr DM );
    out : ( dmLdBus );
    rsc : (3) dmLdBus ;
    opn : ( dmLdBus_ld_DM_dmAddr_E1 );
    ins : "00100000xxxxxx";
}

_ml_1 : func_bndl {
    arg : ( word:o word:i word:i );
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
}
_ml_1_B1 : _ml_1 {
    rid : 61;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    opn : ( aluC_mul_aluA_aluB_alu_E1 );
    ins : "01000100xxxxxx";
}
_ml_1_B2 : _ml_1 {
    rid : 62;
    isg : t;
    inp : ( aluB aluA );
    out : ( aluC );
    rsc : (2) aluC ;
    opn : ( aluC_mul_aluB_aluA_alu_E1 );
    ins : "01000100xxxxxx";
}

store_1 : func_bndl {
    arg : ( word:o word:i word:i word:i );
    fst : 2;
    ist : ( 2 2 2 );
    ost : ( 2 );
}
store_1_B1 : store_1 {
    rid : 65;
    isg : t;
    inp : ( dmStBus dmAddr DM );
    out : ( DM );
    opn : ( DM_st_dmStBus_dmAddr_E1 );
    ins : "00100010xxxxxx";
}

rts_1 : func_bndl, ret {
    arg : ( word:i );
    fst : 2;
    ist : ( 2 );
}
rts_1_B1 : rts_1 {
    rid : 66;
    isg : t;
    inp : ( pc_trgt );
    opn : ( vd_rts_pc_trgt_E1 );
    ins : "00101010xxxxxx";
}

//Children of mv_bndl

R_2_dr_move_aluC_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 58;
    isg : t;
    inp : ( aluC );
    out : ( R );
    rsc : (2) __R_aluC_wad __rsrc_R_wr_aluC___R_aluC_wad_E1 ;
    opn : ( R_wr_aluC___R_aluC_wad_E1 );
    ins : "10xxxxxxxxxxxx",
          "1x0xxxxxxxxxxx",
          "x01000x1xxxxxx",
          "x0100x01xxxxxx",
          "x10000xxxxxxxx",
          "x1000x00xxxxxx";
}

aluA_2_dr_move_R_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 59;
    isg : t;
    inp : ( R );
    out : ( aluA );
    rsc : (2) aluA ;
    opn : ( aluA_rd_R___R_aluA_rad_E1 );
    ins : "000001xxxxxxxx",
          "001000xxxxxxxx",
          "0010x001xxxxxx",
          "110xxxxxxxxxxx",
          "x10000xxxxxxxx",
          "x1000x00xxxxxx";
}

aluA_aluB_2_dr_move_R_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
}
aluA_aluB_2_dr_move_R_2_word_B0 : aluA_aluB_2_dr_move_R_2_word {
    rid : 69;
    isg : t;
    inp : ( R );
    out : ( aluA );
    rsc : (2) aluA ;
    opn : ( aluA_rd_R___R_aluA_rad_E1 );
    ins : "000001xxxxxxxx",
          "001000xxxxxxxx",
          "0010x001xxxxxx",
          "110xxxxxxxxxxx",
          "x10000xxxxxxxx",
          "x1000x00xxxxxx";
}
aluA_aluB_2_dr_move_R_2_word_B1 : aluA_aluB_2_dr_move_R_2_word {
    rid : 70;
    isg : t;
    inp : ( R );
    out : ( aluB );
    rsc : (2) aluB ;
    opn : ( aluB_rd_R___R_aluB_rad_E1 );
    ins : "000001xxxxxxxx",
          "00x00101xxxxxx",
          "010000xxxxxxxx",
          "0x000100xxxxxx";
}

R_3_dr_move_dmLdBus_3_word : mv_bndl {
    fst : 3;
    ist : ( 3 );
    ost : ( 3 );
    rid : 71;
    isg : t;
    inp : ( dmLdBus );
    out : ( R );
    rsc : (3) __R_dmLdBus_wad __rsrc_R_wr_dmLdBus___R_dmLdBus_wad_E2 ;
    opn : ( R_wr_dmLdBus___R_dmLdBus_wad_E2 );
    ins : "0010000xxxxxxx";
}

dmStBus_2_dr_move_R_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 72;
    isg : t;
    inp : ( R );
    out : ( dmStBus );
    rsc : (2) dmStBus ;
    opn : ( dmStBus_rd_R___R_dmStBus_rad_E1 );
    ins : "0010001xxxxxxx";
}

pc_trgt_2_dr_move_LR_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 73;
    isg : t;
    inp : ( LR );
    out : ( pc_trgt );
    rsc : (2) pc_trgt ;
    opn : ( pc_trgt_rd_LR_E1 );
    ins : "00101010xxxxxx";
}

dmAddr_2_dr_move_R_2_word : mv_bndl {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 74;
    isg : t;
    inp : ( R );
    out : ( dmAddr );
    rsc : (2) dmAddr aluA ;
    opn : ( aluA_rd_R___R_aluA_rad_E1
            dmAddr_copy0_aluA_E1 );
    ins : "001000x0xxxxxx";
}

