
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:12 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-float64_round_to_int_ tlx


// m188;   next: m75, jump target: m7 (next offset: 10)
000000  1 0  "01001000000001100000000000001111"   // (R[6]) = lhi_const_1_B1 (15); 
000001  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000002  1 0  "00000000100001100011100000000011"   // (R[7]) = _ad_1_B1 (R[4],R[6]); 
000003  1 0  "10011100100001100000000000010100"   // (R[6]) = _rs_const_3_B1 (R[4]); 
000004  1 0  "00010000110001100000011111111111"   // (R[6]) = _ad_const_1_B1 (R[6]); 
000005  1 0  "01101100110000110000010000010011"   // (R[3]) = _ge_const_2_B1 (R[6]); 
000006  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (12,SP,SP); 
000007  1 0  "00100000011000000000000000110010"   // () = nez_br_const_2_B1 (R[3],50); 
000008  1 0  "00000000101001110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[5]); 
000009  1 0  "00000000111000000011100000010101"   // (R[7]) = nez_1_B1 (R[7]); 

// m75;   next: m216, jump target: m147 (next offset: 14)
000010  1 0  "01110100110000110000001111111110"   // (R[3]) = _gt_const_1_B1 (R[6]); 
000011  1 0  "00100000011000000000000000011100"   // () = nez_br_const_2_B1 (R[3],28); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m216;   next: m84, jump target: m85 (next offset: 19)
000014  1 0  "10001000100000110000000000000001"   // (R[3]) = _ls_const_2_B1 (R[4]); 
000015  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[5]); 
000016  1 0  "00100000011000000000000000000101"   // () = nez_br_const_1_B1 (R[3],5); 
000017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m84 (next offset: 23)
000019  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000020  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000021  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000022  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m85;   next: m221 (next offset: 23)

// m221;   next: m103, jump target: m104 (next offset: 31)
000023  1 0  "10011100100001000000000000011111"   // (R[4]) = _rs_const_2_B1 (R[4]); 
000024  1 0  "10001000100001000000000000011111"   // (R[4]) = _ls_const_1_B1 (R[4]); 
000025  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000026  1 0  "01100100110001010000001111111110"   // (R[5]) = _eq_const_1_B1 (R[6]); 
000027  1 0  "00000000101001110010000000000011"   // (R[4]) = land_1_B1 (R[5],R[7]); 
000028  1 0  "00010100100000000000000000001000"   // () = eqz_br_const_1_B1 (R[4],8); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m103 (next offset: 38)
000031  1 0  "01001000000001000011111111110000"   // (R[4]) = const_1_B1 (); 
000032  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000033  1 0  "00000000100001010010000000000001"   // (R[4],MC) = _pl_2_B1 (R[5],R[4]); 
000034  1 0  "10101000001000001111111111110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-16]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-16); 
000035  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000036  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000037  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m104;   next: m146 (next offset: 38)

// m146 (next offset: 41)
000038  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000039  1 0  "10101000001000001111111111110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-16]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-16); 
000040  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m147;   next: m231 (next offset: 41)

// m231;   next: m240, jump target: m157 (next offset: 53)
000041  1 0  "01010100000001110000010000010011"   // (R[7]) = const_4_B2 (); 
000042  1 0  "00000000111001100011000000011000"   // (R[6],MC) = _mi_1_B1 (R[7],R[6]); 
000043  1 0  "01010100000001110000000000000001"   // (R[7]) = const_6_B2 (); 
000044  1 0  "00000000111001100011000000010010"   // (R[6]) = _ls_1_B1 (R[7],R[6]); 
000045  1 0  "10011100110000110000000000000001"   // (R[3]) = _rs_const_1_B1 (R[6]); 
000046  1 0  "00001000110001111111111111111111"   // (R[7],MC) = _pl_const_1_B1 (R[6]); 
000047  1 0  "00000000011001000010000000000001"   // (R[4],MC) = _pl_1_B1 (R[4],R[3]); 
000048  1 0  "00000000100001110001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[7]); 
000049  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[5]); 
000050  1 0  "00100000011000000000000000000011"   // () = nez_br_const_1_B1 (R[3],3); 
000051  1 0  "00001000000001011111111111111111"   // (R[5]) = const_7_B1 (); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m240;   next: m243 (next offset: 55)
000053  1 0  "00000000101001100011000000011010"   // (R[6]) = _er_1_B1 (R[6],R[5]); 
000054  1 0  "00000000100001100010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[6]); 

// m157;   next: m243 (next offset: 55)

// m243, jump target: m176 (next offset: 59)
000055  1 0  "00000000101001110010100000011010"   // (R[5]) = _er_1_B1 (R[7],R[5]); 
000056  1 0  "10101000001000001111111111110000"   // (dmw_wr) = const_5_B5 (); (__spill_DMw[-16]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-16); 
000057  1 0  "00100100000000000000000000111100"   // () = j_const_1_B1 (60); 
000058  1 0  "00000000100001010010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[5]); 

// m7;   next: m192, jump target: m29 (next offset: 63)
000059  1 0  "10001100110000110000010000110011"   // (R[3]) = _lt_const_1_B1 (R[6]); 
000060  1 0  "00100000011000000000000000010110"   // () = nez_br_const_2_B1 (R[3],22); 
000061  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000062  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m192;   next: m21, jump target: m25 (next offset: 69)
000063  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000064  1 0  "01100100110001100000011111111111"   // (R[6]) = _eq_const_2_B1 (R[6]); 
000065  1 0  "00000000110001110010000000000011"   // (R[4]) = land_1_B1 (R[6],R[7]); 
000066  1 0  "00010100100000000000000000001101"   // () = eqz_br_const_1_B1 (R[4],13); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000068  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m21;   next: m22 (next offset: 74)
000069  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 
000070  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000071  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000072  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000073  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m22 subroutine call;   next: m24 (next offset: 74)

// m24 (next offset: 81)
000074  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000075  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000076  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000077  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000078  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000079  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000080  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m25;   next: m28 (next offset: 81)

// m28 (next offset: 84)
000081  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000082  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000083  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m29;   next: m198 (next offset: 84)

// m198;   next: m46, jump target: m206 (next offset: 92)
000084  1 0  "01010100000001110000010000110010"   // (R[7]) = const_3_B2 (); 
000085  1 0  "00000000111001100011000000011000"   // (R[6],MC) = _mi_1_B1 (R[7],R[6]); 
000086  1 0  "01010100000001110000000000000001"   // (R[7]) = const_6_B2 (); 
000087  1 0  "00000000111001100011000000010010"   // (R[6]) = _ls_1_B1 (R[7],R[6]); 
000088  1 0  "10001000110001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[6]); 
000089  1 0  "00100000110000000000000000001100"   // () = nez_br_const_1_B1 (R[6],12); 
000090  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46;   next: m211, jump target: m237 (next offset: 96)
000092  1 0  "00000000101000000011100000001100"   // (R[7]) = _ge_const_1_B2 (R[5]); 
000093  1 0  "00100000111000000000000000010010"   // () = nez_br_const_2_B1 (R[7],18); 
000094  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000095  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m211;   next: m53, jump target: m237 (next offset: 100)
000096  1 0  "10001000101001110000000000000001"   // (R[7]) = _ls_const_2_B1 (R[5]); 
000097  1 0  "00100000111000000000000000001110"   // () = nez_br_const_1_B1 (R[7],14); 
000098  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_2_B1 (R[4]); 
000099  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m53, jump target: m237 (next offset: 103)
000100  1 0  "00001000000001111111111111111110"   // (R[7]) = const_2_B1 (); 
000101  1 0  "00100100000000000000000000001011"   // () = j_const_1_B1 (11); 
000102  1 0  "00000000100001110010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[7]); 

// m206;   next: m233, jump target: m43 (next offset: 110)
000103  1 0  "10011100110000110000000000000001"   // (R[3]) = _rs_const_1_B1 (R[6]); 
000104  1 0  "00001000110001111111111111111111"   // (R[7],MC) = _pl_const_1_B1 (R[6]); 
000105  1 0  "00000000011001010010100000000001"   // (R[5],MC) = add_1_B1 (R[5],R[3]); 
000106  1 0  "00000000101001110011100000000011"   // (R[7]) = _ad_1_B1 (R[5],R[7]); 
000107  1 0  "00100000111000000000000000000100"   // () = nez_br_const_1_B1 (R[7],4); 
000108  1 0  "00000000100000000010000000000010"   // (R[4],MC) = addx_const_1_B3 (R[4],MC); 
000109  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m233;   next: m237 (next offset: 113)
000110  1 0  "00001000000001111111111111111111"   // (R[7]) = const_7_B1 (); 
000111  1 0  "00000000110001110011100000011010"   // (R[7]) = _er_1_B1 (R[6],R[7]); 
000112  1 0  "00000000101001110010100000000011"   // (R[5]) = _ad_1_B1 (R[5],R[7]); 

// m43;   next: m237 (next offset: 113)

// m237;   next: m176 (next offset: 118)
000113  1 0  "00001000110001101111111111111111"   // (R[6],MC) = _pl_const_1_B1 (R[6]); 
000114  1 0  "00001000000001111111111111111111"   // (R[7]) = const_7_B1 (); 
000115  1 0  "00000000110001110011000000011010"   // (R[6]) = _er_1_B1 (R[6],R[7]); 
000116  1 0  "00000000101001100010100000000011"   // (R[5]) = _ad_1_B1 (R[5],R[6]); 
000117  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 

// m176 (next offset: /)
000118  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000119  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000120  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

