
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:10 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i softfloat-addFloat32Sigs_ tlx


// m4;   next: m160, jump target: m254 (next offset: 16)
000000  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000001  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000002  1 0  "01001000000001100000000001111111"   // (R[6]) = lhi_const_1_B1 (127); 
000003  1 0  "10011100101010010000000000010111"   // (R[9]) = _rs_const_2_B1 (R[5]); 
000004  1 0  "01010100110010001111111111111111"   // (R[8]) = w32_const_bor_1_B1 (R[6],65535); 
000005  1 0  "10011100011001110000000000010111"   // (R[7]) = _rs_const_2_B1 (R[3]); 
000006  1 0  "00010001001010100000000011111111"   // (R[10]) = _ad_const_2_B1 (R[9]); 
000007  1 0  "00010000111001110000000011111111"   // (R[7]) = _ad_const_2_B1 (R[7]); 
000008  1 0  "00000000011010000011000000000011"   // (R[6]) = _ad_1_B1 (R[3],R[8]); 
000009  1 0  "00000000101010000100100000000011"   // (R[9]) = _ad_1_B1 (R[5],R[8]); 
000010  1 0  "00000000111010100100000000011000"   // (R[8],MC) = _mi_1_B1 (R[7],R[10]); 
000011  1 0  "10010100111011010000000011111111"   // (R[13]) = _ne_const_1_B1 (R[7]); 
000012  1 0  "00000001000000000101100000001110"   // (R[11]) = _gt_const_1_B2 (R[8]); 
000013  1 0  "00100001011000000000000001000000"   // () = nez_br_const_1_B1 (R[11],64); 
000014  1 0  "10001000110001100000000000000110"   // (R[6]) = _ls_const_3_B1 (R[6]); 
000015  1 0  "10001001001010010000000000000110"   // (R[9]) = _ls_const_3_B1 (R[9]); 

// m160;   next: m253, jump target: m49 (next offset: 20)
000016  1 0  "00000001000000000110000000010011"   // (R[12]) = _lt_const_2_B2 (R[8]); 
000017  1 0  "00100001100000000000000000011001"   // () = nez_br_const_1_B1 (R[12],25); 
000018  1 0  "10001000100010110000000000011111"   // (R[11]) = _ls_const_2_B1 (R[4]); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m253;   next: m182, jump target: m103 (next offset: 23)
000020  1 0  "00100001101000000000000000001010"   // () = nez_br_const_1_B1 (R[13],10); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000022  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m182;   next: m97, jump target: m99 (next offset: 27)
000023  1 0  "00000000110010010010000000001010"   // (R[4]) = _or_2_B1 (R[6],R[9]); 
000024  1 0  "00010100100000000000000000000011"   // () = eqz_br_const_1_B1 (R[4],3); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m97;   next: m96 (next offset: 29)
000027  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000028  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m96 subroutine call;   next: m98 (next offset: 29)

// m98 (next offset: 29)

// m99;   next: m102 (next offset: 29)

// m102 (next offset: 32)
000029  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m103;   next: m260 (next offset: 32)

// m260;   next: m111, jump target: m112 (next offset: 35)
000032  1 0  "00100000111000000000000000000101"   // () = br_nez_const_1_B1 (R[7],5); 
000033  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000034  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m111 (next offset: 39)
000035  1 0  "00000000110010010010000000000001"   // (R[4],) = _pl_1_B1 (R[6],R[9]); 
000036  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000037  1 0  "10011100100001000000000000000110"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000038  1 0  "00000000100010110001100000000001"   // (R[3],) = _pl_1_B1 (R[11],R[4]); 

// m112;   next: m115 (next offset: 39)

// m115, jump target: m1 (next offset: 44)
000039  1 0  "01001000000001010100000000000000"   // (R[5]) = const_1_B1 (); 
000040  1 0  "00000000101001100010100000000001"   // (R[5],) = _pl_2_B1 (R[6],R[5]); 
000041  1 0  "00000000101010010011000000000001"   // (R[6],) = _pl_1_B1 (R[5],R[9]); 
000042  1 0  "00100100000000000000000001001110"   // () = j_const_1_B1 (78); 
000043  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m49;   next: m156, jump target: m66 (next offset: 48)
000044  1 0  "10010101010011010000000011111111"   // (R[13]) = _ne_const_1_B1 (R[10]); 
000045  1 0  "00100001101000000000000000001001"   // () = nez_br_const_1_B1 (R[13],9); 
000046  1 0  "01001000000011000010000000000000"   // (R[12]) = const_3_B1 (); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m156;   next: m59, jump target: m61 (next offset: 51)
000048  1 0  "00010101001000000000000000000011"   // () = eqz_br_const_1_B1 (R[9],3); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m59;   next: m58 (next offset: 53)
000051  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000052  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m58 subroutine call;   next: m60 (next offset: 53)

// m60 (next offset: 53)

// m61;   next: m65 (next offset: 53)

// m65 (next offset: 56)
000053  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000054  1 0  "01001000000001000111111110000000"   // (R[4]) = const_2_B1 (); 
000055  1 0  "00000000100010110001100000000001"   // (R[3],) = _pl_2_B1 (R[11],R[4]); 

// m66;   next: m257 (next offset: 56)

// m257;   next: m72, jump target: m71 (next offset: 59)
000056  1 0  "00010100111000000000000000000011"   // () = eqz_br_const_1_B1 (R[7],3); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m72, jump target: m165 (next offset: 61)
000059  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000060  1 0  "00000000110011000011000000001010"   // (R[6]) = _or_1_B1 (R[6],R[12]); 

// m71;   next: m165 (next offset: 62)
000061  1 0  "00001001000010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[8]); 

// m165;   next: m79, jump target: m118 (next offset: 66)
000062  1 0  "00000000000010000010100000011000"   // (R[5],MC) = _mi_const_1_B1 (R[8]); 
000063  1 0  "00010100101000000000000000101110"   // () = eqz_br_const_1_B1 (R[5],46); 
000064  1 0  "01010101010001110000000000000000"   // R[7] = R[10]; 
000065  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m79;   next: m250, jump target: m214 (next offset: 70)
000066  1 0  "10001100101000110000000000100000"   // (R[3]) = _lt_const_1_B1 (R[5]); 
000067  1 0  "00100000011000000000000000000011"   // () = nez_br_const_1_B1 (R[3],3); 
000068  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000069  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m250, jump target: m118 (next offset: 72)
000070  1 0  "00100100000000000000000000101000"   // () = j_const_1_B1 (40); 
000071  1 0  "00000000110000000011000000010101"   // (R[6]) = nez_1_B1 (R[6]); 

// m214, jump target: m118 (next offset: 79)
000072  1 0  "00000000000001010001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[5]); 
000073  1 0  "00010000011000110000000000011111"   // (R[3]) = _ad_const_1_B1 (R[3]); 
000074  1 0  "00000000110000110001100000010010"   // (R[3]) = _ls_1_B1 (R[6],R[3]); 
000075  1 0  "00000000110001010010100000010111"   // (R[5]) = _rs_1_B1 (R[6],R[5]); 
000076  1 0  "00000000011000000001100000010101"   // (R[3]) = nez_1_B1 (R[3]); 
000077  1 0  "00100100000000000000000000100001"   // () = j_const_1_B1 (33); 
000078  1 0  "00000000011001010011000000001010"   // (R[6]) = _or_3_B1 (R[5],R[3]); 

// m254;   next: m134, jump target: m24 (next offset: 82)
000079  1 0  "00100001101000000000000000001001"   // () = nez_br_const_1_B1 (R[13],9); 
000080  1 0  "01001000000011000010000000000000"   // (R[12]) = const_3_B1 (); 
000081  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m134;   next: m18, jump target: m20 (next offset: 85)
000082  1 0  "00010100110000000000000000000011"   // () = eqz_br_const_1_B1 (R[6],3); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000084  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m18;   next: m17 (next offset: 87)
000085  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000086  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m17 subroutine call;   next: m19 (next offset: 87)

// m19 (next offset: 87)

// m20;   next: m23 (next offset: 87)

// m23 (next offset: 90)
000087  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m24;   next: m137 (next offset: 90)

// m137;   next: m30, jump target: m29 (next offset: 93)
000090  1 0  "00010101010000000000000000000011"   // () = eqz_br_const_1_B1 (R[10],3); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000092  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30, jump target: m140 (next offset: 95)
000093  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000094  1 0  "00000001001011000100100000001010"   // (R[9]) = _or_1_B1 (R[9],R[12]); 

// m29;   next: m140 (next offset: 96)
000095  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_2_B1 (R[8]); 

// m140;   next: m37, jump target: m35 (next offset: 99)
000096  1 0  "00010101000000000000000000001101"   // () = eqz_br_const_1_B1 (R[8],13); 
000097  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000098  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m37;   next: m240, jump target: m189 (next offset: 103)
000099  1 0  "10001101000001010000000000100000"   // (R[5]) = _lt_const_1_B1 (R[8]); 
000100  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000101  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000102  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m240, jump target: m255 (next offset: 105)
000103  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000104  1 0  "00000001001000000100100000010101"   // (R[9]) = nez_1_B1 (R[9]); 

// m189;   next: m255 (next offset: 111)
000105  1 0  "00000000000010000010100000011000"   // (R[5],MC) = _mi_const_1_B1 (R[8]); 
000106  1 0  "00010000101001010000000000011111"   // (R[5]) = _ad_const_1_B1 (R[5]); 
000107  1 0  "00000001001001010010100000010010"   // (R[5]) = _ls_1_B1 (R[9],R[5]); 
000108  1 0  "00000001001010000001100000010111"   // (R[3]) = _rs_1_B1 (R[9],R[8]); 
000109  1 0  "00000000101000000010100000010101"   // (R[5]) = nez_1_B1 (R[5]); 
000110  1 0  "00000000011001010100100000001010"   // (R[9]) = _or_3_B1 (R[3],R[5]); 

// m255;   next: m118 (next offset: 111)

// m35;   next: m118 (next offset: 111)

// m118;   next: m121, jump target: m122 (next offset: 119)
000111  1 0  "00000000110011000010100000001010"   // (R[5]) = _or_1_B1 (R[6],R[12]); 
000112  1 0  "00000000101010010001100000000001"   // (R[3],) = _pl_1_B1 (R[5],R[9]); 
000113  1 0  "10001000011001100000000000000001"   // (R[6]) = _ls_const_1_B1 (R[3]); 
000114  1 0  "00001000111001011111111111111111"   // (R[5],MC) = _pl_const_2_B1 (R[7]); 
000115  1 0  "00000000110000000011100000001100"   // (R[7]) = _ge_const_1_B2 (R[6]); 
000116  1 0  "00100000111000000000000000000011"   // () = nez_br_const_1_B1 (R[7],3); 
000117  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000118  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m121;   next: m262 (next offset: 121)
000119  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 
000120  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 

// m122;   next: m262 (next offset: 121)

// m262;   next: m1 (next offset: 121)

// m1;   next: m126 (next offset: 121)

// m126;   next: m125 (next offset: 123)
000121  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000122  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m125 subroutine call;   next: m127 (next offset: 123)

// m127 (next offset: /)

