
// File generated by Go version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:29:26 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// go -A -B -Iisg +wisg -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -D__go__ tlx

toolrelease _18R1;
copy0 : copy { }
copy1 : copy { }
__ocd_ld_DMbID_w_cp_ocd_ld_DMb_ID : copy { }
__ocd_ld_PMID_w_cp_ocd_ld_PM_ID : copy { }

name tlx(32)

//Properties
prop ocd_swbreak = ( ocd_swbreak );
prop stage_names = ( IF ID EX );
prop program_counter = ( PC );
prop ocd_execute_instruction = ( ocd_exe );
prop decode_stage = ( 1 );
prop ocd_address_register = ( ocd_addr );
prop chess_pc_offset = ( instructions );
prop ocd_instruction_register = ( ocd_instr );
prop program_memory = ( PM );
prop ocd_data_register = ( ocd_data );
prop ocd_mode = ( ocd_mod );
prop unconnected = ( PM DMb_stat DMh_stat DMw_stat SP ocd_instr_r );
prop strict_WAW_hazard_checking = ( off );
prop ocd_request = ( ocd_req );
prop endianness = ( big );
prop ocd_increment_address_guard = ( ocd_incr_addr );

//Memories are printed after the transitories

//Registers
reg R[0..15,1]<w32,uint4> syntax { R0 R1 R2 R3 R4 R5 R6 R7 R8 R9 R10 R11 R12 R13 R14 R15 } ;
reg SP<w32> alias R[1] align 1;
reg LR<w32> alias R[2] align 1;
reg PL<w32> alias R[14] align 1;
reg PH<w32> alias R[15] align 1;
reg RA<w32> alias R[3] align 1;
reg RB<w32> alias R[4] align 1;
reg RC<w32> alias R[5] align 1;
reg RD<w32> alias R[6] align 1;
reg RE<w32> alias R[7] align 1;
reg RF<w32> alias R[8] align 1;
reg RG<w32> alias R[9] align 1;
reg RH<w32> alias R[10] align 1;
reg R11<w32> alias R[11] align 1;
reg R12<w32> alias R[12] align 1;
reg PC<w32>;
reg MC<uint1>;
reg LC<w32>;
reg LS<w32>;
reg LE<w32>;
reg ocd_addr<addr>;
reg ocd_data<w08>;
reg ocd_instr<iword>;

//Transitories
trn ifetch<bool>;
trn pm_rd<iword>;
trn pm_addr<addr>;
trn istore<bool>;
trn pm_wr<iword>;
trn ld_dmb<bool>;
trn dmb_rd<w08>;
trn dm_addr<addr>;
trn st_dmb<bool>;
trn dmb_wr<w08>;
trn ld_dmh<bool>;
trn dmh_rd<w16>;
trn st_dmh<bool>;
trn dmh_wr<w16>;
trn ld_dmw<bool>;
trn dmw_rd<w32>;
trn st_dmw<bool>;
trn dmw_wr<w32>;
trn r0<w32>;
trn r1<w32>;
trn r2<w32>;
trn w0<w32>;
trn w1<w32>;
trn w2<w32>;
trn spr<w32>;
trn spw<w32>;
trn lrr<w32>;
trn lrw<w32>;
trn plr<w32>;
trn plw<w32>;
trn phr<w32>;
trn phw<w32>;
trn pcr<w32>;
trn pcw<w32>;
trn pd1w<w32>;
trn pe1w<w32>;
trn pd2w<w32>;
trn pe2w<w32>;
trn aluA<w32>;
trn aluB<w32>;
trn aluC<w32>;
trn aluI<w16>;
trn aluU<int16p>;
trn aluM<uint1>;
trn aluN<uint1>;
trn tshA<w32>;
trn tshB<w32>;
trn tshC<w32>;
trn mpyA<w32>;
trn mpyB<w32>;
trn mpyC<w32>;
trn mpyD<w32>;
trn aguA<w32>;
trn aguB<w32>;
trn aguC<w32>;
trn p_addr<addr>;
trn lxB<w08>;
trn lxH<w16>;
trn lxC<w32>;
trn sxB<w08>;
trn sxH<w16>;
trn sxW<w32>;
trn cnd<bool>;
trn of16<int16>;
trn of26<int26>;
trn trgt<w32>;
trn lnk<w32>;
trn ds1<uint1>;
trn ds2<uint1>;
trn eqA<w32>;
trn pcaA<w32>;
trn pcaB<w32>;
trn pcaC<w32>;
trn rar<w32>;
trn raw<w32>;
trn rbr<w32>;
trn rbw<w32>;
trn rcr<w32>;
trn rcw<w32>;
trn rdr<w32>;
trn rdw<w32>;
trn rer<w32>;
trn rew<w32>;
trn rfr<w32>;
trn rfw<w32>;
trn rgr<w32>;
trn rgw<w32>;
trn rhr<w32>;
trn rhw<w32>;
trn r11r<w32>;
trn r11w<w32>;
trn r12r<w32>;
trn r12w<w32>;
trn lcr<w32>;
trn lcw<w32>;
trn lsr<w32>;
trn lsw<w32>;
trn ler<w32>;
trn lew<w32>;
trn ocd_addr_r<addr>;
trn ocd_addr_w<addr>;
trn ocd_instr_r<iword>;
trn ocd_ld_DMb<bool>;
trn ocd_st_DMb<bool>;
trn ocd_ld_PM<bool>;
trn ocd_st_PM<bool>;
trn ocd_incr_addr<bool>;
trn ocd_swbreak<uint1>;
trn ocd_req<uint1>;
trn ocd_exe<uint1>;
trn ocd_mod<uint1>;
trn __p_addr_r<addr>;
trn __p_addr_w<addr>;
trn __CTuint4_cstP17_EX<uint4> exp = r pos = ( 17: u 3..0 u );
trn __R_w1_wad<uint4>;
trn __CTuint4_cstP7_EX<uint4> exp = r pos = ( 7: u 3..0 u );
trn __R_r1_rad<uint4>;
trn __CTuint4_cstP12_EX<uint4> exp = r pos = ( 12: u 3..0 u );
trn __R_r2_rad<uint4>;
trn __CTint16_cstP16_EX<int16> exp = i pos = ( 16: u 15..0 u );
trn __CTuint16_cstP16_EX<uint16> exp = i pos = ( 16: u 15..0 u );
trn __CTint16p_cstP16_EX<int16p> exp = i pos = ( 16: u 15..0 u );
trn __CTuint4_cstP7_ID<uint4> exp = r pos = ( 7: u 3..0 u );
trn __R_r0_rad<uint4>;
trn __CTint16_cstP16_ID<int16> exp = i pos = ( 16: u 15..0 u );
trn __R_w0_wad<uint4>;
trn __CTint5_cstP16_ID<int5> exp = m pos = ( 16: u 4..0 u );
trn __CTuint1_cstV1<uint1> cst = 1f;
trn __CTint26_cstP6_ID<int26> exp = i pos = ( 6: u 25..0 u );
trn __CTw32_cstV1<w32> cst = 1f;
trn __ocd_ld_DMbID_w<bool>;
trn __ocd_ld_DMbEX_r<bool>;
trn __ocd_ld_PMID_w<bool>;
trn __ocd_ld_PMEX_r<bool>;

//Memories
mem PM[0..262143,1]<iword,addr> access {
    ifetch: pm_rd `1` = PM[pm_addr] `1`;
    istore: PM[pm_addr] = pm_wr;
};
mem DMb[0..16777215,1]<w08,addr> access {
    ld_dmb: dmb_rd `1` = DMb[dm_addr] `1`;
    st_dmb: DMb[dm_addr] = dmb_wr;
};
mem DMh[0..16777214,2]<w16,addr> alias DMb[0] align 2 access {
    ld_dmh: dmh_rd `1` = DMh[dm_addr] `1`;
    st_dmh: DMh[dm_addr] = dmh_wr;
};
mem DMw[0..16777212,4]<w32,addr> alias DMb[0] align 4 access {
    ld_dmw: dmw_rd `1` = DMw[dm_addr] `1`;
    st_dmw: DMw[dm_addr] = dmw_wr;
};
mem DMb_stat[0..1048575,1]<w08,addr> alias DMb[0] align 1;
mem DMh_stat[0..1048574,2]<w16,addr> alias DMb_stat[0] align 2;
mem DMw_stat[0..1048572,4]<w32,addr> alias DMb_stat[0] align 4;

//Functional units
fu alu
fu sh
fu mpy
fu agu
fu lx
fu sx
fu eq
fu pca
fu sha
fu ocd_addr_incr

//HW init values
hw_init R = others => 0;
hw_init ds1 = others => 0;
hw_init ds2 = others => 0;
hw_init ocd_ld_DMb = others => 0;
hw_init ocd_st_DMb = others => 0;
hw_init ocd_ld_PM = others => 0;
hw_init ocd_st_PM = others => 0;
hw_init ocd_incr_addr = others => 0;
hw_init ocd_swbreak = others => 0;
hw_init ocd_req = others => 0;
hw_init ocd_exe = others => 0;

//SW init values

//Operations
uint4_cstP17_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 1;
    isg : t;
    out : ( __CTuint4_cstP17_EX );
    rsc : (2) __CTuint4_cstP17_EX ;
    ins : 0;
}

__R_w1_wad_copy0___CTuint4_cstP17_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 2;
    isg : t;
    inp : ( __CTuint4_cstP17_EX );
    out : ( __R_w1_wad );
    rsc : (2) __R_w1_wad ;
    ins : 0;
}

R_wr_w1___R_w1_wad_EX : write_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 3;
    isg : t;
    inp : ( w1 __R_w1_wad );
    out : ( R );
    ins : 1;
}

w1_copy0_aluC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 4;
    isg : t;
    inp : ( aluC );
    out : ( w1 );
    rsc : (2) w1 ;
    ins : 2;
}

uint4_cstP7_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 5;
    isg : t;
    out : ( __CTuint4_cstP7_EX );
    rsc : (2) __CTuint4_cstP7_EX ;
    ins : 3;
}

aluA_copy0_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 6;
    isg : t;
    inp : ( r1 );
    out : ( aluA );
    rsc : (2) aluA ;
    ins : 4;
}

__R_r1_rad_copy0___CTuint4_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 7;
    isg : t;
    inp : ( __CTuint4_cstP7_EX );
    out : ( __R_r1_rad );
    rsc : (2) __R_r1_rad ;
    ins : 5;
}

r1_rd_R___R_r1_rad_EX : read_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 8;
    isg : t;
    inp : ( R __R_r1_rad );
    out : ( r1 );
    rsc : (2) r1 ;
    ins : 5;
}

uint4_cstP12_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 9;
    isg : t;
    out : ( __CTuint4_cstP12_EX );
    rsc : (2) __CTuint4_cstP12_EX ;
    ins : 6;
}

aluB_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 10;
    isg : t;
    inp : ( r2 );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 7;
}

__R_r2_rad_copy0___CTuint4_cstP12_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 11;
    isg : t;
    inp : ( __CTuint4_cstP12_EX );
    out : ( __R_r2_rad );
    rsc : (2) __R_r2_rad ;
    ins : 8;
}

r2_rd_R___R_r2_rad_EX : read_file {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 12;
    isg : t;
    inp : ( R __R_r2_rad );
    out : ( r2 );
    rsc : (2) r2 ;
    ins : 9;
}

MC_wr_aluM_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 13;
    isg : t;
    inp : ( aluM );
    out : ( MC );
    ins : 10;
}

aluC_add_aluA_aluB_aluM_alu_EX : w32_add_w32_w32_uint1 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 2 );
    rid : 14;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC aluM );
    rsc : (2) aluC aluM ;
    ins : 11;
    opr : alu;
}

aluC_sub_aluA_aluB_aluM_alu_EX : w32_sub_w32_w32_uint1 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 2 );
    rid : 15;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC aluM );
    rsc : (2) aluC aluM ;
    ins : 12;
    opr : alu;
}

aluN_rd_MC_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 16;
    isg : t;
    inp : ( MC );
    out : ( aluN );
    rsc : (2) aluN ;
    ins : 13;
}

aluC_addx_aluA_aluB_aluN_aluM_alu_EX : w32_addx_w32_w32_uint1_uint1 {
    fst : 2;
    ist : ( 2 2 2 );
    ost : ( 2 2 );
    rid : 17;
    isg : t;
    inp : ( aluA aluB aluN );
    out : ( aluC aluM );
    rsc : (2) aluC aluM ;
    ins : 14;
    opr : alu;
}

aluC_subx_aluA_aluB_aluN_aluM_alu_EX : w32_subx_w32_w32_uint1_uint1 {
    fst : 2;
    ist : ( 2 2 2 );
    ost : ( 2 2 );
    rid : 18;
    isg : t;
    inp : ( aluA aluB aluN );
    out : ( aluC aluM );
    rsc : (2) aluC aluM ;
    ins : 15;
    opr : alu;
}

aluC_band_aluA_aluB_alu_EX : w32_band_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 19;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 16;
    opr : alu;
}

aluC_bor_aluA_aluB_alu_EX : w32_bor_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 20;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 17;
    opr : alu;
}

aluC_seq_aluA_aluB_alu_EX : w32_seq_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 21;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 18;
    opr : alu;
}

aluC_sge_aluA_aluB_alu_EX : w32_sge_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 22;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 19;
    opr : alu;
}

aluC_sgeu_aluA_aluB_alu_EX : w32_sgeu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 23;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 20;
    opr : alu;
}

aluC_sgt_aluA_aluB_alu_EX : w32_sgt_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 24;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 21;
    opr : alu;
}

aluC_sgtu_aluA_aluB_alu_EX : w32_sgtu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 25;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 22;
    opr : alu;
}

aluC_sle_aluA_aluB_alu_EX : w32_sle_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 26;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 23;
    opr : alu;
}

aluC_sleu_aluA_aluB_alu_EX : w32_sleu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 27;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 24;
    opr : alu;
}

w1_copy0_tshC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 28;
    isg : t;
    inp : ( tshC );
    out : ( w1 );
    rsc : (2) w1 ;
    ins : 25;
}

tshA_copy0_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 29;
    isg : t;
    inp : ( r1 );
    out : ( tshA );
    rsc : (2) tshA ;
    ins : 25;
}

tshB_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 30;
    isg : t;
    inp : ( r2 );
    out : ( tshB );
    rsc : (2) tshB ;
    ins : 26;
}

tshC_sll_tshA_tshB_sh_EX : w32_sll_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 31;
    isg : t;
    inp : ( tshA tshB );
    out : ( tshC );
    rsc : (2) tshC ;
    ins : 27;
    opr : sh;
}

aluC_slt_aluA_aluB_alu_EX : w32_slt_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 32;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 28;
    opr : alu;
}

aluC_sltu_aluA_aluB_alu_EX : w32_sltu_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 33;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 29;
    opr : alu;
}

aluC_sne_aluA_aluB_alu_EX : w32_sne_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 34;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 30;
    opr : alu;
}

tshC_sra_tshA_tshB_sh_EX : w32_sra_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 35;
    isg : t;
    inp : ( tshA tshB );
    out : ( tshC );
    rsc : (2) tshC ;
    ins : 31;
    opr : sh;
}

tshC_srl_tshA_tshB_sh_EX : w32_srl_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 36;
    isg : t;
    inp : ( tshA tshB );
    out : ( tshC );
    rsc : (2) tshC ;
    ins : 32;
    opr : sh;
}

aluC_bxor_aluA_aluB_alu_EX : w32_bxor_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 37;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 33;
    opr : alu;
}

aluC_xtd_aluA_aluB_alu_EX : w32_xtd_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 38;
    isg : t;
    inp : ( aluA aluB );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 34;
    opr : alu;
}

aluC_clb_aluA_alu_EX : w32_clb_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 39;
    isg : t;
    inp : ( aluA );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 35;
    opr : alu;
}

w1_copy0_mpyC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 40;
    isg : t;
    inp : ( mpyC );
    out : ( w1 );
    rsc : (2) w1 ;
    ins : 36;
}

mpyA_copy0_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 41;
    isg : t;
    inp : ( r1 );
    out : ( mpyA );
    rsc : (2) mpyA ;
    ins : 37;
}

mpyB_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 42;
    isg : t;
    inp : ( r2 );
    out : ( mpyB );
    rsc : (2) mpyB ;
    ins : 37;
}

mpyC_mul_mpyA_mpyB_mpy_EX : w32_mul_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 43;
    isg : t;
    inp : ( mpyA mpyB );
    out : ( mpyC );
    rsc : (2) mpyC ;
    ins : 36;
    opr : mpy;
}

PL_wr_plw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 44;
    isg : t;
    inp : ( plw );
    out : ( PL );
    ins : 38;
}

plw_copy0_mpyC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 45;
    isg : t;
    inp : ( mpyC );
    out : ( plw );
    rsc : (2) plw ;
    ins : 38;
}

PH_wr_phw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 46;
    isg : t;
    inp : ( phw );
    out : ( PH );
    ins : 38;
}

phw_copy0_mpyD_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 47;
    isg : t;
    inp : ( mpyD );
    out : ( phw );
    rsc : (2) phw ;
    ins : 38;
}

vd_lmulss_mpyA_mpyB_mpyC_mpyD_mpy_EX : void_lmulss_w32_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 2 );
    rid : 48;
    isg : t;
    inp : ( mpyA mpyB );
    out : ( mpyC mpyD );
    rsc : (2) mpyC mpyD ;
    ins : 39;
    opr : mpy;
}

vd_lmulsu_mpyA_mpyB_mpyC_mpyD_mpy_EX : void_lmulsu_w32_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 2 );
    rid : 49;
    isg : t;
    inp : ( mpyA mpyB );
    out : ( mpyC mpyD );
    rsc : (2) mpyC mpyD ;
    ins : 40;
    opr : mpy;
}

vd_lmuluu_mpyA_mpyB_mpyC_mpyD_mpy_EX : void_lmuluu_w32_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 2 );
    rid : 50;
    isg : t;
    inp : ( mpyA mpyB );
    out : ( mpyC mpyD );
    rsc : (2) mpyC mpyD ;
    ins : 41;
    opr : mpy;
}

__R_w1_wad_copy0___CTuint4_cstP12_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 51;
    isg : t;
    inp : ( __CTuint4_cstP12_EX );
    out : ( __R_w1_wad );
    rsc : (2) __R_w1_wad ;
    ins : 42;
}

int16_cstP16_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 52;
    isg : t;
    out : ( __CTint16_cstP16_EX );
    rsc : (2) __CTint16_cstP16_EX ;
    ins : 43;
}

aluB_copy0___CTint16_cstP16_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 53;
    isg : t;
    inp : ( __CTint16_cstP16_EX );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 44;
}

uint16_cstP16_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 54;
    isg : t;
    out : ( __CTuint16_cstP16_EX );
    rsc : (2) __CTuint16_cstP16_EX ;
    ins : 45;
}

aluB_copy0___CTuint16_cstP16_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 55;
    isg : t;
    inp : ( __CTuint16_cstP16_EX );
    out : ( aluB );
    rsc : (2) aluB ;
    ins : 46;
}

tshB_copy0___CTuint16_cstP16_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 56;
    isg : t;
    inp : ( __CTuint16_cstP16_EX );
    out : ( tshB );
    rsc : (2) tshB ;
    ins : 47;
}

int16p_cstP16_EX : const {
    fst : 2;
    ost : ( 2 );
    rid : 57;
    isg : t;
    out : ( __CTint16p_cstP16_EX );
    rsc : (2) __CTint16p_cstP16_EX ;
    ins : 48;
}

aluU_copy0___CTint16p_cstP16_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 58;
    isg : t;
    inp : ( __CTint16p_cstP16_EX );
    out : ( aluU );
    rsc : (2) aluU ;
    ins : 48;
}

aluC_lhi_aluU_alu_EX : w32_lhi_int16p {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 59;
    isg : t;
    inp : ( aluU );
    out : ( aluC );
    rsc : (2) aluC ;
    ins : 48;
    opr : alu;
}

dm_addr_copy0_aguC_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 60;
    isg : t;
    inp : ( aguC );
    out : ( dm_addr );
    rsc : (1) dm_addr ;
    ins : 49;
}

uint4_cstP7_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 61;
    isg : t;
    out : ( __CTuint4_cstP7_ID );
    rsc : (1) __CTuint4_cstP7_ID ;
    ins : 50;
}

aguA_copy0_r0_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 62;
    isg : t;
    inp : ( r0 );
    out : ( aguA );
    rsc : (1) aguA ;
    ins : 50;
}

__R_r0_rad_copy0___CTuint4_cstP7_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 63;
    isg : t;
    inp : ( __CTuint4_cstP7_ID );
    out : ( __R_r0_rad );
    rsc : (1) __R_r0_rad ;
    ins : 50;
}

r0_rd_R___R_r0_rad_ID : read_file {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 64;
    isg : t;
    inp : ( R __R_r0_rad );
    out : ( r0 );
    rsc : (1) r0 ;
    ins : 50;
}

int16_cstP16_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 65;
    isg : t;
    out : ( __CTint16_cstP16_ID );
    rsc : (1) __CTint16_cstP16_ID ;
    ins : 51;
}

aguB_copy0___CTint16_cstP16_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 66;
    isg : t;
    inp : ( __CTint16_cstP16_ID );
    out : ( aguB );
    rsc : (1) aguB ;
    ins : 51;
}

aguC_add_aguA_aguB_agu_ID : w32_add_w32_w32 {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 67;
    isg : t;
    inp : ( aguA aguB );
    out : ( aguC );
    rsc : (1) aguC ;
    ins : 50;
    opr : agu;
}

dmb_rd_ld_DMb_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 68;
    isg : t;
    inp : ( DMb dm_addr );
    out : ( dmb_rd );
    rsc : (2) dmb_rd ;
    ins : 52;
}

w1_copy0_lxC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 69;
    isg : t;
    inp : ( lxC );
    out : ( w1 );
    rsc : (2) w1 ;
    ins : 53;
}

lxB_copy0_dmb_rd_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 70;
    isg : t;
    inp : ( dmb_rd );
    out : ( lxB );
    rsc : (2) lxB ;
    ins : 52;
}

lxC_extend_sign_lxB_lx_EX : w32_extend_sign_w08 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 71;
    isg : t;
    inp : ( lxB );
    out : ( lxC );
    rsc : (2) lxC ;
    ins : 54;
    opr : lx;
}

lxC_extend_zero_lxB_lx_EX : w32_extend_zero_w08 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 72;
    isg : t;
    inp : ( lxB );
    out : ( lxC );
    rsc : (2) lxC ;
    ins : 55;
    opr : lx;
}

dmh_rd_ld_DMh_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 73;
    isg : t;
    inp : ( DMh dm_addr );
    out : ( dmh_rd );
    rsc : (2) dmh_rd ;
    ins : 56;
}

lxH_copy0_dmh_rd_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 74;
    isg : t;
    inp : ( dmh_rd );
    out : ( lxH );
    rsc : (2) lxH ;
    ins : 56;
}

lxC_extend_sign_lxH_lx_EX : w32_extend_sign_w16 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 75;
    isg : t;
    inp : ( lxH );
    out : ( lxC );
    rsc : (2) lxC ;
    ins : 57;
    opr : lx;
}

lxC_extend_zero_lxH_lx_EX : w32_extend_zero_w16 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 76;
    isg : t;
    inp : ( lxH );
    out : ( lxC );
    rsc : (2) lxC ;
    ins : 58;
    opr : lx;
}

dmw_rd_ld_DMw_dm_addr_ID : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 77;
    isg : t;
    inp : ( DMw dm_addr );
    out : ( dmw_rd );
    rsc : (2) dmw_rd ;
    ins : 59;
}

lxC_copy0_dmw_rd_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 78;
    isg : t;
    inp : ( dmw_rd );
    out : ( lxC );
    rsc : (2) lxC ;
    ins : 59;
}

_pipe_p_addr_ID : copy1 {
    fst : 1;
    ist : ( 1 );
    ost : ( 2 );
    rid : 79;
    isg : t;
    inp : ( __p_addr_w );
    out : ( __p_addr_r );
    rsc : (2) __p_addr_r ;
    ins : 60;
}

p_addr_copy0_aguC_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 80;
    isg : t;
    inp : ( aguC );
    out : ( __p_addr_w );
    rsc : (1) __p_addr_w ;
    ins : 61;
}

dm_addr_copy0_p_addr_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 81;
    isg : t;
    inp : ( __p_addr_r );
    out : ( dm_addr );
    rsc : (2) dm_addr ;
    ins : 60;
}

dmb_wr_copy0_sxB_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 82;
    isg : t;
    inp : ( sxB );
    out : ( dmb_wr );
    rsc : (2) dmb_wr ;
    ins : 62;
}

sxW_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 83;
    isg : t;
    inp : ( r2 );
    out : ( sxW );
    rsc : (2) sxW ;
    ins : 63;
}

sxB_extract_w08_sxW_sx_EX : w08_extract_w08_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 84;
    isg : t;
    inp : ( sxW );
    out : ( sxB );
    rsc : (2) sxB ;
    ins : 62;
    opr : sx;
}

DMb_st_dmb_wr_dm_addr_EX : store {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 85;
    isg : t;
    inp : ( dmb_wr dm_addr );
    out : ( DMb );
    ins : 62;
}

dmh_wr_copy0_sxH_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 86;
    isg : t;
    inp : ( sxH );
    out : ( dmh_wr );
    rsc : (2) dmh_wr ;
    ins : 64;
}

sxH_extract_w16_sxW_sx_EX : w16_extract_w16_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 87;
    isg : t;
    inp : ( sxW );
    out : ( sxH );
    rsc : (2) sxH ;
    ins : 64;
    opr : sx;
}

DMh_st_dmh_wr_dm_addr_EX : store {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 88;
    isg : t;
    inp : ( dmh_wr dm_addr );
    out : ( DMh );
    ins : 64;
}

dmw_wr_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 89;
    isg : t;
    inp : ( r2 );
    out : ( dmw_wr );
    rsc : (2) dmw_wr ;
    ins : 65;
}

DMw_st_dmw_wr_dm_addr_EX : store {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 90;
    isg : t;
    inp : ( dmw_wr dm_addr );
    out : ( DMw );
    ins : 65;
}

__R_w0_wad_copy0___CTuint4_cstP7_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 91;
    isg : t;
    inp : ( __CTuint4_cstP7_ID );
    out : ( __R_w0_wad );
    rsc : (1) __R_w0_wad ;
    ins : 66;
}

R_wr_w0___R_w0_wad_ID : write_file {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 92;
    isg : t;
    inp : ( w0 __R_w0_wad );
    out : ( R );
    ins : 66;
}

w0_copy0_aguC_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 93;
    isg : t;
    inp : ( aguC );
    out : ( w0 );
    rsc : (1) w0 ;
    ins : 66;
}

int5_cstP16_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 94;
    isg : t;
    out : ( __CTint5_cstP16_ID );
    rsc : (1) __CTint5_cstP16_ID ;
    ins : 66;
}

aguB_copy0___CTint5_cstP16_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 95;
    isg : t;
    inp : ( __CTint5_cstP16_ID );
    out : ( aguB );
    rsc : (1) aguB ;
    ins : 66;
}

dm_addr_copy0_aguA_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 96;
    isg : t;
    inp : ( aguA );
    out : ( dm_addr );
    rsc : (1) dm_addr ;
    ins : 67;
}

p_addr_copy0_aguA_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 97;
    isg : t;
    inp : ( aguA );
    out : ( __p_addr_w );
    rsc : (1) __p_addr_w ;
    ins : 68;
}

uint1_cstV1 : const {
    fst : -1;
    ost : ( -1 );
    rid : 98;
    isg : t;
    out : ( __CTuint1_cstV1 );
    rsc : (0) __CTuint1_cstV1 ;
    ins : 69;
}

ds1_copy0___CTuint1_cstV1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 99;
    isg : t;
    inp : ( __CTuint1_cstV1 );
    out : ( ds1 );
    rsc : (1) ds1 ;
    ins : 70;
}

eqA_copy0_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 100;
    isg : t;
    inp : ( r1 );
    out : ( eqA );
    rsc : (2) eqA ;
    ins : 71;
}

cnd_eqz_eqA_eq_EX : bool_eqz_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 101;
    isg : t;
    inp : ( eqA );
    out : ( cnd );
    rsc : (2) cnd ;
    ins : 72;
    opr : eq;
}

cnd_nez_eqA_eq_EX : bool_nez_w32 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 102;
    isg : t;
    inp : ( eqA );
    out : ( cnd );
    rsc : (2) cnd ;
    ins : 73;
    opr : eq;
}

of16_copy0___CTint16_cstP16_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 103;
    isg : t;
    inp : ( __CTint16_cstP16_EX );
    out : ( of16 );
    rsc : (2) of16 ;
    ins : 71;
}

vd_br_cnd_of16_EX : void_br_bool_int16 {
    fst : 2;
    ist : ( 2 2 );
    rid : 104;
    isg : t;
    inp : ( cnd of16 );
    ins : 71;
}

ds2_copy0___CTuint1_cstV1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 105;
    isg : t;
    inp : ( __CTuint1_cstV1 );
    out : ( ds2 );
    rsc : (2) ds2 ;
    ins : 74;
}

int26_cstP6_ID : const {
    fst : 1;
    ost : ( 1 );
    rid : 106;
    isg : t;
    out : ( __CTint26_cstP6_ID );
    rsc : (1) __CTint26_cstP6_ID ;
    ins : 75;
}

of26_copy0___CTint26_cstP6_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 107;
    isg : t;
    inp : ( __CTint26_cstP6_ID );
    out : ( of26 );
    rsc : (1) of26 ;
    ins : 75;
}

vd_j_of26_ID : void_j_int26 {
    fst : 1;
    ist : ( 1 );
    rid : 108;
    isg : t;
    inp : ( of26 );
    ins : 76;
}

vd_jal_of26_ID : void_jal_int26 {
    fst : 1;
    ist : ( 1 );
    rid : 109;
    isg : t;
    inp : ( of26 );
    ins : 77;
}

LR_wr_lrw_ID : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 110;
    isg : t;
    inp : ( lrw );
    out : ( LR );
    ins : 77;
}

lrw_copy0_pcaC_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 111;
    isg : t;
    inp : ( pcaC );
    out : ( lrw );
    rsc : (1) lrw ;
    ins : 77;
}

pcaA_copy0_pcr_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 112;
    isg : t;
    inp : ( pcr );
    out : ( pcaA );
    rsc : (1) pcaA ;
    ins : 77;
}

pcr_rd_PC_ID : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 113;
    isg : t;
    inp : ( PC );
    out : ( pcr );
    rsc : (1) pcr ;
    ins : 77;
}

w32_cstV1 : const {
    fst : -1;
    ost : ( -1 );
    rid : 114;
    isg : t;
    out : ( __CTw32_cstV1 );
    rsc : (0) __CTw32_cstV1 ;
    ins : 78;
}

pcaB_copy0___CTw32_cstV1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 115;
    isg : t;
    inp : ( __CTw32_cstV1 );
    out : ( pcaB );
    rsc : (1) pcaB ;
    ins : 77;
}

pcaC_pcadd_pcaA_pcaB_pca_ID : w32_pcadd_w32_w32 {
    fst : 1;
    ist : ( 1 1 );
    ost : ( 1 );
    rid : 116;
    isg : t;
    inp : ( pcaA pcaB );
    out : ( pcaC );
    rsc : (1) pcaC ;
    ins : 77;
    opr : pca;
}

LR_wr_lrw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 117;
    isg : t;
    inp : ( lrw );
    out : ( LR );
    ins : 79;
}

lrw_copy0_pcaC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 118;
    isg : t;
    inp : ( pcaC );
    out : ( lrw );
    rsc : (2) lrw ;
    ins : 79;
}

pcaA_copy0_pcr_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 119;
    isg : t;
    inp : ( pcr );
    out : ( pcaA );
    rsc : (2) pcaA ;
    ins : 79;
}

pcr_rd_PC_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 120;
    isg : t;
    inp : ( PC );
    out : ( pcr );
    rsc : (2) pcr ;
    ins : 79;
}

pcaB_copy0___CTw32_cstV1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 121;
    isg : t;
    inp : ( __CTw32_cstV1 );
    out : ( pcaB );
    rsc : (2) pcaB ;
    ins : 79;
}

pcaC_pcadd_pcaA_pcaB_pca_EX : w32_pcadd_w32_w32 {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 122;
    isg : t;
    inp : ( pcaA pcaB );
    out : ( pcaC );
    rsc : (2) pcaC ;
    ins : 79;
    opr : pca;
}

trgt_copy0_r2_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 123;
    isg : t;
    inp : ( r2 );
    out : ( trgt );
    rsc : (2) trgt ;
    ins : 79;
}

__R_r2_rad_copy0___CTuint4_cstP7_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 124;
    isg : t;
    inp : ( __CTuint4_cstP7_EX );
    out : ( __R_r2_rad );
    rsc : (2) __R_r2_rad ;
    ins : 79;
}

vd_jalr_trgt_EX : void_jalr_w32 {
    fst : 2;
    ist : ( 2 );
    rid : 125;
    isg : t;
    inp : ( trgt );
    ins : 79;
}

trgt_copy0_r1_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 126;
    isg : t;
    inp : ( r1 );
    out : ( trgt );
    rsc : (2) trgt ;
    ins : 80;
}

vd_jr_trgt_EX : void_jr_w32 {
    fst : 2;
    ist : ( 2 );
    rid : 127;
    isg : t;
    inp : ( trgt );
    ins : 80;
}

ocd_swbreak_copy0___CTuint1_cstV1_ID : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 128;
    isg : t;
    inp : ( __CTuint1_cstV1 );
    out : ( ocd_swbreak );
    rsc : (1) ocd_swbreak ;
    ins : 81;
}

vd_nop_ID : void_nop {
    fst : 1;
    rid : 129;
    isg : t;
    ins : 82;
}

RA_wr_raw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 130;
    isg : t;
    inp : ( raw );
    out : ( RA );
    ins : 83;
}

rar_rd_RA_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 131;
    isg : t;
    inp : ( RA );
    out : ( rar );
    rsc : (2) rar ;
    ins : 83;
}

rbr_rd_RB_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 132;
    isg : t;
    inp : ( RB );
    out : ( rbr );
    rsc : (2) rbr ;
    ins : 83;
}

rcr_rd_RC_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 133;
    isg : t;
    inp : ( RC );
    out : ( rcr );
    rsc : (2) rcr ;
    ins : 83;
}

rdr_rd_RD_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 134;
    isg : t;
    inp : ( RD );
    out : ( rdr );
    rsc : (2) rdr ;
    ins : 83;
}

rer_rd_RE_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 135;
    isg : t;
    inp : ( RE );
    out : ( rer );
    rsc : (2) rer ;
    ins : 83;
}

RB_wr_rbw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 136;
    isg : t;
    inp : ( rbw );
    out : ( RB );
    ins : 83;
}

RC_wr_rcw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 137;
    isg : t;
    inp : ( rcw );
    out : ( RC );
    ins : 83;
}

raw_DUCbCr_rar_rbr_rcr_rdr_rer_rbw_rcw_sha_EX : w32_DUCbCr_w32_w32_w32_w32_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 2 2 2 );
    ost : ( 2 2 2 );
    rid : 138;
    isg : t;
    inp : ( rar rbr rcr rdr rer );
    out : ( raw rbw rcw );
    rsc : (2) raw rbw rcw ;
    ins : 84;
    opr : sha;
}

rfr_rd_RF_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 139;
    isg : t;
    inp : ( RF );
    out : ( rfr );
    rsc : (2) rfr ;
    ins : 85;
}

rgr_rd_RG_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 140;
    isg : t;
    inp : ( RG );
    out : ( rgr );
    rsc : (2) rgr ;
    ins : 85;
}

rhr_rd_RH_EX : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 141;
    isg : t;
    inp : ( RH );
    out : ( rhr );
    rsc : (2) rhr ;
    ins : 85;
}

RD_wr_rdw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 142;
    isg : t;
    inp : ( rdw );
    out : ( RD );
    ins : 85;
}

RE_wr_rew_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 143;
    isg : t;
    inp : ( rew );
    out : ( RE );
    ins : 85;
}

RF_wr_rfw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 144;
    isg : t;
    inp : ( rfw );
    out : ( RF );
    ins : 85;
}

RG_wr_rgw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 145;
    isg : t;
    inp : ( rgw );
    out : ( RG );
    ins : 85;
}

RH_wr_rhw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 146;
    isg : t;
    inp : ( rhw );
    out : ( RH );
    ins : 85;
}

vd_jpeg_fdct_rar_rbr_rcr_rdr_rer_rfr_rgr_rhr_raw_rbw_rcw_rdw_rew_rfw_rgw_rhw_sha_EX : void_jpeg_fdct_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32_w32 {
    fst : 2;
    ist : ( 2 2 2 2 2 2 2 2 );
    ost : ( 2 2 2 2 2 2 2 2 );
    rid : 147;
    isg : t;
    inp : ( rar rbr rcr rdr rer rfr rgr rhr );
    out : ( raw rbw rcw rdw rew rfw rgw rhw );
    rsc : (2) raw rbw rcw rdw rew rfw rgw rhw ;
    ins : 85;
    opr : sha;
}

LC_wr_lcw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 148;
    isg : t;
    inp : ( lcw );
    out : ( LC );
    ins : 86;
}

lcw_copy0_aluC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 149;
    isg : t;
    inp : ( aluC );
    out : ( lcw );
    rsc : (2) lcw ;
    ins : 86;
}

LS_wr_lsw_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 150;
    isg : t;
    inp : ( lsw );
    out : ( LS );
    ins : 87;
}

lsw_copy0_aluC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 151;
    isg : t;
    inp : ( aluC );
    out : ( lsw );
    rsc : (2) lsw ;
    ins : 87;
}

LE_wr_lew_EX : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 152;
    isg : t;
    inp : ( lew );
    out : ( LE );
    ins : 88;
}

lew_copy0_aluC_EX : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 153;
    isg : t;
    inp : ( aluC );
    out : ( lew );
    rsc : (2) lew ;
    ins : 88;
}

ocd_addr_wr_ocd_addr_w_ocd_ld_DMb_ID_alw : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 154;
    isg : t;
    inp : ( ocd_addr_w );
    out : ( ocd_addr );
    grd : ( ocd_ld_DMb );
    ins : 89;
}

ocd_addr_r_rd_ocd_addr_ocd_ld_DMb_ID_alw : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 155;
    isg : t;
    inp : ( ocd_addr );
    out : ( ocd_addr_r );
    grd : ( ocd_ld_DMb );
    rsc : (1) ocd_addr_r ;
    ins : 89;
}

ocd_addr_w_incr1_ocd_addr_r_ocd_addr_incr_ocd_ld_DMb_ID_alw : addr_incr1_addr {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 156;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( ocd_addr_w );
    grd : ( ocd_ld_DMb );
    rsc : (1) ocd_addr_w ;
    ins : 89;
    opr : ocd_addr_incr;
}

__ocd_ld_DMbID_w_cp_ocd_ld_DMb_ID : copy {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 157;
    isg : t;
    inp : ( ocd_ld_DMb );
    out : ( __ocd_ld_DMbID_w );
    rsc : (1) __ocd_ld_DMbID_w ;
    ins : 89;
}

_pipe__ocd_ld_DMbID_EX : copy1 {
    fst : 1;
    ist : ( 1 );
    ost : ( 2 );
    rid : 158;
    isg : t;
    inp : ( __ocd_ld_DMbID_w );
    out : ( __ocd_ld_DMbEX_r );
    rsc : (2) __ocd_ld_DMbEX_r ;
    ins : 89;
}

ocd_data_wr_dmb_rd___ocd_ld_DMbEX_r_EX_alw : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 159;
    isg : t;
    inp : ( dmb_rd );
    out : ( ocd_data );
    grd : ( __ocd_ld_DMbEX_r );
    ins : 89;
}

dm_addr_copy0_ocd_addr_r_ocd_ld_DMb_ID_alw : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 160;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( dm_addr );
    grd : ( ocd_ld_DMb );
    rsc : (1) dm_addr ;
    ins : 89;
}

dmb_rd_ld_DMb_dm_addr_ocd_ld_DMb_ID_alw : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 161;
    isg : t;
    inp : ( DMb dm_addr );
    out : ( dmb_rd );
    grd : ( ocd_ld_DMb );
    rsc : (2) dmb_rd ;
    ins : 89;
}

ocd_addr_wr_ocd_addr_w_ocd_st_DMb_EX_alw : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 162;
    isg : t;
    inp : ( ocd_addr_w );
    out : ( ocd_addr );
    grd : ( ocd_st_DMb );
    ins : 89;
}

ocd_addr_r_rd_ocd_addr_ocd_st_DMb_EX_alw : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 163;
    isg : t;
    inp : ( ocd_addr );
    out : ( ocd_addr_r );
    grd : ( ocd_st_DMb );
    rsc : (2) ocd_addr_r ;
    ins : 89;
}

ocd_addr_w_incr1_ocd_addr_r_ocd_addr_incr_ocd_st_DMb_EX_alw : addr_incr1_addr {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 164;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( ocd_addr_w );
    grd : ( ocd_st_DMb );
    rsc : (2) ocd_addr_w ;
    ins : 89;
    opr : ocd_addr_incr;
}

dm_addr_copy0_ocd_addr_r_ocd_st_DMb_EX_alw : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 165;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( dm_addr );
    grd : ( ocd_st_DMb );
    rsc : (2) dm_addr ;
    ins : 89;
}

DMb_st_dmb_wr_dm_addr_ocd_st_DMb_EX_alw : store {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 166;
    isg : t;
    inp : ( dmb_wr dm_addr );
    out : ( DMb );
    grd : ( ocd_st_DMb );
    ins : 89;
}

dmb_wr_rd_ocd_data_ocd_st_DMb_EX_alw : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 167;
    isg : t;
    inp : ( ocd_data );
    out : ( dmb_wr );
    grd : ( ocd_st_DMb );
    rsc : (2) dmb_wr ;
    ins : 89;
}

ocd_addr_wr_ocd_addr_w_ocd_ld_PM_ID_alw : write_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 168;
    isg : t;
    inp : ( ocd_addr_w );
    out : ( ocd_addr );
    grd : ( ocd_ld_PM );
    ins : 89;
}

ocd_addr_r_rd_ocd_addr_ocd_ld_PM_ID_alw : read_reg {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 169;
    isg : t;
    inp : ( ocd_addr );
    out : ( ocd_addr_r );
    grd : ( ocd_ld_PM );
    rsc : (1) ocd_addr_r ;
    ins : 89;
}

ocd_addr_w_incr1_ocd_addr_r_ocd_addr_incr_ocd_ld_PM_ID_alw : addr_incr1_addr {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 170;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( ocd_addr_w );
    grd : ( ocd_ld_PM );
    rsc : (1) ocd_addr_w ;
    ins : 89;
    opr : ocd_addr_incr;
}

__ocd_ld_PMID_w_cp_ocd_ld_PM_ID : copy {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 171;
    isg : t;
    inp : ( ocd_ld_PM );
    out : ( __ocd_ld_PMID_w );
    rsc : (1) __ocd_ld_PMID_w ;
    ins : 89;
}

_pipe__ocd_ld_PMID_EX : copy1 {
    fst : 1;
    ist : ( 1 );
    ost : ( 2 );
    rid : 172;
    isg : t;
    inp : ( __ocd_ld_PMID_w );
    out : ( __ocd_ld_PMEX_r );
    rsc : (2) __ocd_ld_PMEX_r ;
    ins : 89;
}

ocd_instr_wr_pm_rd___ocd_ld_PMEX_r_EX_alw : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 173;
    isg : t;
    inp : ( pm_rd );
    out : ( ocd_instr );
    grd : ( __ocd_ld_PMEX_r );
    ins : 89;
}

pm_addr_copy0_ocd_addr_r_ocd_ld_PM_ID_alw : copy0 {
    fst : 1;
    ist : ( 1 );
    ost : ( 1 );
    rid : 174;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( pm_addr );
    grd : ( ocd_ld_PM );
    rsc : (1) pm_addr ;
    ins : 89;
}

pm_rd_ld_PM_pm_addr_ocd_ld_PM_ID_alw : load {
    fst : 1;
    ist : ( 2 1 );
    ost : ( 2 );
    rid : 175;
    isg : t;
    inp : ( PM pm_addr );
    out : ( pm_rd );
    grd : ( ocd_ld_PM );
    rsc : (2) pm_rd ;
    ins : 89;
}

ocd_addr_wr_ocd_addr_w_ocd_st_PM_EX_alw : write_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 176;
    isg : t;
    inp : ( ocd_addr_w );
    out : ( ocd_addr );
    grd : ( ocd_st_PM );
    ins : 89;
}

ocd_addr_r_rd_ocd_addr_ocd_st_PM_EX_alw : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 177;
    isg : t;
    inp : ( ocd_addr );
    out : ( ocd_addr_r );
    grd : ( ocd_st_PM );
    rsc : (2) ocd_addr_r ;
    ins : 89;
}

ocd_addr_w_incr1_ocd_addr_r_ocd_addr_incr_ocd_st_PM_EX_alw : addr_incr1_addr {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 178;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( ocd_addr_w );
    grd : ( ocd_st_PM );
    rsc : (2) ocd_addr_w ;
    ins : 89;
    opr : ocd_addr_incr;
}

pm_addr_copy0_ocd_addr_r_ocd_st_PM_EX_alw : copy0 {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 179;
    isg : t;
    inp : ( ocd_addr_r );
    out : ( pm_addr );
    grd : ( ocd_st_PM );
    rsc : (2) pm_addr ;
    ins : 89;
}

PM_st_pm_wr_pm_addr_ocd_st_PM_EX_alw : store {
    fst : 2;
    ist : ( 2 2 );
    ost : ( 2 );
    rid : 180;
    isg : t;
    inp : ( pm_wr pm_addr );
    out : ( PM );
    grd : ( ocd_st_PM );
    ins : 89;
}

pm_wr_rd_ocd_instr_ocd_st_PM_EX_alw : read_reg {
    fst : 2;
    ist : ( 2 );
    ost : ( 2 );
    rid : 181;
    isg : t;
    inp : ( ocd_instr );
    out : ( pm_wr );
    grd : ( ocd_st_PM );
    rsc : (2) pm_wr ;
    ins : 89;
}


//Hazards
sw_stall [1,2] i n <sha_n_L79> {
    ins : 86;
} -> {
    spc : end_of_loop;
}

sw_stall [1,2] i n <sha_n_L80> {
    ins : 87;
} -> {
    spc : end_of_loop;
}

sw_stall [1,2] i n <sha_n_L81> {
    ins : 88;
} -> {
    spc : end_of_loop;
}

sw_stall [1,2] i n <sha_n_L85> {
    ins : 71;
} -> {
    spc : end_of_loop;
}

sw_stall [1,2] i n <sha_n_L86> {
    ins : 76;
} -> {
    spc : end_of_loop;
}

sw_stall [1,2] i n <sha_n_L87> {
    ins : 80;
} -> {
    spc : end_of_loop;
}

sw_stall [1,1] c n <dm_addr_conflict> {
} -> {
}

hw_stall [1,1] c f <read_after_write_R> {
    reg : R_wr_w1___R_w1_wad_EX PL_wr_plw_EX PH_wr_phw_EX LR_wr_lrw_EX RA_wr_raw_EX RB_wr_rbw_EX RC_wr_rcw_EX RD_wr_rdw_EX RE_wr_rew_EX RF_wr_rfw_EX RG_wr_rgw_EX RH_wr_rhw_EX;
    ins : 90;
} -> {
    reg : r0_rd_R___R_r0_rad_ID;
    ins : 50;
}



//Instruction properties
i_class_ldstpm : instruction_class {
    ins : 66;
}


cycles1 : cycles {
    cyc : 1;
    ins : 89;
}


words1 : words {
    wrd : 1;
    ins : 89;
}


alt_cycles0 : alt_cycles {
    ins : 89;
}


delay_slots0 : delay_slots {
    ins : 91;
}

delay_slots1 : delay_slots {
    del : 1;
    ins : 75;
}

delay_slots2 : delay_slots {
    del : 2;
    ins : 74;
}


pc_offset0 : pc_offset {
    ins : 92;
}

pc_offset1 : pc_offset {
    pco : 1;
    ins : 75;
}

pc_offset2 : pc_offset {
    pco : 2;
    ins : 71;
}


0 : 'alu.n';
1 : 'control.n';
2 : 'ldst.n';
3 : 'ocd_if.n';
4 : 'regfile.n';
5 : 'sha.n';
----------
----------
1 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (4,18:29,0);
2 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (4,18:49,0);
3 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (0,170:26,0) (2,44:61,0) (2,46:61,0) (2,48:61,0) (2,50:61,0) (2,52:42,0) (2,100:61,0) (2,102:61,0) (2,104:61,0) (2,106:61,0) (2,108:42,0) (4,18:49,0);
4 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,154:48,0) (0,157:48,0) (0,158:48,0) (0,170:26,0) (4,18:49,0);
5 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (1,57:30,0) (1,58:30,0) (1,105:13,0) (1,120:18,0) (5,66:36,0) (4,18:29,0) (4,19:29,0);
6 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,154:48,0) (0,157:48,0) (0,158:48,0) (5,66:36,0) (4,18:49,0);
7 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (1,57:30,0) (1,58:30,0) (1,120:18,0) (5,66:36,0) (4,18:49,0);
8 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,79:39,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (1,57:30,0) (1,58:30,0) (1,120:18,0) (5,66:36,0) (4,18:49,0);
9 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (0,170:26,0) (2,44:61,0) (2,46:61,0) (2,48:61,0) (2,50:61,0) (2,52:42,0) (2,67:46,0) (2,69:46,0) (2,71:21,0) (2,100:61,0) (2,102:61,0) (2,104:61,0) (2,106:61,0) (2,108:42,0) (2,124:46,0) (2,126:46,0) (2,128:21,0) (4,19:29,0) (4,18:29,0);
10 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,66:48,0) (0,67:48,0) (4,19:49,0);
11 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (2,67:46,0) (2,69:46,0) (2,71:21,0) (2,124:46,0) (2,126:46,0) (2,128:21,0) (4,19:49,0);
12 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,51:48,0) (0,52:48,0) (0,53:48,0) (0,54:48,0) (0,55:48,0) (0,56:48,0) (0,57:48,0) (0,58:48,0) (0,59:48,0) (0,60:49,0) (0,61:48,0) (0,62:48,0) (0,63:48,0) (0,64:49,0) (0,65:49,0) (0,66:48,0) (0,67:48,0) (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (2,67:46,0) (2,69:46,0) (2,71:21,0) (2,124:46,0) (2,126:46,0) (2,128:21,0) (1,105:13,0) (4,19:49,0);
13 : (0,45:56,0) (0,46:56,0) (0,48:64,0) (0,49:64,0) (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,45:48,0) (0,46:48,0) (0,48:56,0) (0,49:56,0) (0,118:47,0) (0,119:47,0) (0,121:55,0) (0,122:55,0) (0,142:48,0) (0,143:48,0) (0,145:56,0) (0,146:56,0);
14 : (0,45:56,0) (0,118:55,0) (0,142:56,0);
15 : (0,46:56,0) (0,119:55,0) (0,143:56,0);
16 : (0,48:64,0) (0,49:64,0) (0,121:63,0) (0,122:63,0) (0,145:64,0) (0,146:64,0) (0,48:50,0) (0,49:50,0) (0,121:49,0) (0,122:49,0) (0,145:50,0) (0,146:50,0);
17 : (0,48:64,0) (0,121:63,0) (0,145:64,0);
18 : (0,49:64,0) (0,122:63,0) (0,146:64,0);
19 : (0,51:48,0) (0,148:48,0);
20 : (0,52:48,0) (0,149:48,0) (5,66:36,0);
21 : (0,53:48,0) (0,124:47,0);
22 : (0,54:48,0) (0,125:47,0);
23 : (0,55:48,0) (0,150:48,0);
24 : (0,56:48,0) (0,126:47,0);
25 : (0,57:48,0) (0,151:48,0);
26 : (0,58:48,0) (0,127:47,0);
27 : (0,59:48,0) (0,152:48,0);
28 : (0,60:49,0) (0,64:49,0) (0,65:49,0) (0,153:49,0) (0,155:49,0) (0,156:49,0) (4,18:49,0);
29 : (0,60:49,0) (0,64:49,0) (0,65:49,0) (0,153:49,0) (0,155:49,0) (0,156:49,0) (4,18:49,0);
30 : (0,60:49,0) (0,64:49,0) (0,65:49,0) (4,19:49,0);
31 : (0,60:49,0) (0,153:49,0);
32 : (0,61:48,0) (0,128:47,0);
33 : (0,62:48,0) (0,154:48,0);
34 : (0,63:48,0) (0,129:47,0);
35 : (0,64:49,0) (0,155:49,0);
36 : (0,65:49,0) (0,156:49,0);
37 : (0,66:48,0) (0,157:48,0);
38 : (0,67:48,0) (0,158:48,0);
39 : (0,79:39,0);
40 : (0,91:47,0) (4,18:49,0);
41 : (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,18:49,0);
42 : (0,91:47,0) (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,19:49,0);
43 : (0,91:47,0);
44 : (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,24:43,0);
45 : (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,24:43,0);
46 : (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,25:43,0);
47 : (0,103:59,0) (0,104:59,0) (0,105:59,0) (4,25:43,0);
48 : (0,103:59,0);
49 : (0,104:59,0);
50 : (0,105:59,0);
51 : (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (0,170:26,0) (2,44:61,0) (2,46:61,0) (2,48:61,0) (2,50:61,0) (2,52:42,0) (2,100:61,0) (2,102:61,0) (2,104:61,0) (2,106:61,0) (2,108:42,0) (4,18:49,0);
52 : (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (1,60:15,0) (0,118:42,0) (0,119:42,0) (0,121:42,0) (0,122:42,0) (0,124:42,0) (0,125:42,0) (0,126:42,0) (0,127:42,0) (0,128:42,0) (0,129:42,0) (1,60:12,0);
53 : (0,118:55,0) (0,119:55,0) (0,121:63,0) (0,122:63,0) (0,124:47,0) (0,125:47,0) (0,126:47,0) (0,127:47,0) (0,128:47,0) (0,129:47,0) (0,118:42,0) (0,119:42,0) (0,121:42,0) (0,122:42,0) (0,124:42,0) (0,125:42,0) (0,126:42,0) (0,127:42,0) (0,128:42,0) (0,129:42,0);
54 : (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,153:49,0) (0,154:48,0) (0,155:49,0) (0,156:49,0) (0,157:48,0) (0,158:48,0) (5,66:36,0) (0,142:43,0) (0,143:43,0) (0,145:43,0) (0,146:43,0) (0,148:43,0) (0,149:43,0) (0,150:43,0) (0,151:43,0) (0,152:43,0) (0,153:43,0) (0,154:43,0) (0,155:43,0) (0,156:43,0) (0,157:43,0) (0,158:43,0) (5,66:31,0);
55 : (0,142:56,0) (0,143:56,0) (0,145:64,0) (0,146:64,0) (0,148:48,0) (0,149:48,0) (0,150:48,0) (0,151:48,0) (0,152:48,0) (0,154:48,0) (0,157:48,0) (0,158:48,0) (5,66:36,0) (0,142:43,0) (0,143:43,0) (0,145:43,0) (0,146:43,0) (0,148:43,0) (0,149:43,0) (0,150:43,0) (0,151:43,0) (0,152:43,0) (0,154:43,0) (0,157:43,0) (0,158:43,0) (5,66:31,0);
56 : (0,153:49,0) (0,155:49,0) (0,156:49,0) (0,153:43,0) (0,155:43,0) (0,156:43,0);
57 : (0,170:26,0) (0,170:21,0);
58 : (0,170:26,0) (0,170:21,0);
59 : (0,170:26,0);
60 : (2,40:46,0) (2,40:16,0);
61 : (2,40:46,0) (2,63:45,0) (2,95:43,0) (2,119:43,0) (4,17:29,0);
62 : (2,40:46,0) (2,63:45,0) (2,95:43,0) (2,119:43,0) (4,17:49,0);
63 : (2,40:46,0) (2,63:45,0) (2,95:43,0) (2,119:43,0) (4,17:49,0);
64 : (2,40:46,0) (2,63:45,0) (2,95:43,0) (2,119:43,0) (4,17:49,0);
65 : (2,40:46,0) (2,63:45,0) (2,40:41,0) (2,63:40,0);
66 : (2,40:46,0) (2,63:45,0) (2,40:41,0) (2,63:40,0);
67 : (2,40:46,0) (2,63:45,0) (2,95:43,0) (2,119:43,0);
68 : (2,43:58,0) (2,45:58,0) (2,99:58,0) (2,101:58,0) (2,43:36,0) (2,45:36,0) (2,99:36,0) (2,101:36,0);
69 : (2,44:61,0) (2,46:61,0) (2,48:61,0) (2,50:61,0) (2,52:42,0) (2,100:61,0) (2,102:61,0) (2,104:61,0) (2,106:61,0) (2,108:42,0) (4,18:49,0);
70 : (2,44:61,0) (2,46:61,0) (2,100:61,0) (2,102:61,0) (2,44:51,0) (2,46:51,0) (2,100:51,0) (2,102:51,0);
71 : (2,44:61,0) (2,100:61,0);
72 : (2,46:61,0) (2,102:61,0);
73 : (2,47:58,0) (2,49:58,0) (2,103:58,0) (2,105:58,0) (2,47:36,0) (2,49:36,0) (2,103:36,0) (2,105:36,0);
74 : (2,48:61,0) (2,50:61,0) (2,104:61,0) (2,106:61,0) (2,48:51,0) (2,50:51,0) (2,104:51,0) (2,106:51,0);
75 : (2,48:61,0) (2,104:61,0);
76 : (2,50:61,0) (2,106:61,0);
77 : (2,51:58,0) (2,107:58,0) (2,51:36,0) (2,107:36,0);
78 : (2,52:42,0) (2,108:42,0) (2,52:28,0) (2,108:28,0);
79 : (2,63:45,0) (2,120:21,0) (2,63:15,0) (2,120:15,0);
80 : (2,63:45,0) (2,63:15,0);
81 : (2,65:24,0) (2,122:24,0) (2,65:16,0) (2,122:16,0);
82 : (2,67:46,0) (2,124:46,0) (2,67:17,0) (2,124:17,0);
83 : (2,67:46,0) (2,69:46,0) (2,124:46,0) (2,126:46,0) (4,19:49,0);
84 : (2,67:46,0) (2,124:46,0);
85 : (2,68:38,0) (2,125:38,0) (2,68:30,0) (2,125:30,0);
86 : (2,69:46,0) (2,126:46,0) (2,69:17,0) (2,126:17,0);
87 : (2,69:46,0) (2,126:46,0);
88 : (2,70:38,0) (2,127:38,0) (2,70:30,0) (2,127:30,0);
89 : (2,71:21,0) (2,128:21,0) (4,19:49,0);
90 : (2,72:38,0) (2,129:38,0) (2,72:30,0) (2,129:30,0);
91 : (2,95:43,0) (2,119:43,0) (4,17:49,0);
92 : (2,95:43,0) (2,119:43,0) (4,17:49,0);
93 : (2,95:43,0) (2,119:43,0) (4,17:49,0);
94 : (2,95:43,0) (2,119:43,0) (2,95:38,0) (2,119:38,0);
95 : (2,95:43,0) (2,119:43,0) (2,95:38,0) (2,119:38,0);
96 : (2,96:22,0) (2,96:16,0);
97 : (2,120:21,0) (2,120:15,0);
98 : (1,54:8,0) (1,61:8,0) (1,72:8,0) (1,87:8,0) (1,99:8,0) (1,106:8,0) (1,118:8,0) (1,121:8,0) (3,87:38,0) (1,54:5,0) (1,61:5,0) (1,72:5,0) (1,87:5,0) (1,99:5,0) (1,106:5,0) (1,118:5,0) (1,121:5,0) (3,87:35,0);
99 : (1,54:8,0) (1,72:8,0) (1,87:8,0) (1,99:8,0) (1,118:8,0) (1,54:5,0) (1,72:5,0) (1,87:5,0) (1,99:5,0) (1,118:5,0);
100 : (1,57:30,0) (1,58:30,0) (4,18:49,0);
101 : (1,57:30,0);
102 : (1,58:30,0);
103 : (1,60:15,0) (1,60:12,0);
104 : (1,60:15,0);
105 : (1,61:8,0) (1,106:8,0) (1,121:8,0) (1,61:5,0) (1,106:5,0) (1,121:5,0);
106 : (1,71:17,0) (1,85:12,0) (1,71:14,0) (1,85:9,0);
107 : (1,71:17,0) (1,85:12,0) (1,71:14,0) (1,85:9,0);
108 : (1,71:17,0);
109 : (1,85:12,0);
110 : (1,86:40,0) (4,23:43,0);
111 : (1,86:40,0) (4,23:43,0);
112 : (1,86:40,0) (1,86:23,0);
113 : (1,86:40,0) (1,86:23,0);
114 : (1,86:40,0) (1,104:40,0) (1,86:35,0) (1,104:35,0);
115 : (1,86:40,0) (1,86:35,0);
116 : (1,86:40,0);
117 : (1,104:40,0) (4,23:43,0);
118 : (1,104:40,0) (4,23:43,0);
119 : (1,104:40,0) (1,104:23,0);
120 : (1,104:40,0) (1,104:23,0);
121 : (1,104:40,0) (1,104:35,0);
122 : (1,104:40,0);
123 : (1,105:13,0) (4,19:49,0);
124 : (1,105:13,0) (4,19:49,0);
125 : (1,105:13,0);
126 : (1,120:18,0) (4,18:49,0);
127 : (1,120:18,0);
128 : (3,87:38,0) (3,87:35,0);
129 : (1,129:28,0);
130 : (5,36:71,0) (5,47:76,0) (5,36:11,0) (5,47:20,0);
131 : (5,36:71,0) (5,47:76,0) (5,36:23,0) (5,46:21,0);
132 : (5,36:71,0) (5,47:76,0) (5,36:30,0) (5,46:28,0);
133 : (5,36:71,0) (5,47:76,0) (5,36:37,0) (5,46:35,0);
134 : (5,36:71,0) (5,47:76,0) (5,36:44,0) (5,46:42,0);
135 : (5,36:71,0) (5,47:76,0) (5,36:51,0) (5,46:49,0);
136 : (5,36:71,0) (5,47:76,0) (5,36:57,0) (5,47:27,0);
137 : (5,36:71,0) (5,47:76,0) (5,36:64,0) (5,47:34,0);
138 : (5,36:71,0);
139 : (5,47:76,0) (5,46:56,0);
140 : (5,47:76,0) (5,46:63,0);
141 : (5,47:76,0) (5,46:70,0);
142 : (5,47:76,0) (5,47:41,0);
143 : (5,47:76,0) (5,47:48,0);
144 : (5,47:76,0) (5,47:55,0);
145 : (5,47:76,0) (5,47:62,0);
146 : (5,47:76,0) (5,47:69,0);
147 : (5,47:76,0);
148 : (5,68:32,0) (5,68:20,0);
149 : (5,68:32,0) (5,68:20,0);
150 : (5,69:32,0) (5,69:20,0);
151 : (5,69:32,0) (5,69:20,0);
152 : (5,70:32,0) (5,70:20,0);
153 : (5,70:32,0) (5,70:20,0);
154 : (3,59:64,0) (3,59:21,0);
155 : (3,59:64,0) (3,59:52,0);
156 : (3,59:64,0) (3,59:21,0) (3,59:52,0);
159 : (3,61:71,0) (3,61:25,0);
160 : (3,61:71,0) (3,61:51,0);
161 : (3,61:71,0) (3,61:25,0);
162 : (3,65:64,0) (3,65:21,0);
163 : (3,65:64,0) (3,65:52,0);
164 : (3,65:64,0) (3,65:21,0) (3,65:52,0);
165 : (3,66:55,0) (3,66:23,0);
166 : (3,66:55,0) (3,66:36,0);
167 : (3,66:55,0) (3,66:36,0);
168 : (3,73:64,0) (3,73:21,0);
169 : (3,73:64,0) (3,73:52,0);
170 : (3,73:64,0) (3,73:21,0) (3,73:52,0);
173 : (3,75:71,0) (3,75:27,0);
174 : (3,75:71,0) (3,75:51,0);
175 : (3,75:71,0) (3,75:27,0);
176 : (3,79:64,0) (3,79:21,0);
177 : (3,79:64,0) (3,79:52,0);
178 : (3,79:64,0) (3,79:21,0) (3,79:52,0);
179 : (3,80:54,0) (3,80:22,0);
180 : (3,80:54,0) (3,80:35,0);
181 : (3,80:54,0) (3,80:35,0);

