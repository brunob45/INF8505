
// File generated by noodle version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:26 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I.. -I../isg -I../runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -itlx_chess.h +wlib/Release/chesswork ../runtime/src/qsort.c tlx

toolrelease _18R1;

// unsigned div_called(unsigned, unsigned, chess_output unsigned &)
F__uint_div_called___uint___uint_R__uint : user_defined, called {
    fnm : "div_called" 'unsigned div_called(unsigned, unsigned, chess_output unsigned &)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:o );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
}

// void qsort(void *, size_t, size_t, int (*)(const void *, const void *))
Fvoid_qsort___Pvoid___uint___uint___P__sint_____Pvoid___Pvoid : user_defined, called {
    fnm : "qsort" 'void qsort(void *, size_t, size_t, int (*)(const void *, const void *))'; 
    arg : ( w32:i w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[4] R[5] R[6] R[7] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// char *med3(char *, char *, char *, int (*)(const void *, const void *))
F__P__cchar_med3___P__cchar___P__cchar___P__cchar___P__sint_____Pvoid___Pvoid : user_defined, called {
    fnm : "med3" 'char *med3(char *, char *, char *, int (*)(const void *, const void *))'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// int __Pfn0(const void *, const void *)
F__sint___Pfn0___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn0" 'int __Pfn0(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn1(const void *, const void *)
F__sint___Pfn1___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn1" 'int __Pfn1(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn2(const void *, const void *)
F__sint___Pfn2___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn2" 'int __Pfn2(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn3(const void *, const void *)
F__sint___Pfn3___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn3" 'int __Pfn3(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn4(const void *, const void *)
F__sint___Pfn4___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn4" 'int __Pfn4(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn5(const void *, const void *)
F__sint___Pfn5___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn5" 'int __Pfn5(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn6(const void *, const void *)
F__sint___Pfn6___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn6" 'int __Pfn6(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn7(const void *, const void *)
F__sint___Pfn7___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn7" 'int __Pfn7(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

// int __Pfn8(const void *, const void *)
F__sint___Pfn8___Pvoid___Pvoid : user_defined, called {
    fnm : "__Pfn8" 'int __Pfn8(const void *, const void *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
}

