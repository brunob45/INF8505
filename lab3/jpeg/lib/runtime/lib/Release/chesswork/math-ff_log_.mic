
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:36 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_log_ tlx


// m220;   next: m101, jump target: m26 (next offset: 7)
000000  1 0  "00001000001000010000000001010000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (80,SP,SP); 
000001  1 0  "01001000000001100000000000010000"   // (R[6]) = const_10_B1 (); 
000002  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000003  1 0  "00000000100001100010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[6]); 
000004  1 0  "00100000101000000000000000110000"   // () = nez_br_const_1_B1 (R[5],48); 
000005  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 
000006  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 

// m101;   next: m226, jump target: m14 (next offset: 15)
000007  1 0  "01001000000001010111111111111111"   // (R[5]) = lhi_const_1_B1 (32767); 
000008  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000009  1 0  "00000000100001010011100000000011"   // (R[7]) = _ad_1_B1 (R[4],R[5]); 
000010  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000011  1 0  "00000000101001110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[5]); 
000012  1 0  "00100000111000000000000000001101"   // () = nez_br_const_2_B1 (R[7],13); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m226;   next: m227 (next offset: 20)
000015  1 0  "01001000000001001100001101010000"   // (R[4]) = const_8_B1 (); 
000016  1 0  "01001000000001100000000000000000"   // (R[6]) = const_9_B3 (); 
000017  1 0  "01001000000001010000000000000000"   // (R[5]) = const_9_B3 (); 
000018  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000019  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 

// m227 subroutine call;   next: m13 (next offset: 20)

// m13 (next offset: 27)
000020  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000021  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000022  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000023  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000024  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000025  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000026  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m14;   next: m16 (next offset: 27)

// m16;   next: m234, jump target: m23 (next offset: 31)
000027  1 0  "00000000100000000011100000001100"   // (R[7]) = _ge_const_1_B2 (R[4]); 
000028  1 0  "00100000111000000000000000010000"   // () = nez_br_const_1_B1 (R[7],16); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m234;   next: m235 (next offset: 34)
000031  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000032  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000033  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 

// m235 subroutine call;   next: m238 (next offset: 34)

// m238;   next: m239 (next offset: 39)
000034  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000035  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 
000036  1 0  "01001000000001100000000000000000"   // (R[6]) = const_9_B3 (); 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m239 subroutine call;   next: m22 (next offset: 39)

// m22 (next offset: 46)
000039  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000040  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000041  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000042  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000043  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000044  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000045  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m23;   next: m250 (next offset: 46)

// m250;   next: m251 (next offset: 49)
000046  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 
000047  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000048  1 0  "01001000000001100100001101010000"   // (R[6]) = const_7_B1 (); 

// m251 subroutine call;   next: m664 (next offset: 49)

// m664;   next: m28 (next offset: 54)
000049  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000050  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000051  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000052  1 0  "00001000000001111111111111001010"   // (R[7]) = const_6_B1 (); 
000053  1 0  "01001000000001100000000000010000"   // (R[6]) = const_10_B1 (); 

// m26;   next: m28 (next offset: 54)

// m28;   next: m306, jump target: m258 (next offset: 59)
000054  1 0  "01001000000001010111111111110000"   // (R[5]) = const_5_B1 (); 
000055  1 0  "00000000100001010010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[5]); 
000056  1 0  "00100000101000000000000101111000"   // () = nez_br_const_1_B1 (R[5],376); 
000057  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m306;   next: m307 (next offset: 82)
000059  1 0  "01001000000001010000000000001111"   // (R[5]) = lhi_const_1_B1 (15); 
000060  1 0  "10011000100000110000000000010100"   // (R[3]) = _rs_const_1_B1 (R[4]); 
000061  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000062  1 0  "01001000000010000000000000001001"   // (R[8]) = lhi_const_1_B1 (9); 
000063  1 0  "00000000100001010010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[5]); 
000064  1 0  "01010101000010000101111101100100"   // (R[8]) = w32_const_bor_1_B1 (R[8],24420); 
000065  1 0  "00000000100010000100000000000001"   // (R[8],) = _pl_1_B1 (R[4],R[8]); 
000066  1 0  "00000000110010000100100000000011"   // (R[9]) = _ad_2_B1 (R[8],R[6]); 
000067  1 0  "00001000011000111111110000000001"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000068  1 0  "10011001001001100000000000010100"   // (R[6]) = _rs_const_1_B1 (R[9]); 
000069  1 0  "01001000000010100011111111110000"   // (R[10]) = const_4_B1 (); 
000070  1 0  "00000001001010100100100000011010"   // (R[9]) = _er_1_B1 (R[9],R[10]); 
000071  1 0  "00000000011001110011100000000001"   // (R[7],) = _pl_1_B1 (R[7],R[3]); 
000072  1 0  "00001000100010000000000000000010"   // (R[8],MC) = _pl_const_2_B1 (R[4]); 
000073  1 0  "00000000100010010001100000001010"   // (R[3]) = _or_1_B1 (R[4],R[9]); 
000074  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000075  1 0  "00000000110001110010000000000001"   // (R[4],) = _pl_1_B1 (R[7],R[6]); 
000076  1 0  "00000000101010000010100000000011"   // (R[5]) = _ad_1_B1 (R[8],R[5]); 
000077  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000078  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000079  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000080  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000081  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m307 subroutine call;   next: m316 (next offset: 82)

// m316;   next: m317 (next offset: 90)
000082  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000083  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000084  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000085  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000086  1 0  "01001000000001111111111011100000"   // (R[7]) = const_3_B1 (); 
000087  1 0  "01001000000001100011111111100110"   // (R[6]) = lhi_const_1_B1 (16358); 
000088  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000089  1 0  "01010100110001100010111001000010"   // (R[6]) = w32_const_bor_1_B1 (R[6],11842); 

// m317 subroutine call;   next: m321 (next offset: 90)

// m321;   next: m322 (next offset: 101)
000090  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000091  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000092  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000093  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000094  1 0  "01001000000001100011110111101010"   // (R[6]) = lhi_const_1_B1 (15850); 
000095  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000096  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000097  1 0  "01010100110001100011100111101111"   // (R[6]) = w32_const_bor_1_B1 (R[6],14831); 
000098  1 0  "01001000000010000011010101111001"   // (R[8]) = lhi_const_1_B1 (13689); 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010101000001110011110001110110"   // (R[7]) = w32_const_bor_1_B1 (R[8],15478); 

// m322 subroutine call;   next: m302 (next offset: 101)

// m302;   next: m303 (next offset: 110)
000101  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000102  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000103  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000104  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 
000105  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 
000106  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000107  1 0  "10101000001001101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[6],SP,-28); 
000108  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000109  1 0  "01001000000001100011111111110000"   // (R[6]) = const_4_B1 (); 

// m303 subroutine call;   next: m291 (next offset: 110)

// m291;   next: m415, jump target: m206 (next offset: 118)
000110  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000111  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000112  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000113  1 0  "10001100111001100000000000000011"   // (R[6]) = _lt_const_1_B1 (R[7]); 
000114  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000115  1 0  "00100000110000000000000011101100"   // () = nez_br_const_1_B1 (R[6],236); 
000116  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000117  1 0  "01001000000001110000000000000000"   // (R[7]) = const_9_B3 (); 

// m415;   next: m416 (next offset: 123)
000118  1 0  "01001000000001010000000000000000"   // (R[5]) = const_9_B3 (); 
000119  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000120  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000121  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000122  1 0  "01001000000001000100000000000000"   // (R[4]) = const_1_B1 (); 

// m416 subroutine call;   next: m425 (next offset: 123)

// m425;   next: m426 (next offset: 128)
000123  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000124  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000125  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000126  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000127  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m426 subroutine call;   next: m430 (next offset: 128)

// m430;   next: m431 (next offset: 135)
000128  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000129  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000130  1 0  "10101000001001101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[6],SP,-48); 
000131  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000132  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000133  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000134  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m431 subroutine call;   next: m434 (next offset: 135)

// m434;   next: m435 (next offset: 147)
000135  1 0  "01001000000001011111111111111001"   // (R[5]) = lhi_const_1_B1 (-7); 
000136  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000137  1 0  "01010100101001011110101110000110"   // (R[5]) = w32_const_bor_1_B1 (R[5],60294); 
000138  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[5]); 
000139  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000140  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000141  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000142  1 0  "10101000001001101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[6],SP,-60); 
000143  1 0  "10101000001001111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[7],SP,-64); 
000144  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m435 subroutine call;   next: m438 (next offset: 147)

// m438;   next: m439 (next offset: 161)
000147  1 0  "01001000000001010000000000000110"   // (R[5]) = lhi_const_1_B1 (6); 
000148  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000149  1 0  "01010100101001011011100001010001"   // (R[5]) = w32_const_bor_1_B1 (R[5],47185); 
000150  1 0  "00000000101001000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[5],R[4]); 
000151  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000152  1 0  "01001000000001110011111111000011"   // (R[7]) = lhi_const_1_B1 (16323); 
000153  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000154  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000155  1 0  "10101000001001011111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[5],SP,-68); 
000156  1 0  "10101000001001001111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[4],SP,-72); 
000157  1 0  "01010100111001101001101000001001"   // (R[6]) = w32_const_bor_1_B1 (R[7],39433); 
000158  1 0  "01001000000000111101000001111000"   // (R[3]) = lhi_const_1_B1 (-12168); 
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "01010100011001111100011010011111"   // (R[7]) = w32_const_bor_1_B1 (R[3],50847); 

// m439 subroutine call;   next: m448 (next offset: 161)

// m448;   next: m449 (next offset: 168)
000161  1 0  "01001000000001010001110110001110"   // (R[5]) = lhi_const_1_B1 (7566); 
000162  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000163  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000164  1 0  "01001000000001000011111111001100"   // (R[4]) = lhi_const_1_B1 (16332); 
000165  1 0  "01010100101001010111100010101111"   // (R[5]) = w32_const_bor_1_B1 (R[5],30895); 
000166  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000167  1 0  "01010100100001000111000111000101"   // (R[4]) = w32_const_bor_1_B1 (R[4],29125); 

// m449 subroutine call;   next: m453 (next offset: 168)

// m453;   next: m454 (next offset: 173)
000168  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000169  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000170  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000171  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000172  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m454 subroutine call;   next: m463 (next offset: 173)

// m463;   next: m464 (next offset: 180)
000173  1 0  "01001000000001011001100110010111"   // (R[5]) = lhi_const_1_B1 (-26217); 
000174  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000175  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000176  1 0  "01001000000001000011111111011001"   // (R[4]) = lhi_const_1_B1 (16345); 
000177  1 0  "01010100101001011111101000000100"   // (R[5]) = w32_const_bor_1_B1 (R[5],64004); 
000178  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000179  1 0  "01010100100001001001100110011001"   // (R[4]) = w32_const_bor_1_B1 (R[4],39321); 

// m464 subroutine call;   next: m468 (next offset: 180)

// m468;   next: m469 (next offset: 185)
000180  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000181  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000182  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000183  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000184  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m469 subroutine call;   next: m478 (next offset: 185)

// m478;   next: m479 (next offset: 196)
000185  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000186  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000187  1 0  "01001000000001100011111111000010"   // (R[6]) = lhi_const_1_B1 (16322); 
000188  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000189  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000190  1 0  "10101000001000111111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[3],SP,-76); 
000191  1 0  "10101000001001111111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[7],SP,-80); 
000192  1 0  "01010100110001101111000100010010"   // (R[6]) = w32_const_bor_1_B1 (R[6],61714); 
000193  1 0  "01001000000010001101111100111110"   // (R[8]) = lhi_const_1_B1 (-8386); 
000194  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000195  1 0  "01010101000001110101001001000100"   // (R[7]) = w32_const_bor_1_B1 (R[8],21060); 

// m479 subroutine call;   next: m482 (next offset: 196)

// m482;   next: m483 (next offset: 203)
000196  1 0  "01001000000001011001011011001011"   // (R[5]) = lhi_const_1_B1 (-26933); 
000197  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000198  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000199  1 0  "01001000000001000011111111000111"   // (R[4]) = lhi_const_1_B1 (16327); 
000200  1 0  "01010100101001010000001111011110"   // (R[5]) = w32_const_bor_1_B1 (R[5],990); 
000201  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000202  1 0  "01010100100001000100011001100100"   // (R[4]) = w32_const_bor_1_B1 (R[4],18020); 

// m483 subroutine call;   next: m492 (next offset: 203)

// m492;   next: m493 (next offset: 208)
000203  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000204  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000205  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m493 subroutine call;   next: m497 (next offset: 208)

// m497;   next: m498 (next offset: 215)
000208  1 0  "01001000000001011001010000100010"   // (R[5]) = lhi_const_1_B1 (-27614); 
000209  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000210  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000211  1 0  "01001000000001000011111111010010"   // (R[4]) = lhi_const_1_B1 (16338); 
000212  1 0  "01010100101001011001001101011001"   // (R[5]) = w32_const_bor_1_B1 (R[5],37721); 
000213  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000214  1 0  "01010100100001000100100100100100"   // (R[4]) = w32_const_bor_1_B1 (R[4],18724); 

// m498 subroutine call;   next: m507 (next offset: 215)

// m507;   next: m508 (next offset: 220)
000215  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000216  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000217  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 

// m508 subroutine call;   next: m512 (next offset: 220)

// m512;   next: m513 (next offset: 227)
000220  1 0  "01001000000001010101010101010101"   // (R[5]) = lhi_const_1_B1 (21845); 
000221  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000222  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000223  1 0  "01001000000001000011111111100101"   // (R[4]) = lhi_const_1_B1 (16357); 
000224  1 0  "01010100101001010101010110010011"   // (R[5]) = w32_const_bor_1_B1 (R[5],21907); 
000225  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000226  1 0  "01010100100001000101010101010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],21845); 

// m513 subroutine call;   next: m522 (next offset: 227)

// m522;   next: m523 (next offset: 232)
000227  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000228  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000229  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000230  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000231  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 

// m523 subroutine call;   next: m527 (next offset: 232)

// m527;   next: m528 (next offset: 241)
000232  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000233  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000234  1 0  "00000000100001010001100000001010"   // (R[3]) = _or_1_B1 (R[5],R[4]); 
000235  1 0  "01010000001001111111111110110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000236  1 0  "01010000001001101111111110110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 
000237  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000238  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000239  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000240  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m528 subroutine call;   next: m413 (next offset: 241)

// m413;   next: m620, jump target: m535 (next offset: 250)
000241  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000242  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000243  1 0  "10101000001001111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[7],SP,-56); 
000244  1 0  "00000000100000000011100000001110"   // (R[7]) = _gt_const_1_B2 (R[4]); 
000245  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000246  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000247  1 0  "00100000111000000000000000101000"   // () = nez_br_const_1_B1 (R[7],40); 
000248  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000249  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m620;   next: m621 (next offset: 253)
000250  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000251  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000252  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m621 subroutine call;   next: m630 (next offset: 253)

// m630;   next: m631 (next offset: 258)
000253  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000254  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000255  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000256  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000257  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m631 subroutine call;   next: m673 (next offset: 258)

// m673;   next: m645, jump target: m635 (next offset: 263)
000258  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000259  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000260  1 0  "00010100111000000000000000001111"   // () = br_eqz_const_1_B1 (R[7],15); 
000261  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000262  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m645;   next: m646 (next offset: 265)
000263  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000264  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m646 subroutine call;   next: m655 (next offset: 265)

// m655;   next: m656 (next offset: 270)
000265  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000266  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000267  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000268  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000269  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m656 subroutine call;   next: m660 (next offset: 270)

// m660;   next: m661 (next offset: 275)
000270  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000271  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000272  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000273  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000274  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m661 subroutine call;   next: m674 (next offset: 275)

// m674, jump target: m677 (next offset: 277)
000275  1 0  "00100100000000000000000010011011"   // () = j_const_1_B1 (155); 
000276  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m635;   next: m636 (next offset: 282)
000277  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000278  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000279  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000280  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000281  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m636 subroutine call;   next: m81 (next offset: 282)

// m81 (next offset: 289)
000282  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000283  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000284  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000285  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000286  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000287  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000288  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m535;   next: m536 (next offset: 294)
000289  1 0  "01001000000001010000000000000000"   // (R[5]) = const_9_B3 (); 
000290  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000291  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000292  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000293  1 0  "01001000000001000011111111100000"   // (R[4]) = const_2_B1 (); 

// m536 subroutine call;   next: m545 (next offset: 294)

// m545;   next: m546 (next offset: 299)
000294  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000295  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000296  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000297  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000298  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m546 subroutine call;   next: m550 (next offset: 299)

// m550;   next: m551 (next offset: 307)
000299  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000300  1 0  "01010000001001101111111111001000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000301  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000302  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000303  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000304  1 0  "10101000001001001111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[4],SP,-56); 
000305  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000306  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m551 subroutine call;   next: m560 (next offset: 307)

// m560;   next: m561 (next offset: 312)
000307  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000308  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000309  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000310  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000311  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 

// m561 subroutine call;   next: m670 (next offset: 312)

// m670;   next: m588, jump target: m567 (next offset: 317)
000312  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000313  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000314  1 0  "00010100111000000000000000010100"   // () = br_eqz_const_1_B1 (R[7],20); 
000315  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000316  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m588;   next: m589 (next offset: 319)
000317  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000318  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m589 subroutine call;   next: m598 (next offset: 319)

// m598;   next: m599 (next offset: 324)
000319  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000320  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000321  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000322  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000323  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m599 subroutine call;   next: m603 (next offset: 324)

// m603;   next: m604 (next offset: 329)
000324  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000325  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000326  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000327  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000328  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m604 subroutine call;   next: m613 (next offset: 329)

// m613;   next: m614 (next offset: 334)
000329  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000330  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000331  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000332  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000333  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m614 subroutine call;   next: m671 (next offset: 334)

// m671, jump target: m677 (next offset: 336)
000334  1 0  "00100100000000000000000001100000"   // () = j_const_1_B1 (96); 
000335  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m567;   next: m568 (next offset: 341)
000336  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000337  1 0  "01010000001001001111111111001000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000338  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000339  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000340  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m568 subroutine call;   next: m577 (next offset: 341)

// m577;   next: m578 (next offset: 346)
000341  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000342  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000343  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000344  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000345  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m578 subroutine call;   next: m71 (next offset: 346)

// m71 (next offset: 353)
000346  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000347  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000348  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000349  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000350  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000351  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000352  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m206;   next: m207 (next offset: 355)
000353  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000354  1 0  "01001000000001100000000000000000"   // (R[6]) = const_9_B3 (); 

// m207 subroutine call;   next: m211 (next offset: 355)

// m211;   next: m665, jump target: m49 (next offset: 358)
000355  1 0  "00010100011000000000000000010010"   // () = br_eqz_const_1_B1 (R[3],18); 
000356  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000357  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m665;   next: m328, jump target: m44 (next offset: 363)
000358  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000359  1 0  "01001000000001100000000000000000"   // (R[6]) = const_9_B3 (); 
000360  1 0  "00010100111000000000000000001001"   // () = br_eqz_const_1_B1 (R[7],9); 
000361  1 0  "01001000000001010000000000000000"   // (R[5]) = const_9_B3 (); 
000362  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m328;   next: m329 (next offset: 368)
000363  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000364  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000365  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000366  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000367  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m329 subroutine call;   next: m666 (next offset: 368)

// m666;   next: m48 (next offset: 371)
000368  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000369  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000370  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m44;   next: m48 (next offset: 371)

// m48 (next offset: 375)
000371  1 0  "10101000001001011111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[5],SP,-84); 
000372  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000373  1 0  "10101000001001101111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[6],SP,-88); 
000374  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m49;   next: m336 (next offset: 375)

// m336;   next: m337 (next offset: 379)
000375  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000376  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000377  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000378  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m337 subroutine call;   next: m346 (next offset: 379)

// m346;   next: m347 (next offset: 390)
000379  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000380  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000381  1 0  "01001000000001010101010101010101"   // (R[5]) = lhi_const_1_B1 (21845); 
000382  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000383  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000384  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000385  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
000386  1 0  "01001000000001000011111111010101"   // (R[4]) = lhi_const_1_B1 (16341); 
000387  1 0  "01010100101001010101010101010101"   // (R[5]) = w32_const_bor_1_B1 (R[5],21845); 
000388  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000389  1 0  "01010100100001000101010101010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],21845); 

// m347 subroutine call;   next: m350 (next offset: 390)

// m350;   next: m351 (next offset: 395)
000390  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000391  1 0  "01001000000001000011111111100000"   // (R[4]) = const_2_B1 (); 
000392  1 0  "01001000000001010000000000000000"   // (R[5]) = const_9_B3 (); 
000393  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000394  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m351 subroutine call;   next: m360 (next offset: 395)

// m360;   next: m361 (next offset: 400)
000395  1 0  "01010000001001001111111111010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000396  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000397  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000398  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000399  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m361 subroutine call;   next: m667 (next offset: 400)

// m667;   next: m375, jump target: m365 (next offset: 404)
000400  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000401  1 0  "00010100111000000000000000010000"   // () = br_eqz_const_1_B1 (R[7],16); 
000402  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000403  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m375;   next: m376 (next offset: 407)
000404  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000405  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000406  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m376 subroutine call;   next: m385 (next offset: 407)

// m385;   next: m386 (next offset: 412)
000407  1 0  "01010000001001101111111111010100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000408  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000409  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000410  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000411  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m386 subroutine call;   next: m390 (next offset: 412)

// m390;   next: m391 (next offset: 417)
000412  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000413  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000414  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000415  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000416  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m391 subroutine call;   next: m668 (next offset: 417)

// m668, jump target: m677 (next offset: 419)
000417  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000418  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m365;   next: m366 (next offset: 424)
000419  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000420  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000421  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000422  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000423  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m366 subroutine call;   next: m57 (next offset: 424)

// m57 (next offset: 431)
000424  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000425  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000426  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000427  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000428  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000429  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000430  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

// m677, jump target: m88 (next offset: 434)
000431  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000432  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000433  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m258;   next: m259 (next offset: 438)
000434  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000435  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000436  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000437  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m259 subroutine call;   next: m678 (next offset: 438)

// m678;   next: m88 (next offset: 440)
000438  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000439  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m88 (next offset: /)
000440  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000441  1 0  "10101000001001111111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[7],SP,-88); 
000442  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000443  1 0  "10101000001001001111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[4],SP,-84); 
000444  1 0  "00001000001000011111111110110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-80,SP,SP); 

