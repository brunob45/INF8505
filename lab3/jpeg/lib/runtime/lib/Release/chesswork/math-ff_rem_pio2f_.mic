
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_rem_pio2f_ tlx


// m3;   next: m8, jump target: m6 (next offset: 12)
000000  1 0  "00001000001000010000000000110000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (48,SP,SP); 
000001  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000002  1 0  "01010100011001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000004  1 0  "01001000000000110011111101001001"   // (R[3]) = lhi_const_1_B1 (16201); 
000005  1 0  "00000000100001100010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[6]); 
000006  1 0  "01010100011000110000111111011000"   // (R[3]) = w32_const_bor_1_B1 (R[3],4056); 
000007  1 0  "00000000100000110001100000010000"   // (R[3]) = _le_1_B1 (R[4],R[3]); 
000008  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000009  1 0  "00100000011000000000000100000110"   // () = nez_br_const_1_B1 (R[3],262); 
000010  1 0  "10101000001001011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[5],SP,-8); 
000011  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 

// m8;   next: m194, jump target: m12 (next offset: 28)
000012  1 0  "01001000000001110011111111001001"   // (R[7]) = lhi_const_1_B1 (16329); 
000013  1 0  "01001000000010000100000000010110"   // (R[8]) = lhi_const_1_B1 (16406); 
000014  1 0  "01010100111001110000111110000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],3968); 
000015  1 0  "01001000000001100011011100110101"   // (R[6]) = lhi_const_1_B1 (14133); 
000016  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000017  1 0  "01010101000010001100101111100100"   // (R[8]) = w32_const_bor_1_B1 (R[8],52196); 
000018  1 0  "01010100110001100100010001000011"   // (R[6]) = w32_const_bor_1_B1 (R[6],17475); 
000019  1 0  "01001000000001010011011100110101"   // (R[5]) = lhi_const_1_B1 (14133); 
000020  1 0  "01001000000000110010111010000101"   // (R[3]) = lhi_const_1_B1 (11909); 
000021  1 0  "00000000100010000011100000010011"   // (R[7]) = _lt_1_B1 (R[4],R[8]); 
000022  1 0  "01010100101001010100010000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],17408); 
000023  1 0  "01010100011000111010001100001000"   // (R[3]) = w32_const_bor_1_B1 (R[3],41736); 
000024  1 0  "10101000001001101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[6],SP,-32); 
000025  1 0  "00100000111000000000000010011010"   // () = nez_br_const_1_B1 (R[7],154); 
000026  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000027  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 

// m194;   next: m195 (next offset: 31)
000028  1 0  "01001000000000110011111100100010"   // (R[3]) = lhi_const_1_B1 (16162); 
000029  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000030  1 0  "01010100011001011111100110000100"   // (R[5]) = w32_const_bor_1_B1 (R[3],63876); 

// m195 subroutine call;   next: m198 (next offset: 31)

// m198;   next: m199 (next offset: 34)
000031  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000032  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000033  1 0  "01001000000001010011111100000000"   // (R[5]) = const_2_B1 (); 

// m199 subroutine call;   next: m202 (next offset: 34)

// m202;   next: m203 (next offset: 36)
000034  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000035  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m203 subroutine call;   next: m206 (next offset: 36)

// m206;   next: m207 (next offset: 39)
000036  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m207 subroutine call;   next: m210 (next offset: 39)

// m210;   next: m211 (next offset: 43)
000039  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000040  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000041  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000042  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m211 subroutine call;   next: m214 (next offset: 43)

// m214;   next: m215 (next offset: 46)
000043  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000044  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000045  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m215 subroutine call;   next: m218 (next offset: 46)

// m218;   next: m219 (next offset: 50)
000046  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000047  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m219 subroutine call;   next: m222 (next offset: 50)

// m222;   next: m223 (next offset: 67)
000050  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000051  1 0  "01001000000001101111111111111100"   // (R[6]) = lhi_const_1_B1 (-4); 
000052  1 0  "10001000100001010000000000000010"   // (R[5]) = _ls_const_1_B1 (R[4]); 
000053  1 0  "01010100110001101111111111111100"   // (R[6]) = w32_const_bor_1_B1 (R[6],-4); 
000054  1 0  "00000000101001100010100000000001"   // (R[5],) = _pl_1_B1 (R[6],R[5]); 
000055  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000056  1 0  "00001000000001111111111100000000"   // (R[7]) = const_1_B1 (); 
000057  1 0  "00000000110001110011000000000011"   // (R[6]) = _ad_1_B1 (R[6],R[7]); 
000058  1 0  "01010000101001110000000000000000"   // (R[7]) = load_2_B1 (R[5],DMb_stat); 
000059  1 0  "10001100100001010000000000100000"   // (R[5]) = _lt_const_1_B1 (R[4]); 
000060  1 0  "00000000110001110011000000010101"   // (R[6]) = _ne_1_B1 (R[6],R[7]); 
000061  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000062  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000063  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000064  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 
000065  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000066  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m223 subroutine call;   next: m192 (next offset: 67)

// m192;   next: m46, jump target: m44 (next offset: 73)
000067  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000068  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000069  1 0  "00000000100001100010000000000011"   // (R[4]) = land_1_B1 (R[6],R[4]); 
000070  1 0  "00100000100000000000000001010000"   // () = nez_br_const_1_B1 (R[4],80); 
000071  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000072  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46;   next: m239, jump target: m56 (next offset: 84)
000073  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000074  1 0  "10011100011000110000000000010111"   // (R[3]) = _rs_const_1_B1 (R[3]); 
000075  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000076  1 0  "10011000100001000000000000010111"   // (R[4]) = _rs_const_2_B1 (R[4]); 
000077  1 0  "00010000011000110000000011111111"   // (R[3]) = _ad_const_1_B1 (R[3]); 
000078  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000079  1 0  "00000000100000110010000000011000"   // (R[4],MC) = _mi_1_B1 (R[4],R[3]); 
000080  1 0  "10000000100000110000000000001000"   // (R[3]) = _le_const_2_B1 (R[4]); 
000081  1 0  "00100000011000000000000001000010"   // () = nez_br_const_1_B1 (R[3],66); 
000082  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m239;   next: m240 (next offset: 86)
000084  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000085  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m240 subroutine call;   next: m243 (next offset: 86)

// m243;   next: m244 (next offset: 90)
000086  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000087  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000088  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000089  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m244 subroutine call;   next: m247 (next offset: 90)

// m247;   next: m248 (next offset: 94)
000090  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000091  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000092  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000093  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m248 subroutine call;   next: m251 (next offset: 94)

// m251;   next: m252 (next offset: 98)
000094  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000095  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000096  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000097  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m252 subroutine call;   next: m255 (next offset: 98)

// m255;   next: m256 (next offset: 101)
000098  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m256 subroutine call;   next: m259 (next offset: 101)

// m259;   next: m260 (next offset: 104)
000101  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m260 subroutine call;   next: m263 (next offset: 104)

// m263;   next: m264 (next offset: 108)
000104  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000105  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000106  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000107  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m264 subroutine call;   next: m237 (next offset: 108)

// m237;   next: m275, jump target: m309 (next offset: 118)
000108  1 0  "10011100011001000000000000010111"   // (R[4]) = _rs_const_1_B1 (R[3]); 
000109  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000110  1 0  "00010000100001000000000011111111"   // (R[4]) = _ad_const_1_B1 (R[4]); 
000111  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000112  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000113  1 0  "00000000110001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[6],R[4]); 
000114  1 0  "10000000100000110000000000011001"   // (R[3]) = _le_const_1_B1 (R[4]); 
000115  1 0  "00100000011000000000000000100110"   // () = nez_br_const_1_B1 (R[3],38); 
000116  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000117  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m275;   next: m276 (next offset: 122)
000118  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000119  1 0  "01001000000000110010111010000101"   // (R[3]) = lhi_const_1_B1 (11909); 
000120  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000121  1 0  "01010100011001011010001100000000"   // (R[5]) = w32_const_bor_1_B1 (R[3],41728); 

// m276 subroutine call;   next: m279 (next offset: 122)

// m279;   next: m280 (next offset: 126)
000122  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000123  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000124  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000125  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m280 subroutine call;   next: m283 (next offset: 126)

// m283;   next: m284 (next offset: 131)
000126  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000127  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000128  1 0  "01001000000001010010010010001101"   // (R[5]) = lhi_const_1_B1 (9357); 
000129  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000130  1 0  "01010100101001010011000100110010"   // (R[5]) = w32_const_bor_1_B1 (R[5],12594); 

// m284 subroutine call;   next: m287 (next offset: 131)

// m287;   next: m288 (next offset: 135)
000131  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000132  1 0  "10101000001000111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[3],SP,-24); 
000133  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000134  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m288 subroutine call;   next: m291 (next offset: 135)

// m291;   next: m292 (next offset: 138)
000135  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000136  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000137  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m292 subroutine call;   next: m295 (next offset: 138)

// m295;   next: m296 (next offset: 141)
000138  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000140  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m296 subroutine call;   next: m299 (next offset: 141)

// m299;   next: m300 (next offset: 145)
000141  1 0  "10101000001000111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[3],SP,-44); 
000142  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000143  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000144  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m300 subroutine call;   next: m273 (next offset: 145)

// m273, jump target: m309 (next offset: 149)
000145  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000146  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000147  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000148  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 

// m56, jump target: m309 (next offset: 152)
000149  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000150  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000151  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m44;   next: m309 (next offset: 155)
000152  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000153  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000154  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m309;   next: m310 (next offset: 157)
000155  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000156  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb,DMb_stat); 

// m310 subroutine call;   next: m313 (next offset: 157)

// m313;   next: m314 (next offset: 160)
000157  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000158  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000159  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m314 subroutine call;   next: m307 (next offset: 160)

// m307;   next: m324, jump target: m63 (next offset: 166)
000160  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000161  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000162  1 0  "00000000100000000010000000001100"   // (R[4]) = _ge_const_1_B2 (R[4]); 
000163  1 0  "00100000100000000000000000001110"   // () = nez_br_const_1_B1 (R[4],14); 
000164  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000165  1 0  "10101000101000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[5],DMb); 

// m324;   next: m325 (next offset: 169)
000166  1 0  "01001000000001000000000000000000"   // (R[4]) = const_6_B3 (); 
000167  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000168  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb,DMb_stat); 

// m325 subroutine call;   next: m328 (next offset: 169)

// m328;   next: m329 (next offset: 174)
000169  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000170  1 0  "01001000000001000000000000000000"   // (R[4]) = const_6_B3 (); 
000171  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000172  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000173  1 0  "01010000101001010000000000000100"   // (R[5]) = load__pl_const_1_B1 (R[5],DMb,DMb_stat); 

// m329 subroutine call;   next: m322 (next offset: 174)

// m322, jump target: m68 (next offset: 179)
000174  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000175  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000176  1 0  "10101000100000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[4],DMb); 
000177  1 0  "00100100000000000000000001100101"   // () = j_const_1_B1 (101); 
000178  1 0  "00000000000001010001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[5]); 

// m63, jump target: m68 (next offset: 181)
000179  1 0  "00100100000000000000000001100011"   // () = j_const_1_B1 (99); 
000180  1 0  "01010000001000111111111111011100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m12;   next: m133, jump target: m88 (next offset: 190)
000181  1 0  "00001000000001011111111111110000"   // (R[5]) = const_5_B1 (); 
000182  1 0  "00000000100001010010100000000011"   // (R[5]) = _ad_1_B1 (R[4],R[5]); 
000183  1 0  "01001000000000110011111111001001"   // (R[3]) = lhi_const_1_B1 (16329); 
000184  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000185  1 0  "01010100011001100000111111010000"   // (R[6]) = w32_const_bor_1_B1 (R[3],4048); 
000186  1 0  "00000000100000000001100000001110"   // (R[3]) = _gt_const_1_B2 (R[4]); 
000187  1 0  "00100000011000000000000000100111"   // () = nez_br_const_1_B1 (R[3],39); 
000188  1 0  "00000000101001100011000000010101"   // (R[6]) = _ne_1_B1 (R[5],R[6]); 
000189  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m133;   next: m134 (next offset: 193)
000190  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000191  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000192  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m134 subroutine call;   next: m334 (next offset: 193)

// m334;   next: m162, jump target: m143 (next offset: 197)
000193  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000194  1 0  "00100000110000000000000000010010"   // () = nez_br_const_1_B1 (R[6],18); 
000195  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000196  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m162;   next: m163 (next offset: 199)
000197  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000198  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m163 subroutine call;   next: m166 (next offset: 199)

// m166;   next: m167 (next offset: 203)
000199  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000200  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000201  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000202  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m167 subroutine call;   next: m170 (next offset: 203)

// m170;   next: m171 (next offset: 208)
000203  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000204  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000205  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000207  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m171 subroutine call;   next: m174 (next offset: 208)

// m174;   next: m175 (next offset: 211)
000208  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000209  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000210  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m175 subroutine call;   next: m160 (next offset: 211)

// m160, jump target: m332 (next offset: 214)
000211  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000212  1 0  "00100100000000000000000000111010"   // () = j_const_1_B1 (58); 
000213  1 0  "10101000100000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[4],DMb); 

// m143;   next: m144 (next offset: 217)
000214  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000215  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000216  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m144 subroutine call;   next: m147 (next offset: 217)

// m147;   next: m148 (next offset: 222)
000217  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000218  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000219  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000220  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000221  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m148 subroutine call;   next: m151 (next offset: 222)

// m151;   next: m152 (next offset: 225)
000222  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000223  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000224  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m152 subroutine call;   next: m141 (next offset: 225)

// m141, jump target: m332 (next offset: 228)
000225  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000226  1 0  "00100100000000000000000000101100"   // () = j_const_1_B1 (44); 
000227  1 0  "10101000100000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[4],DMb); 

// m88;   next: m89 (next offset: 231)
000228  1 0  "10101000001001101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[6],SP,-4); 
000229  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000230  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m89 subroutine call;   next: m333 (next offset: 231)

// m333;   next: m117, jump target: m98 (next offset: 236)
000231  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000232  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000233  1 0  "00100000011000000000000000010010"   // () = nez_br_const_1_B1 (R[3],18); 
000234  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000235  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m117;   next: m118 (next offset: 238)
000236  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000237  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m118 subroutine call;   next: m121 (next offset: 238)

// m121;   next: m122 (next offset: 242)
000238  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000239  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000240  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000241  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m122 subroutine call;   next: m125 (next offset: 242)

// m125;   next: m126 (next offset: 247)
000242  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000243  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000244  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000245  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000246  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m126 subroutine call;   next: m129 (next offset: 247)

// m129;   next: m130 (next offset: 250)
000247  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000248  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000249  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m130 subroutine call;   next: m115 (next offset: 250)

// m115, jump target: m24 (next offset: 253)
000250  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000251  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000252  1 0  "10101000100000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[4],DMb); 

// m98;   next: m99 (next offset: 256)
000253  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000254  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000255  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m99 subroutine call;   next: m102 (next offset: 256)

// m102;   next: m103 (next offset: 261)
000256  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000257  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000258  1 0  "10101000101000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[5],DMb); 
000259  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000260  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m103 subroutine call;   next: m106 (next offset: 261)

// m106;   next: m107 (next offset: 264)
000261  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000262  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000263  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m107 subroutine call;   next: m96 (next offset: 264)

// m96;   next: m24 (next offset: 266)
000264  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000265  1 0  "10101000100000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[4],DMb); 

// m24 (next offset: 271)
000266  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000267  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000268  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000269  1 0  "01010100000000110000000000000001"   // (R[3]) = const_4_B2 (); 
000270  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 

// m332, jump target: m68 (next offset: 273)
000271  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000272  1 0  "00001000000000111111111111111111"   // (R[3]) = const_3_B1 (); 

// m6;   next: m68 (next offset: 279)
000273  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000274  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000275  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000276  1 0  "10101000100000110000000000000000"   // (DMb) = store_1_B1 (R[3],R[4],DMb); 
000277  1 0  "10101000100000000000000000000100"   // (DMb) = store_const__pl_const_1_B1 (R[4],DMb); 
000278  1 0  "01001000000000110000000000000000"   // (R[3]) = const_6_B3 (); 

// m68 (next offset: /)
000279  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000280  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000281  1 0  "00001000001000011111111111010000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-48,SP,SP); 
000282  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

