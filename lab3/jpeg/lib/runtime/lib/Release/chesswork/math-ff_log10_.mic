
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:37 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_log10_ tlx


// m125;   next: m43, jump target: m26 (next offset: 7)
000000  1 0  "00001000001000010000000000011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (28,SP,SP); 
000001  1 0  "01001000000001110000000000010000"   // (R[7]) = const_8_B1 (); 
000002  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000003  1 0  "00000000100001110010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[7]); 
000004  1 0  "00100000101000000000000000101101"   // () = nez_br_const_1_B1 (R[5],45); 
000005  1 0  "10101000001000101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[2],SP,-16); 
000006  1 0  "01001000000001110000000000000000"   // (R[7]) = const_7_B3 (); 

// m43;   next: m131, jump target: m14 (next offset: 15)
000007  1 0  "01001000000001010111111111111111"   // (R[5]) = lhi_const_1_B1 (32767); 
000008  1 0  "01010100101001011111111111111111"   // (R[5]) = w32_const_bor_1_B1 (R[5],65535); 
000009  1 0  "00000000100001010011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[5]); 
000010  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000011  1 0  "00000000101001100011000000001010"   // (R[6]) = _or_1_B1 (R[6],R[5]); 
000012  1 0  "00100000110000000000000000001100"   // () = nez_br_const_2_B1 (R[6],12); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m131;   next: m132 (next offset: 19)
000015  1 0  "01001000000001100000000000000000"   // (R[6]) = const_7_B3 (); 
000016  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 
000017  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000018  1 0  "01001000000001001100001101010000"   // (R[4]) = const_6_B1 (); 

// m132 subroutine call;   next: m13 (next offset: 19)

// m13 (next offset: 26)
000019  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000020  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000021  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000022  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000023  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000024  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000025  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m14;   next: m16 (next offset: 26)

// m16;   next: m139, jump target: m23 (next offset: 30)
000026  1 0  "00000000100000000011000000001100"   // (R[6]) = _ge_const_1_B2 (R[4]); 
000027  1 0  "00100000110000000000000000010000"   // () = nez_br_const_1_B1 (R[6],16); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m139;   next: m140 (next offset: 33)
000030  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000031  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000032  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 

// m140 subroutine call;   next: m143 (next offset: 33)

// m143;   next: m144 (next offset: 38)
000033  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000034  1 0  "01001000000001110000000000000000"   // (R[7]) = const_7_B3 (); 
000035  1 0  "01001000000001100000000000000000"   // (R[6]) = const_7_B3 (); 
000036  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000037  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m144 subroutine call;   next: m22 (next offset: 38)

// m22 (next offset: 45)
000038  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000039  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000040  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000041  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000042  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000043  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000044  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

// m23;   next: m155 (next offset: 45)

// m155;   next: m156 (next offset: 47)
000045  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000046  1 0  "01001000000001100100001101010000"   // (R[6]) = const_5_B1 (); 

// m156 subroutine call;   next: m247 (next offset: 47)

// m247;   next: m28 (next offset: 51)
000047  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000048  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 
000049  1 0  "00001000000001111111111111001010"   // (R[7]) = const_4_B1 (); 
000050  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m26;   next: m28 (next offset: 51)

// m28;   next: m187, jump target: m163 (next offset: 56)
000051  1 0  "01001000000001010111111111110000"   // (R[5]) = const_3_B1 (); 
000052  1 0  "00000000100001010010100000001100"   // (R[5]) = _ge_1_B1 (R[4],R[5]); 
000053  1 0  "00100000101000000000000001000001"   // () = nez_br_const_1_B1 (R[5],65); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m187;   next: m188 (next offset: 72)
000056  1 0  "10011000100001010000000000010100"   // (R[5]) = _rs_const_1_B1 (R[4]); 
000057  1 0  "00001000101001011111110000000001"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 
000058  1 0  "00000000101001110011100000000001"   // (R[7],) = _pl_1_B1 (R[7],R[5]); 
000059  1 0  "01001000000001011000000000000000"   // (R[5]) = const_2_B1 (); 
000060  1 0  "00000000101001110010100000000011"   // (R[5]) = _ad_2_B1 (R[7],R[5]); 
000061  1 0  "01001000000001100000000000001111"   // (R[6]) = lhi_const_1_B1 (15); 
000062  1 0  "10011100101001010000000000011111"   // (R[5]) = _rs_const_2_B1 (R[5]); 
000063  1 0  "01010100000000110000001111111111"   // (R[3]) = const_1_B2 (); 
000064  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 
000065  1 0  "00000000100001100010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[6]); 
000066  1 0  "00000000011001010001100000011000"   // (R[3],MC) = _mi_1_B1 (R[3],R[5]); 
000067  1 0  "10001000011001100000000000010100"   // (R[6]) = _ls_const_1_B1 (R[3]); 
000068  1 0  "00000000100001100011000000001010"   // (R[6]) = _or_1_B1 (R[4],R[6]); 
000069  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000070  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000071  1 0  "00000000101001110010000000000001"   // (R[4],) = _pl_1_B1 (R[7],R[5]); 

// m188 subroutine call;   next: m206 (next offset: 72)

// m206;   next: m207 (next offset: 81)
000072  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000073  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000074  1 0  "01001000000001110001000111110001"   // (R[7]) = lhi_const_1_B1 (4593); 
000075  1 0  "10101000001001011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[5],SP,-24); 
000076  1 0  "10101000001001001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[4],SP,-28); 
000077  1 0  "01001000000001100011110101011001"   // (R[6]) = lhi_const_1_B1 (15705); 
000078  1 0  "01010100111001110010101100110110"   // (R[7]) = w32_const_bor_1_B1 (R[7],11062); 
000079  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000080  1 0  "01010100110001101111111011110011"   // (R[6]) = w32_const_bor_1_B1 (R[6],65267); 

// m207 subroutine call;   next: m185 (next offset: 81)

// m185;   next: m34 (next offset: 89)
000081  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000082  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000084  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000085  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000086  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000087  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m34 subroutine call;   next: m216 (next offset: 89)

// m216;   next: m217 (next offset: 96)
000089  1 0  "01001000000001010001010100100110"   // (R[5]) = lhi_const_1_B1 (5414); 
000090  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000091  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000092  1 0  "01001000000001000011111111011011"   // (R[4]) = lhi_const_1_B1 (16347); 
000093  1 0  "01010100101001011110010100001110"   // (R[5]) = w32_const_bor_1_B1 (R[5],58638); 
000094  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000095  1 0  "01010100100001001100101101111011"   // (R[4]) = w32_const_bor_1_B1 (R[4],52091); 

// m217 subroutine call;   next: m227 (next offset: 96)

// m227;   next: m228 (next offset: 101)
000096  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000097  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000098  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m228 subroutine call;   next: m232 (next offset: 101)

// m232;   next: m233 (next offset: 112)
000101  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000102  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000103  1 0  "01001000000001110011111111010011"   // (R[7]) = lhi_const_1_B1 (16339); 
000104  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000105  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000106  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000107  1 0  "10101000001000111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[3],SP,-12); 
000108  1 0  "01010100111001100100010000010011"   // (R[6]) = w32_const_bor_1_B1 (R[7],17427); 
000109  1 0  "01001000000010000101000010011111"   // (R[8]) = lhi_const_1_B1 (20639); 
000110  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000111  1 0  "01010101000001110110000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[8],24576); 

// m233 subroutine call;   next: m242 (next offset: 112)

// m242;   next: m243 (next offset: 117)
000112  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000113  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000114  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000115  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000116  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m243 subroutine call;   next: m248 (next offset: 117)

// m248, jump target: m38 (next offset: 120)
000117  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000118  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000119  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m163;   next: m164 (next offset: 124)
000120  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000121  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000122  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000123  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m164 subroutine call;   next: m249 (next offset: 124)

// m249;   next: m38 (next offset: 126)
000124  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000125  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m38 (next offset: /)
000126  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000127  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000128  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000129  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000130  1 0  "00001000001000011111111111100100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-28,SP,SP); 

