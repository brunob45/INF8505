
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:29 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i qsort-qsort_ tlx


// m12;   next: m1 (next offset: 3)
000000  1 0  "00001000001000010000000001111000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (120,SP,SP); 
000001  1 0  "10101000001001111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[7],SP,-4); 
000002  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 

// m1;   next: m986 (next offset: 3)

// m986;   next: m988, jump target: m22 (next offset: 13)
000003  1 0  "00010000100000110000000000000011"   // (R[3]) = _ad_const_1_B1 (R[4]); 
000004  1 0  "00010000110010000000000000000011"   // (R[8]) = _ad_const_1_B1 (R[6]); 
000005  1 0  "00000000011000000001100000010101"   // (R[3]) = nez_1_B1 (R[3]); 
000006  1 0  "00000001000000000100000000010101"   // (R[8]) = nez_1_B1 (R[8]); 
000007  1 0  "00000000011010000001100000001010"   // (R[3]) = lor_1_B1 (R[3],R[8]); 
000008  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000009  1 0  "10101000001001101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[6],SP,-24); 
000010  1 0  "00100000011000000000000000000011"   // () = nez_br_const_1_B1 (R[3],3); 
000011  1 0  "01010100000010110000000000000010"   // (R[11]) = const_3_B2 (); 
000012  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 

// m988;   next: m1007 (next offset: 15)
000013  1 0  "10010100110010110000000000000100"   // (R[11]) = _ne_const_1_B1 (R[6]); 
000014  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 

// m22;   next: m1007 (next offset: 15)

// m1007;   next: m92, jump target: m89 (next offset: 37)
000015  1 0  "00001000110010011111111111111111"   // (R[9],MC) = _pl_const_2_B1 (R[6]); 
000016  1 0  "00000000100001100110000000000001"   // (R[12],) = _pl_1_B1 (R[4],R[6]); 
000017  1 0  "10011100110000110000000000000010"   // (R[3]) = _rs_const_1_B1 (R[6]); 
000018  1 0  "00001001001010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[9]); 
000019  1 0  "10101000001011001111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[12],SP,-28); 
000020  1 0  "00000000101001100110100000100000"   // (R[13]) = _ml_1_B1 (R[5],R[6]); 
000021  1 0  "00001000011010101111111111111111"   // (R[10],MC) = _pl_const_2_B1 (R[3]); 
000022  1 0  "00000000100011010110100000000001"   // (R[13],) = _pl_1_B1 (R[4],R[13]); 
000023  1 0  "00000001100001100110000000011000"   // (R[12],MC) = _mi_1_B1 (R[12],R[6]); 
000024  1 0  "10000001011010110000000000000001"   // (R[11]) = _le_const_4_B1 (R[11]); 
000025  1 0  "00001001010000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[10]); 
000026  1 0  "00000001001000000100100000001110"   // (R[9]) = _gt_const_1_B2 (R[9]); 
000027  1 0  "10101000001010001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[8],SP,-40); 
000028  1 0  "10101000001011001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[12],SP,-32); 
000029  1 0  "10101000001010011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[9],SP,-36); 
000030  1 0  "10101000001011011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[13],SP,-44); 
000031  1 0  "10101000001010111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[11],SP,-48); 
000032  1 0  "10010000101010000000000000000111"   // (R[8]) = _lt_const_1_B1 (R[5]); 
000033  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000034  1 0  "00100001000000000000001001010110"   // () = nez_br_const_1_B1 (R[8],598); 
000035  1 0  "00000001010000000101000000001110"   // (R[10]) = _gt_const_1_B2 (R[10]); 
000036  1 0  "10101000001010101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[10],SP,-52); 

// m92;   next: m96, jump target: m110 (next offset: 46)
000037  1 0  "10011100101010000000000000000001"   // (R[8]) = _rs_const_3_B1 (R[5]); 
000038  1 0  "00001000101000111111111111111111"   // (R[3],MC) = _pl_const_2_B1 (R[5]); 
000039  1 0  "00000000110010000100100000100000"   // (R[9]) = _ml_1_B1 (R[8],R[6]); 
000040  1 0  "00000000011001100001100000100000"   // (R[3]) = _ml_1_B1 (R[3],R[6]); 
000041  1 0  "10000100101010000000000000000111"   // (R[8]) = _le_const_3_B1 (R[5]); 
000042  1 0  "00000000011001000011000000000001"   // (R[6],) = _pl_1_B1 (R[4],R[3]); 
000043  1 0  "00100001000000000000000000100111"   // () = nez_br_const_1_B1 (R[8],39); 
000044  1 0  "10101000001001101111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[6],SP,-60); 
000045  1 0  "00000000100010010001100000000001"   // (R[3],) = _pl_1_B1 (R[4],R[9]); 

// m96;   next: m100, jump target: m106 (next offset: 50)
000046  1 0  "10000100101010000000000000101000"   // (R[8]) = _le_const_2_B1 (R[5]); 
000047  1 0  "00100001000000000000000000011111"   // () = nez_br_const_1_B1 (R[8],31); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m100;   next: m101 (next offset: 61)
000050  1 0  "10011100101001000000000000000011"   // (R[4]) = _rs_const_2_B1 (R[5]); 
000051  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000052  1 0  "00000000100001010010100000100000"   // (R[5]) = _ml_1_B1 (R[4],R[5]); 
000053  1 0  "10001000101001100000000000000001"   // (R[6]) = _ls_const_1_B1 (R[5]); 
000054  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000055  1 0  "10101000001001011111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[5],SP,-68); 
000056  1 0  "00000000100001010010100000000001"   // (R[5],) = _pl_1_B1 (R[4],R[5]); 
000057  1 0  "10101000001001101111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[6],SP,-64); 
000058  1 0  "10101000001000111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[3],SP,-72); 
000059  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000060  1 0  "00000000100001100011000000000001"   // (R[6],) = _pl_1_B1 (R[4],R[6]); 

// m101 subroutine call;   next: m102 (next offset: 61)

// m102;   next: m103 (next offset: 68)
000061  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000062  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000063  1 0  "00000000100001010011000000000001"   // (R[6],) = _pl_1_B1 (R[5],R[4]); 
000064  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000065  1 0  "10101000001000111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[3],SP,-72); 
000066  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000067  1 0  "00000000101001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[5],R[4]); 

// m103 subroutine call;   next: m104 (next offset: 68)

// m104;   next: m105 (next offset: 76)
000068  1 0  "01010000001001011111111110111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000069  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000070  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000071  1 0  "00000000110001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[6],R[5]); 
000072  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000073  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000074  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000075  1 0  "00000000110001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[6],R[4]); 

// m105 subroutine call;   next: m1223 (next offset: 76)

// m1223;   next: m108 (next offset: 80)
000076  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 
000077  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000078  1 0  "01010000001000111111111111000000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000079  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 

// m106;   next: m108 (next offset: 80)

// m108;   next: m109 (next offset: 82)
000080  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000081  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 

// m109 subroutine call;   next: m1224 (next offset: 82)

// m1224, jump target: m1225 (next offset: 84)
000082  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000083  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m110;   next: m1225 (next offset: 85)
000084  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m1225;   next: m1197, jump target: m115 (next offset: 88)
000085  1 0  "00010100111000000000000000101011"   // () = br_eqz_const_1_B1 (R[7],43); 
000086  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1197;   next: m1195, jump target: m1194 (next offset: 92)
000088  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000089  1 0  "00100000101000000000000000010100"   // () = nez_br_const_1_B1 (R[5],20); 
000090  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1195;   next: m806, jump target: m805 (next offset: 96)
000092  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000093  1 0  "00100000110000000000000000000010"   // () = nez_br_const_1_B1 (R[6],2); 
000094  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000095  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m806;   next: m1176 (next offset: 97)
000096  1 0  "01010100000001010000000000000001"   // (R[5]) = const_2_B2 (); 

// m805;   next: m1176 (next offset: 97)

// m1176;   next: m130 (next offset: 104)
000097  1 0  "01001000000010000000000001101000"   // (R[8]) = lhi_const_1_B1 (104); 
000098  1 0  "01001000000001100000000001101100"   // (R[6]) = lhi_const_1_B1 (108); 
000099  1 0  "01010101000010000000000001101000"   // (R[8]) = w32_const_bor_1_B1 (R[8],104); 
000100  1 0  "01010100110001100000000001101100"   // (R[6]) = w32_const_bor_1_B1 (R[6],108); 
000101  1 0  "10111100101000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[5]); 
000102  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[8]); 
000103  1 0  "10111100110000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[6]); 

// m130;   next: m1226, loop target: m130 (next offset: 109)
000104  1 0  "00110100100001010000000000000000"   // (R[5]) = load_1_B1 (R[4],DMb,DMb,DMb,PM); 
000105  1 0  "00110100011001100000000000000000"   // (R[6]) = load_1_B1 (R[3],DMb,DMb,DMb,PM); 
000106  1 0  "00000000100001100000100000110101"   // (R[4],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[6],R[4],DMb,DMb,DMb,PM); 
000107  1 0  "00000000011001010000100000110101"   // (R[3],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[5],R[3],DMb,DMb,DMb,PM); 
000108  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1226, jump target: m1142 (next offset: 111)
000109  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000110  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1194;   next: m800, jump target: m799 (next offset: 115)
000111  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000112  1 0  "00100000110000000000000000000010"   // () = nez_br_const_1_B1 (R[6],2); 
000113  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000114  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m800;   next: m1175 (next offset: 116)
000115  1 0  "01010100000001010000000000000001"   // (R[5]) = const_2_B2 (); 

// m799;   next: m1175 (next offset: 116)

// m1175;   next: m124 (next offset: 123)
000116  1 0  "01001000000010000000000001111011"   // (R[8]) = lhi_const_1_B1 (123); 
000117  1 0  "01001000000001100000000001111111"   // (R[6]) = lhi_const_1_B1 (127); 
000118  1 0  "01010101000010000000000001111011"   // (R[8]) = w32_const_bor_1_B1 (R[8],123); 
000119  1 0  "01010100110001100000000001111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],127); 
000120  1 0  "10111100101000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[5]); 
000121  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[8]); 
000122  1 0  "10111100110000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[6]); 

// m124;   next: m1263, loop target: m124 (next offset: 128)
000123  1 0  "01010000100001010000000000000000"   // (R[5]) = load_2_B1 (R[4],DMb,DMb,DMb,PM); 
000124  1 0  "01010000011001100000000000000000"   // (R[6]) = load_2_B1 (R[3],DMb,DMb,DMb,PM); 
000125  1 0  "00000000100001100010000000110111"   // (R[4],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[6],R[4],DMb,DMb,DMb,PM); 
000126  1 0  "00000000011001010010000000110111"   // (R[3],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[5],R[3],DMb,DMb,DMb,PM); 
000127  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1263;   next: m1227 (next offset: 128)

// m1227, jump target: m1142 (next offset: 130)
000128  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000129  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m115;   next: m1142 (next offset: 134)
000130  1 0  "01010000011001010000000000000000"   // (R[5]) = load_2_B1 (R[3],DMb,DMb,DMb,PM); 
000131  1 0  "01010000100001100000000000000000"   // (R[6]) = load_2_B1 (R[4],DMb,DMb,DMb,PM); 
000132  1 0  "10101000100001010000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[5],R[4],DMb,DMb,DMb,PM); 
000133  1 0  "10101000011001100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[6],R[3],DMb,DMb,DMb,PM); 

// m1142;   next: m189 (next offset: 180)
000134  1 0  "01001000000010100000000100011111"   // (R[10]) = lhi_const_1_B1 (287); 
000135  1 0  "01010101010010110000000100011111"   // (R[11]) = w32_const_bor_1_B1 (R[10],287); 
000136  1 0  "01010000001000111111111111000100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000137  1 0  "01001000000001010000000100101101"   // (R[5]) = lhi_const_1_B1 (301); 
000138  1 0  "01001000000001000000000011011011"   // (R[4]) = lhi_const_1_B1 (219); 
000139  1 0  "01001000000010000000000100011011"   // (R[8]) = lhi_const_1_B1 (283); 
000140  1 0  "01010100101010100000000100101101"   // (R[10]) = w32_const_bor_1_B1 (R[5],301); 
000141  1 0  "01010100100001000000000011011011"   // (R[4]) = w32_const_bor_1_B1 (R[4],219); 
000142  1 0  "10101000001000111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[3],SP,-64); 
000143  1 0  "01001000000010010000000011001101"   // (R[9]) = lhi_const_1_B1 (205); 
000144  1 0  "01010101000010000000000100011011"   // (R[8]) = w32_const_bor_1_B1 (R[8],283); 
000145  1 0  "10101000001001001111111110101000"   // (__spill_DMw[-88]) = stack_store_bndl_B3 (R[4],SP,-88); 
000146  1 0  "01001000000011000000000100110001"   // (R[12]) = lhi_const_1_B1 (305); 
000147  1 0  "10101000001010101111111110110000"   // (__spill_DMw[-80]) = stack_store_bndl_B3 (R[10],SP,-80); 
000148  1 0  "01001000000000110000000101111001"   // (R[3]) = lhi_const_1_B1 (377); 
000149  1 0  "10101000001010001111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[8],SP,-76); 
000150  1 0  "01010101001010010000000011001101"   // (R[9]) = w32_const_bor_1_B1 (R[9],205); 
000151  1 0  "01001000000001100000000011011111"   // (R[6]) = lhi_const_1_B1 (223); 
000152  1 0  "01010101100001000000000100110001"   // (R[4]) = w32_const_bor_1_B1 (R[12],305); 
000153  1 0  "01010100011010100000000101111001"   // (R[10]) = w32_const_bor_1_B1 (R[3],377); 
000154  1 0  "10101000001010011111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[9],SP,-68); 
000155  1 0  "01001000000001010000000101111101"   // (R[5]) = lhi_const_1_B1 (381); 
000156  1 0  "01001000000010000000000101101011"   // (R[8]) = lhi_const_1_B1 (363); 
000157  1 0  "10101000001010111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[11],SP,-72); 
000158  1 0  "01010100110001100000000011011111"   // (R[6]) = w32_const_bor_1_B1 (R[6],223); 
000159  1 0  "01010100101011000000000101111101"   // (R[12]) = w32_const_bor_1_B1 (R[5],381); 
000160  1 0  "01010101000011100000000101101011"   // (R[14]) = w32_const_bor_1_B1 (R[8],363); 
000161  1 0  "01001000000010010000000101100111"   // (R[9]) = lhi_const_1_B1 (359); 
000162  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000163  1 0  "01001000000010110000000011001001"   // (R[11]) = lhi_const_1_B1 (201); 
000164  1 0  "10101000001010101111111110100000"   // (__spill_DMw[-96]) = stack_store_bndl_B3 (R[10],SP,-96); 
000165  1 0  "10101000001001001111111110011100"   // (__spill_DMw[-100]) = stack_store_bndl_B3 (R[4],SP,-100); 
000166  1 0  "10101000001001101111111110101100"   // (__spill_DMw[-84]) = stack_store_bndl_B3 (R[6],SP,-84); 
000167  1 0  "01010101001011010000000101100111"   // (R[13]) = w32_const_bor_1_B1 (R[9],359); 
000168  1 0  "01010000001001011111111111000100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000169  1 0  "10101000001011101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[14],SP,-12); 
000170  1 0  "01010101011010110000000011001001"   // (R[11]) = w32_const_bor_1_B1 (R[11],201); 
000171  1 0  "10101000001011001111111110100100"   // (__spill_DMw[-92]) = stack_store_bndl_B3 (R[12],SP,-92); 
000172  1 0  "10101000001011011111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[13],SP,-60); 
000173  1 0  "10101000001010111111111110011000"   // (__spill_DMw[-104]) = stack_store_bndl_B3 (R[11],SP,-104); 
000174  1 0  "01001000000011100000000000000000"   // (R[14]) = const_1_B3 (); 
000175  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000176  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000177  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000178  1 0  "01010000001001001111111111100100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000179  1 0  "01010000001010101111111111100100"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m189, jump target: m4 (next offset: 183)
000180  1 0  "01010000001011001111111110111100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000181  1 0  "00100100000000000000000000110011"   // () = j_const_1_B1 (51); 
000182  1 0  "10101000001001011111111110010100"   // (__spill_DMw[-108]) = stack_store_bndl_B3 (R[5],SP,-108); 

// m1011;   next: m1202, jump target: m175 (next offset: 186)
000183  1 0  "00100000011000000000000000101111"   // () = nez_br_const_2_B1 (R[3],47); 
000184  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000185  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1202;   next: m1201, jump target: m155 (next offset: 189)
000186  1 0  "00010100111000000000000000100110"   // () = br_eqz_const_1_B1 (R[7],38); 
000187  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000188  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1201;   next: m1199, jump target: m1198 (next offset: 192)
000189  1 0  "00100000110000000000000000010001"   // () = nez_br_const_1_B1 (R[6],17); 
000190  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000191  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1199;   next: m818, jump target: m817 (next offset: 195)
000192  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000193  1 0  "01010000001011011111111111011000"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000194  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m818;   next: m1178 (next offset: 196)
000195  1 0  "01010100000011010000000000000001"   // (R[13]) = const_2_B2 (); 

// m817;   next: m1178 (next offset: 196)

// m1178;   next: m170 (next offset: 201)
000196  1 0  "10111101101000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[13]); 
000197  1 0  "01010101010011100000000000000000"   // R[14] = R[10]; 
000198  1 0  "10111101011000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[11]); 
000199  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 
000200  1 0  "01010100100011010000000000000000"   // R[13] = R[4]; 

// m170;   next: m1228, loop target: m170 (next offset: 206)
000201  1 0  "00110101110011110000000000000000"   // (R[15]) = load_1_B1 (R[14],DMb,DMb,DMb,PM); 
000202  1 0  "00110101101000100000000000000000"   // (R[2]) = load_1_B1 (R[13],DMb,DMb,DMb,PM); 
000203  1 0  "00000001110000100000100000110101"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[2],R[14],DMb,DMb,DMb,PM); 
000204  1 0  "00000001101011110000100000110101"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[15],R[13],DMb,DMb,DMb,PM); 
000205  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1228, jump target: m174 (next offset: 208)
000206  1 0  "00100100000000000000000000010111"   // () = j_const_1_B1 (23); 
000207  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1198;   next: m812, jump target: m811 (next offset: 212)
000208  1 0  "01010000001011111111111111001100"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000209  1 0  "00100001111000000000000000000010"   // () = nez_br_const_1_B1 (R[15],2); 
000210  1 0  "01010000001011101111111111001000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000211  1 0  "01010000001011011111111110101000"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-88],SP,-88); 

// m812;   next: m1177 (next offset: 213)
000212  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m811;   next: m1177 (next offset: 213)

// m1177;   next: m164 (next offset: 219)
000213  1 0  "10111101110000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[14]); 
000214  1 0  "10111101101000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[13]); 
000215  1 0  "01010000001011111111111110101100"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-84],SP,-84); 
000216  1 0  "01010101010011100000000000000000"   // R[14] = R[10]; 
000217  1 0  "10111101111000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[15]); 
000218  1 0  "01010100100011010000000000000000"   // R[13] = R[4]; 

// m164;   next: m1264, loop target: m164 (next offset: 224)
000219  1 0  "01010001110011110000000000000000"   // (R[15]) = load_2_B1 (R[14],DMb,DMb,DMb,PM); 
000220  1 0  "01010001101000100000000000000000"   // (R[2]) = load_2_B1 (R[13],DMb,DMb,DMb,PM); 
000221  1 0  "00000001110000100010000000110111"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[2],R[14],DMb,DMb,DMb,PM); 
000222  1 0  "00000001101011110010000000110111"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[15],R[13],DMb,DMb,DMb,PM); 
000223  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1264;   next: m1229 (next offset: 224)

// m1229, jump target: m174 (next offset: 226)
000224  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000225  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m155;   next: m174 (next offset: 230)
000226  1 0  "01010001010011010000000000000000"   // (R[13]) = load_2_B1 (R[10],DMb,DMb,DMb,PM); 
000227  1 0  "01010000100011100000000000000000"   // (R[14]) = load_2_B1 (R[4],DMb,DMb,DMb,PM); 
000228  1 0  "10101001010011100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[14],R[10],DMb,DMb,DMb,PM); 
000229  1 0  "10101000100011010000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[13],R[4],DMb,DMb,DMb,PM); 

// m174;   next: m177 (next offset: 232)
000230  1 0  "00000001001010100101000000000001"   // (R[10],) = _pl_1_B1 (R[10],R[9]); 
000231  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m175;   next: m177 (next offset: 232)

// m177;   next: m4 (next offset: 233)
000232  1 0  "00000000100010010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[9]); 

// m4;   next: m178 (next offset: 233)

// m178;   next: m182, jump target: m239 (next offset: 237)
000233  1 0  "00000000100001010110100000001111"   // (R[13]) = _gt_1_B1 (R[4],R[5]); 
000234  1 0  "00100001101000000000000000010100"   // () = nez_br_const_1_B1 (R[13],20); 
000235  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000236  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m182;   next: m183 (next offset: 244)
000237  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000238  1 0  "10101000001010101111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[10],SP,-120); 
000239  1 0  "10101000001011101111111110001100"   // (__spill_DMw[-116]) = stack_store_bndl_B3 (R[14],SP,-116); 
000240  1 0  "10101000001001001111111110010000"   // (__spill_DMw[-112]) = stack_store_bndl_B3 (R[4],SP,-112); 
000241  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000242  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000243  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m183 subroutine call;   next: m184 (next offset: 244)

// m184;   next: m239, jump target: m1011 (next offset: 256)
000244  1 0  "00000000011000000110100000010000"   // (R[13]) = _le_const_1_B2 (R[3]); 
000245  1 0  "01010000001001011111111110010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000246  1 0  "01010000001010101111111110001000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-120],SP,-120); 
000247  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000248  1 0  "01010000001011101111111110001100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000249  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000250  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000251  1 0  "01010000001010111111111110011000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000252  1 0  "01010000001011001111111110111100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000253  1 0  "00100001101000001111111110111000"   // () = nez_br_const_1_B1 (R[13],-72); 
000254  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000255  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m239, jump target: m5 (next offset: 265)
000256  1 0  "01010000001010111111111111000000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000257  1 0  "10101000001001001111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[4],SP,-64); 
000258  1 0  "01010100100000100000000000000000"   // LR = R[4]; 
000259  1 0  "01010000001011001111111110110100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000260  1 0  "01010000001011011111111110111000"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000261  1 0  "10101000001010101111111110010100"   // (__spill_DMw[-108]) = stack_store_bndl_B3 (R[10],SP,-108); 
000262  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 
000263  1 0  "00100100000000000000000000110011"   // () = j_const_1_B1 (51); 
000264  1 0  "01010100010001010000000000000000"   // R[5] = LR; 

// m1014;   next: m1208, jump target: m225 (next offset: 268)
000265  1 0  "00100000011000000000000000101111"   // () = nez_br_const_2_B1 (R[3],47); 
000266  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000267  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1208;   next: m1207, jump target: m205 (next offset: 271)
000268  1 0  "00010100111000000000000000100110"   // () = br_eqz_const_1_B1 (R[7],38); 
000269  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000270  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1207;   next: m1205, jump target: m1204 (next offset: 274)
000271  1 0  "00100000110000000000000000010001"   // () = nez_br_const_1_B1 (R[6],17); 
000272  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000273  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1205;   next: m830, jump target: m829 (next offset: 277)
000274  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000275  1 0  "01010000001010101111111111011000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000276  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m830;   next: m1180 (next offset: 278)
000277  1 0  "01010100000010100000000000000001"   // (R[10]) = const_2_B2 (); 

// m829;   next: m1180 (next offset: 278)

// m1180;   next: m220 (next offset: 283)
000278  1 0  "10111101010000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[10]); 
000279  1 0  "01010100100011100000000000000000"   // R[14] = R[4]; 
000280  1 0  "10111101100000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[12]); 
000281  1 0  "10111101101000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[13]); 
000282  1 0  "01010101011010100000000000000000"   // R[10] = R[11]; 

// m220;   next: m1230, loop target: m220 (next offset: 288)
000283  1 0  "00110101110011110000000000000000"   // (R[15]) = load_1_B1 (R[14],DMb,DMb,DMb,PM); 
000284  1 0  "00110101010000100000000000000000"   // (R[2]) = load_1_B1 (R[10],DMb,DMb,DMb,PM); 
000285  1 0  "00000001110000100000100000110101"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[2],R[14],DMb,DMb,DMb,PM); 
000286  1 0  "00000001010011110000100000110101"   // (R[10],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[15],R[10],DMb,DMb,DMb,PM); 
000287  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1230, jump target: m224 (next offset: 290)
000288  1 0  "00100100000000000000000000010111"   // () = j_const_1_B1 (23); 
000289  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1204;   next: m824, jump target: m823 (next offset: 294)
000290  1 0  "01010000001011111111111111001100"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000291  1 0  "00100001111000000000000000000010"   // () = nez_br_const_1_B1 (R[15],2); 
000292  1 0  "01010000001011101111111111001000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000293  1 0  "01010000001010101111111110110000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-80],SP,-80); 

// m824;   next: m1179 (next offset: 295)
000294  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m823;   next: m1179 (next offset: 295)

// m1179;   next: m214 (next offset: 301)
000295  1 0  "10111101110000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[14]); 
000296  1 0  "10111101010000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[10]); 
000297  1 0  "01010000001011111111111110011100"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-100],SP,-100); 
000298  1 0  "01010100100011100000000000000000"   // R[14] = R[4]; 
000299  1 0  "10111101111000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[15]); 
000300  1 0  "01010101011010100000000000000000"   // R[10] = R[11]; 

// m214;   next: m1265, loop target: m214 (next offset: 306)
000301  1 0  "01010001110011110000000000000000"   // (R[15]) = load_2_B1 (R[14],DMb,DMb,DMb,PM); 
000302  1 0  "01010001010000100000000000000000"   // (R[2]) = load_2_B1 (R[10],DMb,DMb,DMb,PM); 
000303  1 0  "00000001110000100010000000110111"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[2],R[14],DMb,DMb,DMb,PM); 
000304  1 0  "00000001010011110010000000110111"   // (R[10],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[15],R[10],DMb,DMb,DMb,PM); 
000305  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1265;   next: m1231 (next offset: 306)

// m1231, jump target: m224 (next offset: 308)
000306  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000307  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m205;   next: m224 (next offset: 312)
000308  1 0  "01010000100010100000000000000000"   // (R[10]) = load_2_B1 (R[4],DMb,DMb,DMb,PM); 
000309  1 0  "01010001011011100000000000000000"   // (R[14]) = load_2_B1 (R[11],DMb,DMb,DMb,PM); 
000310  1 0  "10101000100011100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[14],R[4],DMb,DMb,DMb,PM); 
000311  1 0  "10101001011010100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[10],R[11],DMb,DMb,DMb,PM); 

// m224;   next: m227 (next offset: 314)
000312  1 0  "00000001011010010101100000011000"   // (R[11],MC) = _mi_1_B1 (R[11],R[9]); 
000313  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m225;   next: m227 (next offset: 314)

// m227;   next: m5 (next offset: 315)
000314  1 0  "00000000100010010010000000011000"   // (R[4],MC) = _mi_1_B1 (R[4],R[9]); 

// m5;   next: m228 (next offset: 315)

// m228;   next: m232, jump target: m241 (next offset: 319)
000315  1 0  "00000000101001000101000000001111"   // (R[10]) = _gt_1_B1 (R[5],R[4]); 
000316  1 0  "00100001010000000000000000010100"   // () = nez_br_const_1_B1 (R[10],20); 
000317  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000318  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m232;   next: m233 (next offset: 326)
000319  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000320  1 0  "10101000001010111111111110001000"   // (__spill_DMw[-120]) = stack_store_bndl_B3 (R[11],SP,-120); 
000321  1 0  "10101000001011101111111110001100"   // (__spill_DMw[-116]) = stack_store_bndl_B3 (R[14],SP,-116); 
000322  1 0  "10101000001001001111111110010000"   // (__spill_DMw[-112]) = stack_store_bndl_B3 (R[4],SP,-112); 
000323  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000324  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000325  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m233 subroutine call;   next: m234 (next offset: 326)

// m234;   next: m241, jump target: m1014 (next offset: 338)
000326  1 0  "00000000011000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[3]); 
000327  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000328  1 0  "01010000001010111111111110001000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-120],SP,-120); 
000329  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000330  1 0  "01010000001011101111111110001100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-116],SP,-116); 
000331  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000332  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000333  1 0  "01010000001011001111111110110100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000334  1 0  "01010000001011011111111110111000"   // (R[13]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000335  1 0  "00100001010000001111111110111000"   // () = nez_br_const_1_B1 (R[10],-72); 
000336  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000337  1 0  "01010000001001001111111110010000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-112],SP,-112); 

// m241;   next: m246, jump target: m7 (next offset: 343)
000338  1 0  "01010100100010100000000000000000"   // R[10] = R[4]; 
000339  1 0  "00000000101010100010000000001111"   // (R[4]) = _gt_1_B1 (R[5],R[10]); 
000340  1 0  "00100000100000000000000000110100"   // () = nez_br_const_1_B1 (R[4],52); 
000341  1 0  "10101000001010111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[11],SP,-64); 
000342  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m246;   next: m1232 (next offset: 343)

// m1232;   next: m1213, jump target: m251 (next offset: 346)
000343  1 0  "00010100111000000000000000100111"   // () = br_eqz_const_1_B1 (R[7],39); 
000344  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000345  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1213;   next: m1211, jump target: m1210 (next offset: 349)
000346  1 0  "00100000110000000000000000010010"   // () = nez_br_const_1_B1 (R[6],18); 
000347  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000348  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1211;   next: m842, jump target: m841 (next offset: 352)
000349  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000350  1 0  "01010000001010111111111111011000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000351  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m842;   next: m1182 (next offset: 353)
000352  1 0  "01010100000010110000000000000001"   // (R[11]) = const_2_B2 (); 

// m841;   next: m1182 (next offset: 353)

// m1182;   next: m266 (next offset: 359)
000353  1 0  "10111101011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[11]); 
000354  1 0  "10111100100000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[4]); 
000355  1 0  "01010000001011001111111111110100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000356  1 0  "01010100101010110000000000000000"   // R[11] = R[5]; 
000357  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 
000358  1 0  "01010101010001000000000000000000"   // R[4] = R[10]; 

// m266;   next: m1233, loop target: m266 (next offset: 364)
000359  1 0  "00110101011011000000000000000000"   // (R[12]) = load_1_B1 (R[11],DMb,DMb,DMb,PM); 
000360  1 0  "00110100100011010000000000000000"   // (R[13]) = load_1_B1 (R[4],DMb,DMb,DMb,PM); 
000361  1 0  "00000001011011010000100000110101"   // (R[11],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[13],R[11],DMb,DMb,DMb,PM); 
000362  1 0  "00000000100011000000100000110101"   // (R[4],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[12],R[4],DMb,DMb,DMb,PM); 
000363  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1233, jump target: m270 (next offset: 366)
000364  1 0  "00100100000000000000000000010111"   // () = j_const_1_B1 (23); 
000365  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1210;   next: m836, jump target: m835 (next offset: 370)
000366  1 0  "01010000001011001111111111001100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000367  1 0  "00100001100000000000000000000010"   // () = nez_br_const_1_B1 (R[12],2); 
000368  1 0  "01010000001010111111111111001000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000369  1 0  "01010000001001001111111110100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-96],SP,-96); 

// m836;   next: m1181 (next offset: 371)
000370  1 0  "01010100000010110000000000000001"   // (R[11]) = const_2_B2 (); 

// m835;   next: m1181 (next offset: 371)

// m1181;   next: m260 (next offset: 377)
000371  1 0  "10111101011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[11]); 
000372  1 0  "10111100100000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[4]); 
000373  1 0  "01010000001011001111111110100100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-92],SP,-92); 
000374  1 0  "01010100101010110000000000000000"   // R[11] = R[5]; 
000375  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 
000376  1 0  "01010101010001000000000000000000"   // R[4] = R[10]; 

// m260;   next: m1266, loop target: m260 (next offset: 382)
000377  1 0  "01010001011011000000000000000000"   // (R[12]) = load_2_B1 (R[11],DMb,DMb,DMb,PM); 
000378  1 0  "01010000100011010000000000000000"   // (R[13]) = load_2_B1 (R[4],DMb,DMb,DMb,PM); 
000379  1 0  "00000001011011010010000000110111"   // (R[11],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[13],R[11],DMb,DMb,DMb,PM); 
000380  1 0  "00000000100011000010000000110111"   // (R[4],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[12],R[4],DMb,DMb,DMb,PM); 
000381  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1266;   next: m1234 (next offset: 382)

// m1234, jump target: m270 (next offset: 384)
000382  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000383  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m251;   next: m270 (next offset: 388)
000384  1 0  "01010000101001000000000000000000"   // (R[4]) = load_2_B1 (R[5],DMb,DMb,DMb,PM); 
000385  1 0  "01010001010010110000000000000000"   // (R[11]) = load_2_B1 (R[10],DMb,DMb,DMb,PM); 
000386  1 0  "10101000101010110000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[11],R[5],DMb,DMb,DMb,PM); 
000387  1 0  "10101001010001000000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[4],R[10],DMb,DMb,DMb,PM); 

// m270, jump target: m189 (next offset: 394)
000388  1 0  "00000000101010010010000000000001"   // (R[4],) = _pl_1_B1 (R[5],R[9]); 
000389  1 0  "00000001010010010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[10],R[9]); 
000390  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 
000391  1 0  "01010000001010111111111110011000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-104],SP,-104); 
000392  1 0  "00100111111111111111111100101011"   // () = j_const_1_B1 (-213); 
000393  1 0  "01010000001010101111111110010100"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 

// m7;   next: m1017 (next offset: 394)

// m1017;   next: m337, jump target: m334 (next offset: 397)
000394  1 0  "00010101110000000000000010010000"   // () = br_eqz_const_1_B1 (R[14],144); 
000395  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000396  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m337;   next: m341, jump target: m340 (next offset: 405)
000397  1 0  "01010000001000111111111110010100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-108],SP,-108); 
000398  1 0  "00000000101000110010000000011000"   // (R[4],MC) = _mi_1_B1 (R[5],R[3]); 
000399  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000400  1 0  "00000000011001110001100000011000"   // (R[3],MC) = _mi_1_B1 (R[3],R[7]); 
000401  1 0  "00000000011001000100000000010011"   // (R[8]) = _lt_1_B1 (R[3],R[4]); 
000402  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000403  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000404  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m341;   next: m343 (next offset: 406)
000405  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 

// m340;   next: m343 (next offset: 406)

// m343;   next: m347, jump target: m363 (next offset: 410)
000406  1 0  "00000000011000000100000000010000"   // (R[8]) = _le_const_1_B2 (R[3]); 
000407  1 0  "00100001000000000000000000101101"   // () = nez_br_const_1_B1 (R[8],45); 
000408  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000409  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m347;   next: m780, jump target: m351 (next offset: 413)
000410  1 0  "00100000110000000000000000010101"   // () = nez_br_const_1_B1 (R[6],21); 
000411  1 0  "00000000101000110100000000011000"   // (R[8],MC) = _mi_1_B1 (R[5],R[3]); 
000412  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m780;   next: m865, jump target: m866 (next offset: 418)
000413  1 0  "00001000011011001111111111111111"   // (R[12],MC) = _pl_const_2_B1 (R[3]); 
000414  1 0  "00000001100000000110100000010000"   // (R[13]) = _le_const_1_B2 (R[12]); 
000415  1 0  "00100001101000000000000000000010"   // () = nez_br_const_1_B1 (R[13],2); 
000416  1 0  "01010100000010110000000000000001"   // (R[11]) = const_2_B2 (); 
000417  1 0  "01010100000000110000000000000001"   // (R[3]) = const_2_B2 (); 

// m865;   next: m1186 (next offset: 419)
000418  1 0  "00001001100010110000000000000001"   // (R[11],MC) = _pl_const_1_B1 (R[12]); 

// m866;   next: m1186 (next offset: 419)

// m1186;   next: m360 (next offset: 426)
000419  1 0  "01001000000011010000000110101010"   // (R[13]) = lhi_const_1_B1 (426); 
000420  1 0  "01001000000011000000000110101110"   // (R[12]) = lhi_const_1_B1 (430); 
000421  1 0  "01010101101011010000000110101010"   // (R[13]) = w32_const_bor_1_B1 (R[13],426); 
000422  1 0  "01010101100011000000000110101110"   // (R[12]) = w32_const_bor_1_B1 (R[12],430); 
000423  1 0  "10111101011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[11]); 
000424  1 0  "10111101101000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[13]); 
000425  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 

// m360;   next: m1239, loop target: m360 (next offset: 431)
000426  1 0  "00110100111010110000000000000000"   // (R[11]) = load_1_B1 (R[7],DMb,DMb,DMb,PM); 
000427  1 0  "00110101000011000000000000000000"   // (R[12]) = load_1_B1 (R[8],DMb,DMb,DMb,PM); 
000428  1 0  "00000000111011000000100000110101"   // (R[7],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[12],R[7],DMb,DMb,DMb,PM); 
000429  1 0  "00000001000010110000100000110101"   // (R[8],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[11],R[8],DMb,DMb,DMb,PM); 
000430  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1239, jump target: m365 (next offset: 433)
000431  1 0  "00100100000000000000000000010111"   // () = j_const_1_B1 (23); 
000432  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m351;   next: m859, jump target: m860 (next offset: 439)
000433  1 0  "10011100011000110000000000000010"   // (R[3]) = _rs_const_1_B1 (R[3]); 
000434  1 0  "00001000011011001111111111111111"   // (R[12],MC) = _pl_const_2_B1 (R[3]); 
000435  1 0  "00000001100000000110100000010000"   // (R[13]) = _le_const_1_B2 (R[12]); 
000436  1 0  "00100001101000000000000000000010"   // () = nez_br_const_1_B1 (R[13],2); 
000437  1 0  "01010100000010110000000000000001"   // (R[11]) = const_2_B2 (); 
000438  1 0  "01010100000000110000000000000001"   // (R[3]) = const_2_B2 (); 

// m859;   next: m1185 (next offset: 440)
000439  1 0  "00001001100010110000000000000001"   // (R[11],MC) = _pl_const_1_B1 (R[12]); 

// m860;   next: m1185 (next offset: 440)

// m1185;   next: m354 (next offset: 447)
000440  1 0  "01001000000011010000000110111111"   // (R[13]) = lhi_const_1_B1 (447); 
000441  1 0  "01001000000011000000000111000011"   // (R[12]) = lhi_const_1_B1 (451); 
000442  1 0  "01010101101011010000000110111111"   // (R[13]) = w32_const_bor_1_B1 (R[13],447); 
000443  1 0  "01010101100011000000000111000011"   // (R[12]) = w32_const_bor_1_B1 (R[12],451); 
000444  1 0  "10111101011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[11]); 
000445  1 0  "10111101101000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[13]); 
000446  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 

// m354;   next: m1269, loop target: m354 (next offset: 452)
000447  1 0  "01010000111010110000000000000000"   // (R[11]) = load_2_B1 (R[7],DMb,DMb,DMb,PM); 
000448  1 0  "01010001000011000000000000000000"   // (R[12]) = load_2_B1 (R[8],DMb,DMb,DMb,PM); 
000449  1 0  "00000000111011000010000000110111"   // (R[7],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[12],R[7],DMb,DMb,DMb,PM); 
000450  1 0  "00000001000010110010000000110111"   // (R[8],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[11],R[8],DMb,DMb,DMb,PM); 
000451  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1269;   next: m1240 (next offset: 452)

// m1240, jump target: m365 (next offset: 454)
000452  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000453  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m363;   next: m365 (next offset: 455)
000454  1 0  "01010100000000110000000000000001"   // (R[3]) = const_2_B2 (); 

// m365;   next: m369, jump target: m368 (next offset: 464)
000455  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000456  1 0  "01010000001010001111111111000000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000457  1 0  "00000000111010000101100000011000"   // (R[11],MC) = _mi_1_B1 (R[7],R[8]); 
000458  1 0  "00000001000010100100000000011000"   // (R[8],MC) = _mi_1_B1 (R[8],R[10]); 
000459  1 0  "00000001011010010101000000011000"   // (R[10],MC) = _mi_1_B1 (R[11],R[9]); 
000460  1 0  "00000001000010100101100000010011"   // (R[11]) = _lt_1_B1 (R[8],R[10]); 
000461  1 0  "00100001011000000000000000000010"   // () = nez_br_const_1_B1 (R[11],2); 
000462  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000463  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m369;   next: m371 (next offset: 465)
000464  1 0  "01010101010010000000000000000000"   // R[8] = R[10]; 

// m368;   next: m371 (next offset: 465)

// m371;   next: m375, jump target: m391 (next offset: 469)
000465  1 0  "00000001000000000101000000010000"   // (R[10]) = _le_const_1_B2 (R[8]); 
000466  1 0  "00100001010000000000000000101011"   // () = nez_br_const_1_B1 (R[10],43); 
000467  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000468  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m375;   next: m782, jump target: m379 (next offset: 472)
000469  1 0  "00100000110000000000000000010101"   // () = nez_br_const_1_B1 (R[6],21); 
000470  1 0  "00000000111010000011100000011000"   // (R[7],MC) = _mi_1_B1 (R[7],R[8]); 
000471  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m782;   next: m877, jump target: m878 (next offset: 477)
000472  1 0  "00001001000001101111111111111111"   // (R[6],MC) = _pl_const_2_B1 (R[8]); 
000473  1 0  "00000000110000000100000000010000"   // (R[8]) = _le_const_1_B2 (R[6]); 
000474  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000475  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000476  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m877;   next: m1188 (next offset: 478)
000477  1 0  "00001000110000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[6]); 

// m878;   next: m1188 (next offset: 478)

// m1188;   next: m388 (next offset: 485)
000478  1 0  "01001000000010000000000111100101"   // (R[8]) = lhi_const_1_B1 (485); 
000479  1 0  "01001000000001100000000111101001"   // (R[6]) = lhi_const_1_B1 (489); 
000480  1 0  "01010101000010000000000111100101"   // (R[8]) = w32_const_bor_1_B1 (R[8],485); 
000481  1 0  "01010100110001100000000111101001"   // (R[6]) = w32_const_bor_1_B1 (R[6],489); 
000482  1 0  "10111100011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[3]); 
000483  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[8]); 
000484  1 0  "10111100110000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[6]); 

// m388;   next: m1241, loop target: m388 (next offset: 490)
000485  1 0  "00110100101000110000000000000000"   // (R[3]) = load_1_B1 (R[5],DMb,DMb,DMb,PM); 
000486  1 0  "00110100111001100000000000000000"   // (R[6]) = load_1_B1 (R[7],DMb,DMb,DMb,PM); 
000487  1 0  "00000000101001100000100000110101"   // (R[5],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[6],R[5],DMb,DMb,DMb,PM); 
000488  1 0  "00000000111000110000100000110101"   // (R[7],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[3],R[7],DMb,DMb,DMb,PM); 
000489  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1241, jump target: m1242 (next offset: 492)
000490  1 0  "00100100000000000000000000010100"   // () = j_const_1_B1 (20); 
000491  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m379;   next: m871, jump target: m872 (next offset: 498)
000492  1 0  "10011101000001100000000000000010"   // (R[6]) = _rs_const_1_B1 (R[8]); 
000493  1 0  "00001000110001101111111111111111"   // (R[6],MC) = _pl_const_2_B1 (R[6]); 
000494  1 0  "00000000110000000100000000010000"   // (R[8]) = _le_const_1_B2 (R[6]); 
000495  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000496  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000497  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m871;   next: m1187 (next offset: 499)
000498  1 0  "00001000110000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[6]); 

// m872;   next: m1187 (next offset: 499)

// m1187;   next: m382 (next offset: 506)
000499  1 0  "01001000000010000000000111111010"   // (R[8]) = lhi_const_1_B1 (506); 
000500  1 0  "01001000000001100000000111111110"   // (R[6]) = lhi_const_1_B1 (510); 
000501  1 0  "01010101000010000000000111111010"   // (R[8]) = w32_const_bor_1_B1 (R[8],506); 
000502  1 0  "01010100110001100000000111111110"   // (R[6]) = w32_const_bor_1_B1 (R[6],510); 
000503  1 0  "10111100011000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[3]); 
000504  1 0  "10111101000000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[8]); 
000505  1 0  "10111100110000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[6]); 

// m382;   next: m1270, loop target: m382 (next offset: 511)
000506  1 0  "01010000101000110000000000000000"   // (R[3]) = load_2_B1 (R[5],DMb,DMb,DMb,PM); 
000507  1 0  "01010000111001100000000000000000"   // (R[6]) = load_2_B1 (R[7],DMb,DMb,DMb,PM); 
000508  1 0  "00000000101001100010000000110111"   // (R[5],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[6],R[5],DMb,DMb,DMb,PM); 
000509  1 0  "00000000111000110010000000110111"   // (R[7],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[3],R[7],DMb,DMb,DMb,PM); 
000510  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1270;   next: m1242 (next offset: 511)

// m1242;   next: m393 (next offset: 511)

// m391;   next: m393 (next offset: 511)

// m393;   next: m1044, jump target: m399 (next offset: 515)
000511  1 0  "00000000100010010001100000010000"   // (R[3]) = _le_1_B1 (R[4],R[9]); 
000512  1 0  "00100000011000000000000000001011"   // () = nez_br_const_1_B1 (R[3],11); 
000513  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000514  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1044;   next: m1045 (next offset: 517)
000515  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000516  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1045 subroutine call;   next: m1042 (next offset: 517)

// m1042;   next: m398 (next offset: 522)
000517  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000518  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000519  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000520  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000521  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m398 subroutine call;   next: m1243 (next offset: 522)

// m1243, jump target: m401 (next offset: 525)
000522  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000523  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000524  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m399;   next: m401 (next offset: 526)
000525  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m401;   next: m1050, jump target: m1245 (next offset: 530)
000526  1 0  "00000000100001010011000000010000"   // (R[6]) = _le_1_B1 (R[4],R[5]); 
000527  1 0  "00100000110000000000000001100111"   // () = nez_br_const_1_B1 (R[6],103); 
000528  1 0  "01010000001000111111111111010100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000529  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1050;   next: m1051 (next offset: 534)
000530  1 0  "00000000011001000001100000011000"   // (R[3],MC) = _mi_1_B1 (R[3],R[4]); 
000531  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000532  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000533  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1051 subroutine call;   next: m406 (next offset: 534)

// m406, jump target: m1 (next offset: 540)
000534  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000535  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000536  1 0  "01010000001000101111111111101100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000537  1 0  "01010100011001010000000000000000"   // R[5] = R[3]; 
000538  1 0  "00100111111111111111110111101000"   // () = j_const_1_B1 (-536); 
000539  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m334, jump target: m9 (next offset: 557)
000540  1 0  "01001000000001010000001001010100"   // (R[5]) = lhi_const_1_B1 (596); 
000541  1 0  "01001000000010100000001001010000"   // (R[10]) = lhi_const_1_B1 (592); 
000542  1 0  "01001000000001000000001001000011"   // (R[4]) = lhi_const_1_B1 (579); 
000543  1 0  "01010100101011110000001001010100"   // (R[15]) = w32_const_bor_1_B1 (R[5],596); 
000544  1 0  "01010101010011010000001001010000"   // (R[13]) = w32_const_bor_1_B1 (R[10],592); 
000545  1 0  "01010100100011000000001001000011"   // (R[12]) = w32_const_bor_1_B1 (R[4],579); 
000546  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000547  1 0  "01001000000000110000001000111111"   // (R[3]) = lhi_const_1_B1 (575); 
000548  1 0  "01010000001010111111111111111000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000549  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000550  1 0  "01010000001011101111111111010100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000551  1 0  "10101000001011001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[12],SP,-12); 
000552  1 0  "10101000001011111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[15],SP,-28); 
000553  1 0  "10101000001011011111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[13],SP,-60); 
000554  1 0  "01010100011010100000001000111111"   // (R[10]) = w32_const_bor_1_B1 (R[3],575); 
000555  1 0  "00100100000000000000000001001000"   // () = j_const_1_B1 (72); 
000556  1 0  "10101000001010101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[10],SP,-32); 

// m328, jump target: m8 (next offset: 560)
000557  1 0  "10101000001001001111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[4],SP,-68); 
000558  1 0  "00100100000000000000000000101100"   // () = j_const_1_B1 (44); 
000559  1 0  "10101000001001011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[5],SP,-64); 

// m294;   next: m1217, jump target: m297 (next offset: 564)
000560  1 0  "00000000100010010010000000011000"   // (R[4],MC) = _mi_1_B1 (R[4],R[9]); 
000561  1 0  "00010100111000000000000000100100"   // () = br_eqz_const_1_B1 (R[7],36); 
000562  1 0  "01010100101011010000000000000000"   // R[13] = R[5]; 
000563  1 0  "00000000101010010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[9]); 

// m1217;   next: m1215, jump target: m1214 (next offset: 567)
000564  1 0  "00100000110000000000000000010000"   // () = nez_br_const_1_B1 (R[6],16); 
000565  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000566  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1215;   next: m854, jump target: m853 (next offset: 570)
000567  1 0  "00100001000000000000000000000010"   // () = nez_br_const_1_B1 (R[8],2); 
000568  1 0  "01010000001011101111111111011000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000569  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m854;   next: m1184 (next offset: 571)
000570  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m853;   next: m1184 (next offset: 571)

// m1184;   next: m312 (next offset: 575)
000571  1 0  "10111101110000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[14]); 
000572  1 0  "10111101010000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[10]); 
000573  1 0  "10111101100000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[12]); 
000574  1 0  "01010100101011100000000000000000"   // R[14] = R[5]; 

// m312;   next: m1235, loop target: m312 (next offset: 580)
000575  1 0  "00110101101011110000000000000000"   // (R[15]) = load_1_B1 (R[13],DMb,DMb,DMb,PM); 
000576  1 0  "00110101110000100000000000000000"   // (R[2]) = load_1_B1 (R[14],DMb,DMb,DMb,PM); 
000577  1 0  "00000001101000100000100000110101"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[2],R[13],DMb,DMb,DMb,PM); 
000578  1 0  "00000001110011110000100000110101"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[15],R[14],DMb,DMb,DMb,PM); 
000579  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1235, jump target: m1261 (next offset: 582)
000580  1 0  "00100100000000000000000000010110"   // () = j_const_1_B1 (22); 
000581  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1214;   next: m848, jump target: m847 (next offset: 586)
000582  1 0  "01010000001000101111111111001100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000583  1 0  "00100000010000000000000000000010"   // () = nez_br_const_1_B1 (R[2],2); 
000584  1 0  "01010000001011111111111111001000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000585  1 0  "01010000001011101111111111000100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m848;   next: m1183 (next offset: 587)
000586  1 0  "01010100000011110000000000000001"   // (R[15]) = const_2_B2 (); 

// m847;   next: m1183 (next offset: 587)

// m1183;   next: m306 (next offset: 592)
000587  1 0  "10111101110000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[14]); 
000588  1 0  "01010000001000101111111111100100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000589  1 0  "10111101111000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[15]); 
000590  1 0  "10111100010000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[2]); 
000591  1 0  "01010100101011100000000000000000"   // R[14] = R[5]; 

// m306;   next: m1268, loop target: m306 (next offset: 597)
000592  1 0  "01010001101011110000000000000000"   // (R[15]) = load_2_B1 (R[13],DMb,DMb,DMb,PM); 
000593  1 0  "01010001110000100000000000000000"   // (R[2]) = load_2_B1 (R[14],DMb,DMb,DMb,PM); 
000594  1 0  "00000001101000100010000000110111"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[2],R[13],DMb,DMb,DMb,PM); 
000595  1 0  "00000001110011110010000000110111"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[15],R[14],DMb,DMb,DMb,PM); 
000596  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1268;   next: m1236 (next offset: 597)

// m1236, jump target: m1261 (next offset: 599)
000597  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000598  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m297;   next: m1261 (next offset: 603)
000599  1 0  "01010001101011100000000000000000"   // (R[14]) = load_2_B1 (R[13],DMb,DMb,DMb,PM); 
000600  1 0  "01010000101011110000000000000000"   // (R[15]) = load_2_B1 (R[5],DMb,DMb,DMb,PM); 
000601  1 0  "10101001101011110000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[15],R[13],DMb,DMb,DMb,PM); 
000602  1 0  "10101000101011100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[14],R[5],DMb,DMb,DMb,PM); 

// m1261;   next: m8 (next offset: 603)

// m8;   next: m317 (next offset: 603)

// m317;   next: m321, jump target: m330 (next offset: 607)
000603  1 0  "00000000101010110110100000010001"   // (R[13]) = _le_2_B1 (R[5],R[11]); 
000604  1 0  "00100001101000000000000000010001"   // () = nez_br_const_1_B1 (R[13],17); 
000605  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000606  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m321;   next: m322 (next offset: 612)
000607  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000608  1 0  "10101000001001001111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[4],SP,-76); 
000609  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000610  1 0  "10101000001001011111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[5],SP,-72); 
000611  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m322 subroutine call;   next: m323 (next offset: 612)

// m323;   next: m330, jump target: m294 (next offset: 623)
000612  1 0  "00000000011000000110100000001110"   // (R[13]) = _gt_const_1_B2 (R[3]); 
000613  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000614  1 0  "01010000001010111111111111111000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000615  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000616  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000617  1 0  "01010000001010001111111111011100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000618  1 0  "01010000001010101111111111100000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000619  1 0  "01010000001011001111111111110100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000620  1 0  "00100001101000001111111111000010"   // () = nez_br_const_1_B1 (R[13],-62); 
000621  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000622  1 0  "01010000001001001111111110110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 

// m330;   next: m9 (next offset: 628)
000623  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000624  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000625  1 0  "00000000101010010010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[9]); 
000626  1 0  "00000000100010010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[9]); 
000627  1 0  "01010000001011101111111111010100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m9;   next: m331 (next offset: 628)

// m331;   next: m1267, jump target: m328 (next offset: 632)
000628  1 0  "00000000101011100110100000010100"   // (R[13]) = _lt_2_B1 (R[5],R[14]); 
000629  1 0  "00100001101000001111111110110110"   // () = nez_br_const_1_B1 (R[13],-74); 
000630  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000631  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1267;   next: m1245 (next offset: 632)

// m1245, jump target: m412 (next offset: 634)
000632  1 0  "00100100000000000000000001100001"   // () = j_const_1_B1 (97); 
000633  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m89, jump target: m3 (next offset: 654)
000634  1 0  "01001000000010000000001010100100"   // (R[8]) = lhi_const_1_B1 (676); 
000635  1 0  "01001000000001010000001010110101"   // (R[5]) = lhi_const_1_B1 (693); 
000636  1 0  "01010101000010110000001010100100"   // (R[11]) = w32_const_bor_1_B1 (R[8],676); 
000637  1 0  "01010100101011110000001010110101"   // (R[15]) = w32_const_bor_1_B1 (R[5],693); 
000638  1 0  "01010100100010000000000000000000"   // R[8] = R[4]; 
000639  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000640  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000641  1 0  "01001000000001110000001010100000"   // (R[7]) = lhi_const_1_B1 (672); 
000642  1 0  "01001000000000110000001010110001"   // (R[3]) = lhi_const_1_B1 (689); 
000643  1 0  "01010100111010010000001010100000"   // (R[9]) = w32_const_bor_1_B1 (R[7],672); 
000644  1 0  "01010100011011010000001010110001"   // (R[13]) = w32_const_bor_1_B1 (R[3],689); 
000645  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000646  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000647  1 0  "01010000001011001111111111010000"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000648  1 0  "01010000001011101111111111010100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000649  1 0  "10101000001011111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[15],SP,-28); 
000650  1 0  "10101000001010011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[9],SP,-12); 
000651  1 0  "10101000001011011111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[13],SP,-60); 
000652  1 0  "00100100000000000000000001001000"   // () = j_const_1_B1 (72); 
000653  1 0  "10101000001010111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[11],SP,-32); 

// m83, jump target: m2 (next offset: 657)
000654  1 0  "10101000001001001111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[4],SP,-68); 
000655  1 0  "00100100000000000000000000101100"   // () = j_const_1_B1 (44); 
000656  1 0  "10101000001001011111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[5],SP,-64); 

// m49;   next: m1192, jump target: m52 (next offset: 661)
000657  1 0  "00000000100001100010000000011000"   // (R[4],MC) = _mi_1_B1 (R[4],R[6]); 
000658  1 0  "00010100011000000000000000100100"   // () = br_eqz_const_1_B1 (R[3],36); 
000659  1 0  "01010100101011010000000000000000"   // R[13] = R[5]; 
000660  1 0  "00000000101001100010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[6]); 

// m1192;   next: m1190, jump target: m1189 (next offset: 664)
000661  1 0  "00100001100000000000000000010000"   // () = nez_br_const_1_B1 (R[12],16); 
000662  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000663  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1190;   next: m794, jump target: m793 (next offset: 667)
000664  1 0  "00100000111000000000000000000010"   // () = nez_br_const_1_B1 (R[7],2); 
000665  1 0  "01010000001011101111111111011000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000666  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m794;   next: m1174 (next offset: 668)
000667  1 0  "01010100000011100000000000000001"   // (R[14]) = const_2_B2 (); 

// m793;   next: m1174 (next offset: 668)

// m1174;   next: m67 (next offset: 672)
000668  1 0  "10111101110000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[14]); 
000669  1 0  "10111101001000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[9]); 
000670  1 0  "10111101011000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[11]); 
000671  1 0  "01010100101011100000000000000000"   // R[14] = R[5]; 

// m67;   next: m1219, loop target: m67 (next offset: 677)
000672  1 0  "00110101101011110000000000000000"   // (R[15]) = load_1_B1 (R[13],DMb,DMb,DMb,PM); 
000673  1 0  "00110101110000100000000000000000"   // (R[2]) = load_1_B1 (R[14],DMb,DMb,DMb,PM); 
000674  1 0  "00000001101000100000100000110101"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[2],R[13],DMb,DMb,DMb,PM); 
000675  1 0  "00000001110011110000100000110101"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_1_B1 (R[15],R[14],DMb,DMb,DMb,PM); 
000676  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1219, jump target: m1260 (next offset: 679)
000677  1 0  "00100100000000000000000000010110"   // () = j_const_1_B1 (22); 
000678  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1189;   next: m788, jump target: m787 (next offset: 683)
000679  1 0  "01010000001000101111111111001100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000680  1 0  "00100000010000000000000000000010"   // () = nez_br_const_1_B1 (R[2],2); 
000681  1 0  "01010000001011111111111111001000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000682  1 0  "01010000001011101111111111000100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m788;   next: m1173 (next offset: 684)
000683  1 0  "01010100000011110000000000000001"   // (R[15]) = const_2_B2 (); 

// m787;   next: m1173 (next offset: 684)

// m1173;   next: m61 (next offset: 689)
000684  1 0  "10111101110000010000000000000000"   // (LS) = wr_res_reg_2_B1 (R[14]); 
000685  1 0  "01010000001000101111111111100100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000686  1 0  "10111101111000000000000000000000"   // (LC) = wr_res_reg_1_B1 (R[15]); 
000687  1 0  "10111100010000100000000000000000"   // (LE) = wr_res_reg_3_B1 (R[2]); 
000688  1 0  "01010100101011100000000000000000"   // R[14] = R[5]; 

// m61;   next: m1262, loop target: m61 (next offset: 694)
000689  1 0  "01010001101011110000000000000000"   // (R[15]) = load_2_B1 (R[13],DMb,DMb,DMb,PM); 
000690  1 0  "01010001110000100000000000000000"   // (R[2]) = load_2_B1 (R[14],DMb,DMb,DMb,PM); 
000691  1 0  "00000001101000100010000000110111"   // (R[13],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[2],R[13],DMb,DMb,DMb,PM); 
000692  1 0  "00000001110011110010000000110111"   // (R[14],DMb,DMb,DMb,PM) = store__pl_const_2_B1 (R[15],R[14],DMb,DMb,DMb,PM); 
000693  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m1262;   next: m1220 (next offset: 694)

// m1220, jump target: m1260 (next offset: 696)
000694  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000695  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m52;   next: m1260 (next offset: 700)
000696  1 0  "01010001101011100000000000000000"   // (R[14]) = load_2_B1 (R[13],DMb,DMb,DMb,PM); 
000697  1 0  "01010000101011110000000000000000"   // (R[15]) = load_2_B1 (R[5],DMb,DMb,DMb,PM); 
000698  1 0  "10101001101011110000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[15],R[13],DMb,DMb,DMb,PM); 
000699  1 0  "10101000101011100000000000000000"   // (DMb,DMb,DMb,PM) = store_1_B1 (R[14],R[5],DMb,DMb,DMb,PM); 

// m1260;   next: m2 (next offset: 700)

// m2;   next: m72 (next offset: 700)

// m72;   next: m76, jump target: m85 (next offset: 704)
000700  1 0  "00000000101010000110100000010001"   // (R[13]) = _le_2_B1 (R[5],R[8]); 
000701  1 0  "00100001101000000000000000010001"   // () = nez_br_const_1_B1 (R[13],17); 
000702  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000703  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m76;   next: m77 (next offset: 709)
000704  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000705  1 0  "10101000001001001111111110110100"   // (__spill_DMw[-76]) = stack_store_bndl_B3 (R[4],SP,-76); 
000706  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000707  1 0  "10101000001001011111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[5],SP,-72); 
000708  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m77 subroutine call;   next: m78 (next offset: 709)

// m78;   next: m85, jump target: m49 (next offset: 720)
000709  1 0  "00000000011000000110100000001110"   // (R[13]) = _gt_const_1_B2 (R[3]); 
000710  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000711  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000712  1 0  "01010000001001011111111110111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000713  1 0  "01010000001011001111111111010000"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000714  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000715  1 0  "01010000001010011111111111110100"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000716  1 0  "01010000001010111111111111100000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000717  1 0  "00100001101000001111111111000010"   // () = nez_br_const_1_B1 (R[13],-62); 
000718  1 0  "01010000001001001111111110110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-76],SP,-76); 
000719  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m85;   next: m3 (next offset: 725)
000720  1 0  "01010000001001001111111110111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000721  1 0  "01010000001001011111111111000000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000722  1 0  "00000000101001100010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[6]); 
000723  1 0  "00000000100001100010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[6]); 
000724  1 0  "01010000001011101111111111010100"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m3;   next: m86 (next offset: 725)

// m86;   next: m1248, jump target: m83 (next offset: 729)
000725  1 0  "00000000101011100110100000010100"   // (R[13]) = _lt_2_B1 (R[5],R[14]); 
000726  1 0  "00100001101000001111111110110110"   // () = nez_br_const_1_B1 (R[13],-74); 
000727  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000728  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m1248;   next: m412 (next offset: 730)
000729  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m412 (next offset: /)
000730  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000731  1 0  "00001000001000011111111110001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-120,SP,SP); 
000732  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

