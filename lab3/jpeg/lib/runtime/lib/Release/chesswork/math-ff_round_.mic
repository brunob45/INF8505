
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_round_ tlx


// m143;   next: m36, jump target: m7 (next offset: 8)
000000  1 0  "01001000000001110111111111110000"   // (R[7]) = const_6_B1 (); 
000001  1 0  "00000000100001110011100000000011"   // (R[7]) = _ad_2_B1 (R[4],R[7]); 
000002  1 0  "10011000111001110000000000010100"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000003  1 0  "00001000111001101111110000000001"   // (R[6],MC) = _pl_const_3_B1 (R[7]); 
000004  1 0  "10001100110001110000000000010100"   // (R[7]) = _lt_const_2_B1 (R[6]); 
000005  1 0  "00100000111000000000000000101110"   // () = nez_br_const_1_B1 (R[7],46); 
000006  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (12,SP,SP); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m36;   next: m74, jump target: m40 (next offset: 12)
000008  1 0  "01110100110000110000000000110011"   // (R[3]) = _gt_const_1_B1 (R[6]); 
000009  1 0  "00100000011000000000000000011001"   // () = nez_br_const_1_B1 (R[3],25); 
000010  1 0  "00001000000001111111111111111111"   // (R[7]) = const_8_B1 (); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m74;   next: m54, jump target: m55 (next offset: 18)
000012  1 0  "00001000110000111111111111101100"   // (R[3],MC) = _pl_const_2_B1 (R[6]); 
000013  1 0  "00000000111000110011000000010111"   // (R[6]) = _rs_1_B1 (R[7],R[3]); 
000014  1 0  "00000000101001100100000000000011"   // (R[8]) = _ad_1_B1 (R[5],R[6]); 
000015  1 0  "00100001000000000000000000000101"   // () = nez_br_const_2_B1 (R[8],5); 
000016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m54 (next offset: 22)
000018  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000019  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000020  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000021  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m55;   next: m57 (next offset: 22)

// m57;   next: m60, jump target: m61 (next offset: 31)
000022  1 0  "01010100000010000000000000011111"   // (R[8]) = const_2_B2 (); 
000023  1 0  "00000001000000110001100000011000"   // (R[3],MC) = _mi_1_B1 (R[8],R[3]); 
000024  1 0  "01010100000010000000000000000001"   // (R[8]) = const_1_B2 (); 
000025  1 0  "00000001000000110001100000010010"   // (R[3]) = _ls_1_B1 (R[8],R[3]); 
000026  1 0  "00000000011001010001100000000001"   // (R[3],) = _pl_1_B1 (R[5],R[3]); 
000027  1 0  "00000000011001010010100000001101"   // (R[5]) = _ge_1_B1 (R[3],R[5]); 
000028  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m60;   next: m110 (next offset: 32)
000031  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 

// m61;   next: m110 (next offset: 32)

// m110, jump target: m68 (next offset: 36)
000032  1 0  "00000000110001110010100000011010"   // (R[5]) = _er_1_B1 (R[6],R[7]); 
000033  1 0  "00000000011001010010100000000011"   // (R[5]) = _ad_1_B1 (R[3],R[5]); 
000034  1 0  "00100100000000000000000000110010"   // () = j_const_1_B1 (50); 
000035  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 

// m40;   next: m150, jump target: m44 (next offset: 41)
000036  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000037  1 0  "10010100110001010000010000000000"   // (R[5]) = _ne_const_1_B1 (R[6]); 
000038  1 0  "00100000101000000000000000001010"   // () = nez_br_const_1_B1 (R[5],10); 
000039  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m150;   next: m151 (next offset: 46)
000041  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 
000042  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 
000043  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000044  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000045  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 

// m151 subroutine call;   next: m170 (next offset: 46)

// m170;   next: m47 (next offset: 50)
000046  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000047  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000048  1 0  "01010000001000101111111111110100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000049  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 

// m44;   next: m47 (next offset: 50)

// m47 (next offset: 53)
000050  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000051  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000052  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m7;   next: m80, jump target: m11 (next offset: 57)
000053  1 0  "00000000110000000011100000010011"   // (R[7]) = _lt_const_1_B2 (R[6]); 
000054  1 0  "00100000111000000000000000010100"   // () = nez_br_const_1_B1 (R[7],20); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m80;   next: m30, jump target: m31 (next offset: 65)
000057  1 0  "01001000000001110000000000001111"   // (R[7]) = lhi_const_1_B1 (15); 
000058  1 0  "01010100111001111111111111111111"   // (R[7]) = w32_const_bor_1_B1 (R[7],65535); 
000059  1 0  "00000000111001100011100000010111"   // (R[7]) = _rs_1_B1 (R[7],R[6]); 
000060  1 0  "00000000100001110001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[7]); 
000061  1 0  "00000000011001010001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[5]); 
000062  1 0  "00100000011000000000000000000101"   // () = nez_br_const_2_B1 (R[3],5); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30 (next offset: 69)
000065  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000066  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000067  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000068  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m31;   next: m107 (next offset: 69)

// m107, jump target: m172 (next offset: 76)
000069  1 0  "01001000000001010000000000001000"   // (R[5]) = const_3_B1 (); 
000070  1 0  "00000000101001100010100000010111"   // (R[5]) = _rs_2_B1 (R[5],R[6]); 
000071  1 0  "00001000000001101111111111111111"   // (R[6]) = const_8_B1 (); 
000072  1 0  "00000000110001110011100000011010"   // (R[7]) = _er_1_B1 (R[7],R[6]); 
000073  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[5]); 
000074  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000075  1 0  "00000000100001110010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[7]); 

// m11;   next: m14, jump target: m15 (next offset: 82)
000076  1 0  "01001000000001011000000000000000"   // (R[5]) = const_5_B1 (); 
000077  1 0  "00000000100001010010000000000011"   // (R[4]) = _ad_2_B1 (R[4],R[5]); 
000078  1 0  "10010100110001011111111111111111"   // (R[5]) = _ne_const_2_B1 (R[6]); 
000079  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000080  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000081  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m14;   next: m172 (next offset: 84)
000082  1 0  "01001000000001010011111111110000"   // (R[5]) = const_4_B1 (); 
000083  1 0  "00000000100001010010000000001010"   // (R[4]) = _or_2_B1 (R[4],R[5]); 

// m15;   next: m172 (next offset: 84)

// m172;   next: m68 (next offset: 85)
000084  1 0  "10101000001000001111111111110000"   // (dmw_wr) = const_7_B5 (); (__spill_DMw[-16]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-16); 

// m68 (next offset: /)
000085  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000086  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000087  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

