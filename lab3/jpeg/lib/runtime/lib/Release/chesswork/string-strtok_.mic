
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:23 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strtok_ tlx


// m174;   next: m178, jump target: m2 (next offset: 4)
000000  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000001  1 0  "00100000100000000000000000010011"   // () = nez_br_const_3_B1 (R[4],19); 
000002  1 0  "01010100011001100000000000000000"   // (R[6]) = w32_const_bor_1_B1 (R[3],0); 
000003  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m178;   next: m48, jump target: m16 (next offset: 8)
000004  1 0  "01010000110001000000000000000000"   // (R[4]) = load_2_B1 (R[6],DMb_stat); 
000005  1 0  "00010100100000000000000000110010"   // () = eqz_br_const_1_B1 (R[4],50); 
000006  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m48, jump target: m2 (next offset: 10)
000008  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000009  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m229;   next: m29 (next offset: 11)
000010  1 0  "01010100101010000000000000000000"   // R[8] = R[5]; 

// m29;   next: m34, jump target: m1 (next offset: 16)
000011  1 0  "00000001000001110000100000110000"   // (R[7],R[8]) = load__pl_const_1_B1 (R[8],DMb); 
000012  1 0  "00000000011001110100100000001011"   // (R[9]) = _eq_1_B1 (R[3],R[7]); 
000013  1 0  "00100001001000000000000000000100"   // () = nez_br_const_2_B1 (R[9],4); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m34;   next: m153 (next offset: 16)

// m153;   next: m230, jump target: m29 (next offset: 19)
000016  1 0  "00100000111000001111111111111001"   // () = nez_br_const_1_B1 (R[7],-7); 
000017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m230;   next: m1 (next offset: 19)

// m1;   next: m182 (next offset: 19)

// m182;   next: m43, jump target: m3 (next offset: 22)
000019  1 0  "00010100111000000000000000000110"   // () = br_eqz_const_1_B1 (R[7],6); 
000020  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_2_B1 (R[4]); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m43;   next: m231 (next offset: 22)

// m231;   next: m2 (next offset: 22)

// m2;   next: m157 (next offset: 22)

// m157;   next: m123, jump target: m229 (next offset: 26)
000022  1 0  "00110100100000110000000000000000"   // (R[3]) = load_1_B1 (R[4],DMb); 
000023  1 0  "00100000011000001111111111110001"   // () = nez_br_const_1_B1 (R[3],-15); 
000024  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m123;   next: m3 (next offset: 27)
000026  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_2_B1 (R[4]); 

// m3;   next: m160 (next offset: 27)

// m160;   next: m55, jump target: m53 (next offset: 30)
000027  1 0  "00010100011000000000000000011001"   // () = br_eqz_const_1_B1 (R[3],25); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m55;   next: m165 (next offset: 31)
000030  1 0  "00001000100000111111111111111111"   // (R[3],MC) = _pl_const_1_B1 (R[4]); 

// m165;   next: m66 (next offset: 34)
000031  1 0  "01010100100001110000000000000000"   // R[7] = R[4]; 
000032  1 0  "01010100101010010000000000000000"   // R[9] = R[5]; 
000033  1 0  "00000000100010000000100000110000"   // (R[8],R[4]) = load__pl_const_1_B1 (R[4],DMb); 

// m66;   next: m222, jump target: m78 (next offset: 39)
000034  1 0  "00000001001010100000100000110000"   // (R[10],R[9]) = load__pl_const_1_B1 (R[9],DMb); 
000035  1 0  "00000001000010100101100000010101"   // (R[11]) = _ne_1_B1 (R[8],R[10]); 
000036  1 0  "00100001011000000000000000001011"   // () = nez_br_const_2_B1 (R[11],11); 
000037  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m222;   next: m74, jump target: m73 (next offset: 42)
000039  1 0  "00010101000000000000000000000101"   // () = br_eqz_const_1_B1 (R[8],5); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m74 (next offset: 46)
000042  1 0  "00000000111000000000100000110101"   // (R[7],DMb) = store_const__pl_const_1_B1 (R[7],DMb); 
000043  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000044  1 0  "10101000110001110000000000000000"   // (DMb_stat) = store_1_B1 (R[7],R[6],DMb_stat); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m73 (next offset: 49)
000046  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000047  1 0  "10101000110000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[6],DMb_stat); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m78;   next: m168 (next offset: 49)

// m168;   next: m225, jump target: m66 (next offset: 52)
000049  1 0  "00100001010000001111111111101111"   // () = nez_br_const_1_B1 (R[10],-17); 
000050  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m225, jump target: m165 (next offset: 54)
000052  1 0  "00100111111111111111111111101010"   // () = j_const_1_B1 (-22); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m53 (next offset: 57)
000054  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000055  1 0  "10101000110000000000000000000000"   // (DMb_stat) = store_const_1_B1 (R[6],DMb_stat); 
000056  1 0  "01001000000000110000000000000000"   // (R[3]) = const_1_B3 (); 

// m16 (next offset: /)
000057  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000058  1 0  "01001000000000110000000000000000"   // (R[3]) = const_1_B3 (); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

