
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:35 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_kernel_sin_ tlx


// m70;   next: m75, jump target: m15 (next offset: 13)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "00001000001000010000000000110100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (52,SP,SP); 
000002  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 
000004  1 0  "01001000000010010011111001000000"   // (R[9]) = const_3_B1 (); 
000005  1 0  "10101000001001011111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[5],SP,-56); 
000006  1 0  "10101000001001001111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[4],SP,-60); 
000007  1 0  "00000000011010010001100000001100"   // (R[3]) = _ge_1_B1 (R[3],R[9]); 
000008  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000009  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 
000010  1 0  "00100000011000000000000000001010"   // () = nez_br_const_2_B1 (R[3],10); 
000011  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000012  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m75;   next: m76 (next offset: 15)
000013  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m76 subroutine call;   next: m73 (next offset: 15)

// m73;   next: m12, jump target: m13 (next offset: 18)
000015  1 0  "00100000011000000000000000000101"   // () = nez_br_const_1_B1 (R[3],5); 
000016  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000017  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m12 (next offset: 22)
000018  1 0  "01010000001001011111111111101000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000019  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000020  1 0  "00001000001000011111111111001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-52,SP,SP); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m13;   next: m269 (next offset: 22)

// m269;   next: m90 (next offset: 22)

// m15;   next: m90 (next offset: 22)

// m90;   next: m91 (next offset: 26)
000022  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000023  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000024  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000025  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m91 subroutine call;   next: m100 (next offset: 26)

// m100;   next: m101 (next offset: 33)
000026  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000027  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000028  1 0  "01010000001001101111111111000100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000029  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000030  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 
000031  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000032  1 0  "01010000001001111111111111001000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m101 subroutine call;   next: m105 (next offset: 33)

// m105;   next: m106 (next offset: 44)
000033  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000034  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000035  1 0  "01001000000001100011110111100101"   // (R[6]) = lhi_const_1_B1 (15845); 
000036  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000037  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000038  1 0  "10101000001010001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[8],SP,-36); 
000039  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000040  1 0  "01010100110001101101100100111010"   // (R[6]) = w32_const_bor_1_B1 (R[6],55610); 
000041  1 0  "01001000000000110101101011001111"   // (R[3]) = lhi_const_1_B1 (23247); 
000042  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000043  1 0  "01010100011001111101010101111100"   // (R[7]) = w32_const_bor_1_B1 (R[3],54652); 

// m106 subroutine call;   next: m115 (next offset: 44)

// m115;   next: m116 (next offset: 51)
000044  1 0  "01001000000001011000101000101011"   // (R[5]) = lhi_const_1_B1 (-30165); 
000045  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000046  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000047  1 0  "01001000000001001011111001011010"   // (R[4]) = lhi_const_1_B1 (-16806); 
000048  1 0  "01010100101001011001110011101011"   // (R[5]) = w32_const_bor_1_B1 (R[5],40171); 
000049  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000050  1 0  "01010100100001001110010111100110"   // (R[4]) = w32_const_bor_1_B1 (R[4],58854); 

// m116 subroutine call;   next: m120 (next offset: 51)

// m120;   next: m121 (next offset: 56)
000051  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000052  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000053  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000054  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000055  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m121 subroutine call;   next: m130 (next offset: 56)

// m130;   next: m131 (next offset: 63)
000056  1 0  "01001000000001010101011110110001"   // (R[5]) = lhi_const_1_B1 (22449); 
000057  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000058  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000059  1 0  "01001000000001000011111011000111"   // (R[4]) = lhi_const_1_B1 (16071); 
000060  1 0  "01010100101001011111111001111101"   // (R[5]) = w32_const_bor_1_B1 (R[5],65149); 
000061  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000062  1 0  "01010100100001000001110111100011"   // (R[4]) = w32_const_bor_1_B1 (R[4],7651); 

// m131 subroutine call;   next: m135 (next offset: 63)

// m135;   next: m136 (next offset: 68)
000063  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000064  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000065  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000066  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000067  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m136 subroutine call;   next: m145 (next offset: 68)

// m145;   next: m146 (next offset: 75)
000068  1 0  "01001000000001010001100111000001"   // (R[5]) = lhi_const_1_B1 (6593); 
000069  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000070  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000071  1 0  "01001000000001001011111100101010"   // (R[4]) = lhi_const_1_B1 (-16598); 
000072  1 0  "01010100101001010110000111010101"   // (R[5]) = w32_const_bor_1_B1 (R[5],25045); 
000073  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000074  1 0  "01010100100001000000000110100000"   // (R[4]) = w32_const_bor_1_B1 (R[4],416); 

// m146 subroutine call;   next: m150 (next offset: 75)

// m150;   next: m151 (next offset: 80)
000075  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000076  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000077  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000078  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000079  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m151 subroutine call;   next: m160 (next offset: 80)

// m160;   next: m161 (next offset: 87)
000080  1 0  "01001000000001010001000100010000"   // (R[5]) = lhi_const_1_B1 (4368); 
000081  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000082  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000083  1 0  "01001000000001000011111110000001"   // (R[4]) = lhi_const_1_B1 (16257); 
000084  1 0  "01010100101001011111100010100110"   // (R[5]) = w32_const_bor_1_B1 (R[5],63654); 
000085  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000086  1 0  "01010100100001000001000100010001"   // (R[4]) = w32_const_bor_1_B1 (R[4],4369); 

// m161 subroutine call;   next: m88 (next offset: 87)

// m88;   next: m211, jump target: m171 (next offset: 99)
000087  1 0  "01001000000001011011111111000101"   // (R[5]) = lhi_const_1_B1 (-16443); 
000088  1 0  "01001000000001000101010101010101"   // (R[4]) = lhi_const_1_B1 (21845); 
000089  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000090  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000091  1 0  "01010100101010000101010101010101"   // (R[8]) = w32_const_bor_1_B1 (R[5],21845); 
000092  1 0  "01010100100001000101010101001001"   // (R[4]) = w32_const_bor_1_B1 (R[4],21833); 
000093  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000094  1 0  "10101000001001001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[4],SP,-44); 
000095  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000096  1 0  "00010100110000000000000000110100"   // () = eqz_br_const_1_B1 (R[6],52); 
000097  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000098  1 0  "10101000001001011111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[5],SP,-48); 

// m211;   next: m212 (next offset: 104)
000099  1 0  "01001000000001000011111111100000"   // (R[4]) = const_1_B1 (); 
000100  1 0  "01001000000001010000000000000000"   // (R[5]) = const_2_B3 (); 
000101  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000102  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000103  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m212 subroutine call;   next: m221 (next offset: 104)

// m221;   next: m222 (next offset: 113)
000104  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000105  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000106  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000107  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000108  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000109  1 0  "10101000001010001111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[8],SP,-48); 
000110  1 0  "10101000001000111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[3],SP,-52); 
000111  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000112  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m222 subroutine call;   next: m225 (next offset: 113)

// m225;   next: m226 (next offset: 118)
000113  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000114  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000115  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010000001001011111111111010000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m226 subroutine call;   next: m235 (next offset: 118)

// m235;   next: m236 (next offset: 123)
000118  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000119  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000120  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000121  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000122  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m236 subroutine call;   next: m240 (next offset: 123)

// m240;   next: m241 (next offset: 128)
000123  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000124  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000125  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000126  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000127  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m241 subroutine call;   next: m250 (next offset: 128)

// m250;   next: m251 (next offset: 137)
000128  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000129  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000130  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000131  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000132  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000133  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000134  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000135  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000136  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m251 subroutine call;   next: m254 (next offset: 137)

// m254;   next: m255 (next offset: 142)
000137  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000138  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000139  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000140  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000141  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m255 subroutine call;   next: m264 (next offset: 142)

// m264;   next: m265 (next offset: 147)
000142  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000143  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000144  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m265 subroutine call;   next: m270 (next offset: 147)

// m270, jump target: m24 (next offset: 150)
000147  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000148  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000149  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m171;   next: m172 (next offset: 156)
000150  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000151  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000152  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000153  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000154  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000155  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 

// m172 subroutine call;   next: m181 (next offset: 156)

// m181;   next: m182 (next offset: 161)
000156  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000157  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000158  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000159  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000160  1 0  "01010000001001011111111111010100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m182 subroutine call;   next: m186 (next offset: 161)

// m186;   next: m187 (next offset: 166)
000161  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000162  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000163  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000164  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000165  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m187 subroutine call;   next: m196 (next offset: 166)

// m196;   next: m197 (next offset: 171)
000166  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000167  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000168  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000169  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000170  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m197 subroutine call;   next: m271 (next offset: 171)

// m271;   next: m24 (next offset: 173)
000171  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000172  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m24 (next offset: /)
000173  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000174  1 0  "10101000001001111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[7],SP,-60); 
000175  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000176  1 0  "10101000001001011111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[5],SP,-56); 
000177  1 0  "00001000001000011111111111001100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-52,SP,SP); 

