
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:38 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_fmod_ tlx


// m422;   next: m26, jump target: m432 (next offset: 21)
000000  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000001  1 0  "01010100011010011111111111111111"   // (R[9]) = w32_const_bor_1_B1 (R[3],65535); 
000002  1 0  "00000000110010010101000000000011"   // (R[10]) = _ad_1_B1 (R[6],R[9]); 
000003  1 0  "00000000000001110100000000011000"   // (R[8],MC) = _mi_const_1_B1 (R[7]); 
000004  1 0  "01001000000000111000000000000000"   // (R[3]) = const_7_B1 (); 
000005  1 0  "00000000111010000100100000001010"   // (R[9]) = _or_1_B1 (R[7],R[8]); 
000006  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_2_B1 (R[4],R[3]); 
000007  1 0  "10011101001010110000000000011111"   // (R[11]) = _rs_const_1_B1 (R[9]); 
000008  1 0  "00000000011001000110100000011010"   // (R[13]) = _er_1_B1 (R[4],R[3]); 
000009  1 0  "01001000000010000111111111110000"   // (R[8]) = const_9_B1 (); 
000010  1 0  "00000000111010100110000000001010"   // (R[12]) = _or_1_B1 (R[10],R[7]); 
000011  1 0  "00000001101010000100100000001100"   // (R[9]) = _ge_2_B1 (R[13],R[8]); 
000012  1 0  "00000001100000000110000000001011"   // (R[12]) = eqz_1_B1 (R[12]); 
000013  1 0  "00000001010010110101100000001010"   // (R[11]) = _or_1_B1 (R[10],R[11]); 
000014  1 0  "00000001001011000100100000001010"   // (R[9]) = lor_1_B1 (R[12],R[9]); 
000015  1 0  "00000001011010000100000000001111"   // (R[8]) = _gt_2_B1 (R[11],R[8]); 
000016  1 0  "00001000001000010000000000001100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (12,SP,SP); 
000017  1 0  "00000001000010010100000000001010"   // (R[8]) = lor_1_B1 (R[9],R[8]); 
000018  1 0  "00100001000000000000000011101001"   // () = nez_br_const_1_B1 (R[8],233); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000020  1 0  "10101000001000101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[2],SP,-12); 

// m26;   next: m277, jump target: m53 (next offset: 32)
000021  1 0  "10011100011010000000000000011111"   // (R[8]) = _rs_const_1_B1 (R[3]); 
000022  1 0  "01001000000001100000000000000000"   // (R[6]) = lhi_const_1_B1 (0); 
000023  1 0  "10001001000010000000000000000011"   // (R[8]) = _ls_const_4_B1 (R[8]); 
000024  1 0  "01010100110001100000000000000000"   // (R[6]) = w32_const_bor_1_B1 (R[6],0); 
000025  1 0  "00000000110010000100100000000001"   // (R[9],) = _pl_2_B1 (R[6],R[8]); 
000026  1 0  "00000001101010100011000000001110"   // (R[6]) = _gt_1_B1 (R[13],R[10]); 
000027  1 0  "01010001001010000000000000000100"   // (R[8]) = load__pl_const_1_B1 (R[9],DMb); 
000028  1 0  "10101000001010001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[8],SP,-16); 
000029  1 0  "00100000110000000000000000010010"   // () = nez_br_const_1_B1 (R[6],18); 
000030  1 0  "01010001001010010000000000000000"   // (R[9]) = load_1_B1 (R[9],DMb); 
000031  1 0  "10101000001010011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[9],SP,-20); 

// m277;   next: m41, jump target: m42 (next offset: 38)
000032  1 0  "00000000101001110011000000010100"   // (R[6]) = _lt_2_B1 (R[5],R[7]); 
000033  1 0  "00000001101010100100000000010011"   // (R[8]) = _lt_3_B1 (R[13],R[10]); 
000034  1 0  "00000000110010000011000000001010"   // (R[6]) = lor_1_B1 (R[8],R[6]); 
000035  1 0  "00010100110000000000000000000101"   // () = eqz_br_const_2_B1 (R[6],5); 
000036  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000037  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m41 (next offset: 42)
000038  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000039  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000040  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000041  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

// m42;   next: m44 (next offset: 42)

// m44;   next: m50, jump target: m51 (next offset: 46)
000042  1 0  "00000000101001110010000000010101"   // (R[4]) = _ne_1_B1 (R[5],R[7]); 
000043  1 0  "00100000100000000000000000000100"   // () = nez_br_const_1_B1 (R[4],4); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m50 (next offset: 49)
000046  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000047  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m51;   next: m558 (next offset: 49)

// m558;   next: m55 (next offset: 49)

// m53;   next: m55 (next offset: 49)

// m55;   next: m91, jump target: m280 (next offset: 54)
000049  1 0  "01001000000001000000000000010000"   // (R[4]) = const_4_B1 (); 
000050  1 0  "00000001101001000011000000010011"   // (R[6]) = _lt_1_B1 (R[13],R[4]); 
000051  1 0  "00100000110000000000000000000100"   // () = nez_br_const_1_B1 (R[6],4); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m91, jump target: m93 (next offset: 57)
000054  1 0  "10011001101001100000000000010100"   // (R[6]) = _rs_const_2_B1 (R[13]); 
000055  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000056  1 0  "00001000110010111111110000000001"   // (R[11],MC) = _pl_const_4_B1 (R[6]); 

// m280;   next: m88, jump target: m74 (next offset: 60)
000057  1 0  "00010101101000000000000000001100"   // () = eqz_br_const_1_B1 (R[13],12); 
000058  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000059  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m88, jump target: m2 (next offset: 63)
000060  1 0  "00001000000010111111110000000010"   // (R[11]) = const_6_B1 (); 
000061  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000062  1 0  "10001001101001100000000000001011"   // (R[6]) = _ls_const_3_B1 (R[13]); 

// m84;   next: m2 (next offset: 65)
000063  1 0  "00001001011010111111111111111111"   // (R[11],MC) = _pl_const_3_B1 (R[11]); 
000064  1 0  "10001000110001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[6]); 

// m2;   next: m85 (next offset: 65)

// m85;   next: m560, jump target: m84 (next offset: 69)
000065  1 0  "00000000110000000100000000001110"   // (R[8]) = _gt_const_1_B2 (R[6]); 
000066  1 0  "00100001000000001111111111111011"   // () = nez_br_const_1_B1 (R[8],-5); 
000067  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000068  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m560, jump target: m93 (next offset: 71)
000069  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000070  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m74, jump target: m1 (next offset: 74)
000071  1 0  "01010100101001100000000000000000"   // R[6] = R[5]; 
000072  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000073  1 0  "00001000000010111111101111101101"   // (R[11]) = const_5_B1 (); 

// m70;   next: m1 (next offset: 76)
000074  1 0  "00001001011010111111111111111111"   // (R[11],MC) = _pl_const_3_B1 (R[11]); 
000075  1 0  "10001000110001100000000000000001"   // (R[6]) = _ls_const_2_B1 (R[6]); 

// m1;   next: m71 (next offset: 76)

// m71;   next: m574, jump target: m70 (next offset: 80)
000076  1 0  "00000000110000000100000000001110"   // (R[8]) = _gt_const_1_B2 (R[6]); 
000077  1 0  "00100001000000001111111111111011"   // () = nez_br_const_1_B1 (R[8],-5); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m574;   next: m93 (next offset: 80)

// m93;   next: m129, jump target: m283 (next offset: 84)
000080  1 0  "00000001010001000100000000010011"   // (R[8]) = _lt_1_B1 (R[10],R[4]); 
000081  1 0  "00100001000000000000000000000100"   // () = nez_br_const_1_B1 (R[8],4); 
000082  1 0  "00001000000001101111110000000010"   // (R[6]) = const_6_B1 (); 
000083  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m129, jump target: m131 (next offset: 87)
000084  1 0  "10011001010010000000000000010100"   // (R[8]) = _rs_const_2_B1 (R[10]); 
000085  1 0  "00100100000000000000000000011000"   // () = j_const_1_B1 (24); 
000086  1 0  "00001001000010001111110000000001"   // (R[8],MC) = _pl_const_4_B1 (R[8]); 

// m283;   next: m126, jump target: m112 (next offset: 90)
000087  1 0  "00010101010000000000000000001100"   // () = eqz_br_const_1_B1 (R[10],12); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m126, jump target: m4 (next offset: 93)
000090  1 0  "00001000000010001111110000000010"   // (R[8]) = const_6_B1 (); 
000091  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000092  1 0  "10001001010010010000000000001011"   // (R[9]) = _ls_const_3_B1 (R[10]); 

// m122;   next: m4 (next offset: 95)
000093  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_3_B1 (R[8]); 
000094  1 0  "10001001001010010000000000000001"   // (R[9]) = _ls_const_2_B1 (R[9]); 

// m4;   next: m123 (next offset: 95)

// m123;   next: m563, jump target: m122 (next offset: 99)
000095  1 0  "00000001001000000110000000001110"   // (R[12]) = _gt_const_1_B2 (R[9]); 
000096  1 0  "00100001100000001111111111111011"   // () = nez_br_const_1_B1 (R[12],-5); 
000097  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000098  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m563, jump target: m131 (next offset: 101)
000099  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000100  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m112, jump target: m3 (next offset: 104)
000101  1 0  "01010100111010010000000000000000"   // R[9] = R[7]; 
000102  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000103  1 0  "00001000000010001111101111101101"   // (R[8]) = const_5_B1 (); 

// m108;   next: m3 (next offset: 106)
000104  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_3_B1 (R[8]); 
000105  1 0  "10001001001010010000000000000001"   // (R[9]) = _ls_const_2_B1 (R[9]); 

// m3;   next: m109 (next offset: 106)

// m109;   next: m575, jump target: m108 (next offset: 110)
000106  1 0  "00000001001000000110000000001110"   // (R[12]) = _gt_const_1_B2 (R[9]); 
000107  1 0  "00100001100000001111111111111011"   // () = nez_br_const_1_B1 (R[12],-5); 
000108  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000109  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m575;   next: m131 (next offset: 110)

// m131;   next: m136, jump target: m134 (next offset: 114)
000110  1 0  "01101101011010011111110000000010"   // (R[9]) = _ge_const_1_B1 (R[11]); 
000111  1 0  "00100001001000000000000000010010"   // () = nez_br_const_1_B1 (R[9],18); 
000112  1 0  "01001000000011000000000000001111"   // (R[12]) = lhi_const_1_B1 (15); 
000113  1 0  "01010101100011001111111111111111"   // (R[12]) = w32_const_bor_1_B1 (R[12],65535); 

// m136;   next: m140, jump target: m139 (next offset: 119)
000114  1 0  "00000000110010110111000000011000"   // (R[14],MC) = _mi_1_B1 (R[6],R[11]); 
000115  1 0  "10000001110010010000000000011111"   // (R[9]) = _le_const_1_B1 (R[14]); 
000116  1 0  "00100001001000000000000000000110"   // () = nez_br_const_1_B1 (R[9],6); 
000117  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000118  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m140, jump target: m143 (next offset: 124)
000119  1 0  "00001001110010011111111111100000"   // (R[9],MC) = _pl_const_1_B1 (R[14]); 
000120  1 0  "00000000101010010110100000010010"   // (R[13]) = _ls_1_B1 (R[5],R[9]); 
000121  1 0  "01010100000010010000000000100000"   // (R[9]) = const_3_B2 (); 
000122  1 0  "00100100000000000000000000001011"   // () = j_const_1_B1 (11); 
000123  1 0  "01001000000001010000000000000000"   // (R[5]) = const_8_B3 (); 

// m139, jump target: m143 (next offset: 131)
000124  1 0  "01010100000010010000000000100000"   // (R[9]) = const_3_B2 (); 
000125  1 0  "00000001001011100111100000011000"   // (R[15],MC) = _mi_1_B1 (R[9],R[14]); 
000126  1 0  "00000000101011110111100000010111"   // (R[15]) = _rs_2_B1 (R[5],R[15]); 
000127  1 0  "00000000101011100010100000010010"   // (R[5]) = _ls_1_B1 (R[5],R[14]); 
000128  1 0  "00000001101011100110100000010010"   // (R[13]) = _ls_1_B1 (R[13],R[14]); 
000129  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000130  1 0  "00000001101011110110100000001010"   // (R[13]) = _or_1_B1 (R[13],R[15]); 

// m134;   next: m143 (next offset: 134)
000131  1 0  "00000001100011010100100000000011"   // (R[9]) = _ad_1_B1 (R[13],R[12]); 
000132  1 0  "00000000100010010110100000001010"   // (R[13]) = _or_2_B1 (R[9],R[4]); 
000133  1 0  "01010100000010010000000000100000"   // (R[9]) = const_3_B2 (); 

// m143;   next: m148, jump target: m146 (next offset: 138)
000134  1 0  "01101101000011101111110000000010"   // (R[14]) = _ge_const_1_B1 (R[8]); 
000135  1 0  "00100001110000000000000000010000"   // () = nez_br_const_1_B1 (R[14],16); 
000136  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000137  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m148;   next: m152, jump target: m151 (next offset: 143)
000138  1 0  "00000000110010000110000000011000"   // (R[12],MC) = _mi_1_B1 (R[6],R[8]); 
000139  1 0  "10000001100011100000000000011111"   // (R[14]) = _le_const_1_B1 (R[12]); 
000140  1 0  "00100001110000000000000000000101"   // () = nez_br_const_1_B1 (R[14],5); 
000141  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000142  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m152, jump target: m187 (next offset: 147)
000143  1 0  "00001001100010101111111111100000"   // (R[10],MC) = _pl_const_1_B1 (R[12]); 
000144  1 0  "00000000111010100101000000010010"   // (R[10]) = _ls_1_B1 (R[7],R[10]); 
000145  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000146  1 0  "01001000000001110000000000000000"   // (R[7]) = const_8_B3 (); 

// m151, jump target: m187 (next offset: 153)
000147  1 0  "00000001001011000111000000011000"   // (R[14],MC) = _mi_1_B1 (R[9],R[12]); 
000148  1 0  "00000000111011100111000000010111"   // (R[14]) = _rs_2_B1 (R[7],R[14]); 
000149  1 0  "00000000111011000011100000010010"   // (R[7]) = _ls_1_B1 (R[7],R[12]); 
000150  1 0  "00000001010011000101000000010010"   // (R[10]) = _ls_1_B1 (R[10],R[12]); 
000151  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000152  1 0  "00000001010011100101000000001010"   // (R[10]) = _or_1_B1 (R[10],R[14]); 

// m146;   next: m187 (next offset: 155)
000153  1 0  "00000001010011000101000000000011"   // (R[10]) = _ad_1_B1 (R[10],R[12]); 
000154  1 0  "00000000100010100101000000001010"   // (R[10]) = _or_2_B1 (R[10],R[4]); 

// m187, jump target: m5 (next offset: 157)
000155  1 0  "00100100000000000000000000011011"   // () = j_const_1_B1 (27); 
000156  1 0  "00000001011010000101100000011000"   // (R[11],MC) = _mi_1_B1 (R[11],R[8]); 

// m162;   next: m165, jump target: m166 (next offset: 161)
000157  1 0  "00000000101001110111100000001101"   // (R[15]) = _ge_1_B1 (R[5],R[7]); 
000158  1 0  "00100001111000000000000000000010"   // () = nez_br_const_1_B1 (R[15],2); 
000159  1 0  "00000000101001110110000000011000"   // (R[12],MC) = _mi_1_B1 (R[5],R[7]); 
000160  1 0  "00000001101010100111000000011000"   // (R[14],MC) = _mi_1_B1 (R[13],R[10]); 

// m165;   next: m168 (next offset: 162)
000161  1 0  "00001001110011101111111111111111"   // (R[14],MC) = _pl_const_3_B1 (R[14]); 

// m166;   next: m168 (next offset: 162)

// m168;   next: m287, jump target: m171 (next offset: 166)
000162  1 0  "00000001110000000111100000010011"   // (R[15]) = _lt_const_1_B2 (R[14]); 
000163  1 0  "00100001111000000000000000001101"   // () = nez_br_const_1_B1 (R[15],13); 
000164  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000165  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m287;   next: m179, jump target: m180 (next offset: 170)
000166  1 0  "00000001100011100010100000001010"   // (R[5]) = _or_1_B1 (R[14],R[12]); 
000167  1 0  "00100000101000000000000000000100"   // () = nez_br_const_2_B1 (R[5],4); 
000168  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000169  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m179 (next offset: 173)
000170  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000171  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 
000172  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m180;   next: m182 (next offset: 173)

// m182, jump target: m245 (next offset: 178)
000173  1 0  "10001001110011100000000000000001"   // (R[14]) = _ls_const_2_B1 (R[14]); 
000174  1 0  "10011101100011010000000000011111"   // (R[13]) = _rs_const_1_B1 (R[12]); 
000175  1 0  "10001001100001010000000000000001"   // (R[5]) = _ls_const_2_B1 (R[12]); 
000176  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000177  1 0  "00000001101011100110100000000001"   // (R[13],) = _pl_2_B1 (R[14],R[13]); 

// m171;   next: m245 (next offset: 182)
000178  1 0  "10011100101011000000000000011111"   // (R[12]) = _rs_const_1_B1 (R[5]); 
000179  1 0  "10001001101011010000000000000001"   // (R[13]) = _ls_const_2_B1 (R[13]); 
000180  1 0  "10001000101001010000000000000001"   // (R[5]) = _ls_const_2_B1 (R[5]); 
000181  1 0  "00000001100011010110100000000001"   // (R[13],) = _pl_2_B1 (R[13],R[12]); 

// m245;   next: m5 (next offset: 183)
000182  1 0  "00001001011010111111111111111111"   // (R[11],MC) = _pl_const_3_B1 (R[11]); 

// m5;   next: m290 (next offset: 183)

// m290;   next: m189, jump target: m162 (next offset: 186)
000183  1 0  "00100001011000001111111111100100"   // () = nez_br_const_2_B1 (R[11],-28); 
000184  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000185  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m189;   next: m192, jump target: m193 (next offset: 190)
000186  1 0  "00000000101001110101100000001101"   // (R[11]) = _ge_1_B1 (R[5],R[7]); 
000187  1 0  "00100001011000000000000000000010"   // () = nez_br_const_1_B1 (R[11],2); 
000188  1 0  "00000001101010100101000000011000"   // (R[10],MC) = _mi_1_B1 (R[13],R[10]); 
000189  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m192;   next: m195 (next offset: 191)
000190  1 0  "00001001010010101111111111111111"   // (R[10],MC) = _pl_const_3_B1 (R[10]); 

// m193;   next: m195 (next offset: 191)

// m195;   next: m198, jump target: m199 (next offset: 195)
000191  1 0  "00000001010000000101100000010011"   // (R[11]) = _lt_const_1_B2 (R[10]); 
000192  1 0  "00100001011000000000000000000011"   // () = nez_br_const_1_B1 (R[11],3); 
000193  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000194  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m198;   next: m294 (next offset: 197)
000195  1 0  "00000000101001110010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[7]); 
000196  1 0  "01010101010011010000000000000000"   // R[13] = R[10]; 

// m199;   next: m294 (next offset: 197)

// m294;   next: m217, jump target: m204 (next offset: 201)
000197  1 0  "00000000101011010011100000001010"   // (R[7]) = _or_1_B1 (R[13],R[5]); 
000198  1 0  "00010100111000000000000000110000"   // () = eqz_br_const_1_B1 (R[7],48); 
000199  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000200  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m217, jump target: m6 (next offset: 203)
000201  1 0  "00100100000000000000000000000110"   // () = j_const_1_B1 (6); 
000202  1 0  "01001000000001110000000000000000"   // (R[7]) = const_8_B3 (); 

// m213;   next: m6 (next offset: 208)
000203  1 0  "10011100101010100000000000011111"   // (R[10]) = _rs_const_1_B1 (R[5]); 
000204  1 0  "10001001101010110000000000000001"   // (R[11]) = _ls_const_2_B1 (R[13]); 
000205  1 0  "00001001000010001111111111111111"   // (R[8],MC) = _pl_const_3_B1 (R[8]); 
000206  1 0  "10001000101001010000000000000001"   // (R[5]) = _ls_const_2_B1 (R[5]); 
000207  1 0  "00000001010010110110100000000001"   // (R[13],) = _pl_2_B1 (R[11],R[10]); 

// m6;   next: m214 (next offset: 208)

// m214;   next: m219, jump target: m213 (next offset: 212)
000208  1 0  "00000001101001000101000000010011"   // (R[10]) = _lt_1_B1 (R[13],R[4]); 
000209  1 0  "00100001010000001111111111111000"   // () = nez_br_const_1_B1 (R[10],-8); 
000210  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000211  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m219;   next: m224, jump target: m456 (next offset: 216)
000212  1 0  "01101101000001001111110000000010"   // (R[4]) = _ge_const_1_B1 (R[8]); 
000213  1 0  "00100000100000000000000000011001"   // () = nez_br_const_1_B1 (R[4],25); 
000214  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000215  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m224;   next: m229, jump target: m227 (next offset: 221)
000216  1 0  "00000000110010000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[6],R[8]); 
000217  1 0  "10000000100010000000000000010100"   // (R[8]) = _le_const_2_B1 (R[4]); 
000218  1 0  "00100001000000000000000000001100"   // () = nez_br_const_1_B1 (R[8],12); 
000219  1 0  "00000001001001000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[9],R[4]); 
000220  1 0  "00000000101001000010100000010111"   // (R[5]) = _rs_2_B1 (R[5],R[4]); 

// m229;   next: m233, jump target: m232 (next offset: 225)
000221  1 0  "10000000100010000000000000011111"   // (R[8]) = _le_const_1_B1 (R[4]); 
000222  1 0  "00100001000000000000000000000100"   // () = nez_br_const_1_B1 (R[8],4); 
000223  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000224  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m233, jump target: m567 (next offset: 228)
000225  1 0  "00001000100001011111111111100000"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
000226  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000227  1 0  "00000001101001010010100000010110"   // (R[5]) = _rs_1_B1 (R[13],R[5]); 

// m232;   next: m567 (next offset: 230)
000228  1 0  "00000001101001100010000000010010"   // (R[4]) = _ls_1_B1 (R[13],R[6]); 
000229  1 0  "00000000100001010010100000001010"   // (R[5]) = _or_1_B1 (R[4],R[5]); 

// m567, jump target: m488 (next offset: 232)
000230  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000231  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m227;   next: m488 (next offset: 235)
000232  1 0  "00000001101001100011000000010010"   // (R[6]) = _ls_1_B1 (R[13],R[6]); 
000233  1 0  "00000000101001100010100000001010"   // (R[5]) = _or_1_B1 (R[5],R[6]); 
000234  1 0  "00000001101001000010000000010110"   // (R[4]) = _rs_1_B1 (R[13],R[4]); 

// m488;   next: m489 (next offset: 238)
000235  1 0  "01001000000001100011111111110000"   // (R[6]) = const_1_B1 (); 
000236  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000237  1 0  "00000000011001000010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[3]); 

// m489 subroutine call;   next: m568 (next offset: 238)

// m568, jump target: m570 (next offset: 240)
000238  1 0  "00100100000000000000000000001100"   // () = j_const_1_B1 (12); 
000239  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m456, jump target: m570 (next offset: 248)
000240  1 0  "00001001000001110000001111111111"   // (R[7],MC) = _pl_const_2_B1 (R[8]); 
000241  1 0  "01001000000001001111111111110000"   // (R[4]) = const_2_B1 (); 
000242  1 0  "00000000100011010010000000000001"   // (R[4],) = _pl_1_B1 (R[13],R[4]); 
000243  1 0  "10001000111001110000000000010100"   // (R[7]) = _ls_const_1_B1 (R[7]); 
000244  1 0  "00000000100001110011100000001010"   // (R[7]) = _or_1_B1 (R[4],R[7]); 
000245  1 0  "00000000011001110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[3]); 
000246  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000247  1 0  "10101000001001111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[7],SP,-8); 

// m204;   next: m570 (next offset: 251)
000248  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000249  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000250  1 0  "10101000001001111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[7],SP,-8); 

// m570, jump target: m241 (next offset: 253)
000251  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000252  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m432;   next: m433 (next offset: 255)
000253  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000254  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m433 subroutine call;   next: m442 (next offset: 255)

// m442;   next: m443 (next offset: 260)
000255  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000256  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000257  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000258  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000259  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m443 subroutine call;   next: m573 (next offset: 260)

// m573;   next: m241 (next offset: 262)
000260  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000261  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m241 (next offset: /)
000262  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000263  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000264  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000265  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000266  1 0  "00001000001000011111111111110100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-12,SP,SP); 

