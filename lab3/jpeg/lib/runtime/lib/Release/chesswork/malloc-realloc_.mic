
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:30 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i malloc-realloc_ tlx


// m48;   next: m57, jump target: m51 (next offset: 4)
000000  1 0  "00001000001000010000000000010000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (16,SP,SP); 
000001  1 0  "00100000100000000000000000000100"   // () = nez_br_const_2_B1 (R[4],4); 
000002  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000003  1 0  "10101000001001011111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[5],SP,-4); 

// m57;   next: m40 (next offset: 7)
000004  1 0  "01010100101001000000000000000000"   // R[4] = R[5]; 
000005  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000006  1 0  "00001000001000011111111111110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-16,SP,SP); 

// m40 subroutine call;   next: m58 (next offset: 7)

// m58 (next offset: 7)

// m51;   next: m11, jump target: m16 (next offset: 10)
000007  1 0  "00100000101000000000000000000111"   // () = nez_br_const_2_B1 (R[5],7); 
000008  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000009  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m11;   next: m12 (next offset: 12)
000010  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m12 subroutine call;   next: m15 (next offset: 12)

// m15 (next offset: 16)
000012  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000013  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000014  1 0  "01001000000000110000000000000000"   // (R[3]) = const_1_B3 (); 
000015  1 0  "00001000001000011111111111110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-16,SP,SP); 

// m16;   next: m18 (next offset: 16)

// m18;   next: m19 (next offset: 19)
000016  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000017  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000018  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m19 subroutine call;   next: m54 (next offset: 19)

// m54;   next: m24, jump target: m36 (next offset: 22)
000019  1 0  "00010100011000000000000000010001"   // () = eqz_br_const_1_B1 (R[3],17); 
000020  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000021  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m24;   next: m25 (next offset: 25)
000022  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000023  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000024  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m25 subroutine call;   next: m26 (next offset: 25)

// m26;   next: m30, jump target: m29 (next offset: 30)
000025  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000026  1 0  "00000000011001000010100000010100"   // (R[5]) = _lt_1_B1 (R[3],R[4]); 
000027  1 0  "00100000101000000000000000000010"   // () = nez_br_const_1_B1 (R[5],2); 
000028  1 0  "01010100011001100000000000000000"   // R[6] = R[3]; 
000029  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30;   next: m32 (next offset: 31)
000030  1 0  "01010100100001100000000000000000"   // R[6] = R[4]; 

// m29;   next: m32 (next offset: 31)

// m32;   next: m33 (next offset: 34)
000031  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000032  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000033  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m33 subroutine call;   next: m34 (next offset: 34)

// m34;   next: m35 (next offset: 36)
000034  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000035  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m35 subroutine call;   next: m60 (next offset: 36)

// m60, jump target: m43 (next offset: 38)
000036  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000037  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m36;   next: m43 (next offset: 39)
000038  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 

// m43 (next offset: /)
000039  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000040  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000041  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000042  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000043  1 0  "00001000001000011111111111110000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-16,SP,SP); 

