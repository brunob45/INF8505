
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:22 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i string-strcmp_ tlx

[
    0 : __sint_strcmp___P__cchar___P__cchar typ=iword bnd=e stl=PM
   19 : __extDMb typ=w08 bnd=b stl=DMb
   20 : __sp typ=w32 bnd=b stl=SP
   28 : __la typ=w32 bnd=p tref=w32__
   29 : __rt typ=w32 bnd=p tref=__sint__
   30 : s1 typ=w32 bnd=p tref=__P__cchar__
   31 : s2 typ=w32 bnd=p tref=__P__cchar__
   35 : c1 typ=__schar bnd=m lscp=10 tref=__cchar__
   37 : c2 typ=__schar bnd=m lscp=10 tref=__cchar__
   51 : __tmp typ=bool bnd=m
   57 : __tmp typ=bool bnd=m
   58 : __tmp typ=bool bnd=m
   59 : __tmp typ=__uchar bnd=m
   61 : __tmp typ=__uchar bnd=m
   78 : __shv_s1 typ=w32 bnd=m
   79 : __shv_s2 typ=w32 bnd=m
   91 : __true typ=bool val=1f bnd=m
   93 : __either typ=bool bnd=m
   94 : __trgt typ=int16 val=-7j bnd=m
   97 : __seff typ=any bnd=m
]
F__sint_strcmp___P__cchar___P__cchar {
    #37 off=0 nxt=50
    (__extDMb.18 var=19) source ()  <31>;
    (__sp.19 var=20) source ()  <32>;
    (__la.27 var=28 stl=R off=2) inp ()  <40>;
    (s1.31 var=30 stl=R off=4) inp ()  <44>;
    (s2.34 var=31 stl=R off=5) inp ()  <47>;
    (__trgt.330 var=94) const_inp ()  <409>;
    do {
        {
            (s2.377 var=31 stl=R off=5) entry (s2.378 s2.34)  <451>;
            (s1.382 var=30 stl=R off=4) entry (s1.383 s1.31)  <455>;
        } #9
        {
            #50 off=0 nxt=23 tgt=50
            <27> {
              (c1.88 var=35 stl=dmb_rd __shv_s1.308 var=78 stl=aguC) load__pl_const_1_B1 (s1.381 __extDMb.18)  <420>;
              (s1.381 var=30 stl=aguA) aguA_1_dr_move_R_1_w32 (s1.382)  <499>;
              (__shv_s1.385 var=78 stl=R off=4) R_1_dr_move_aguC_1_w32 (__shv_s1.308)  <500>;
              (c1.389 var=35 stl=R off=3) R_2_dr_move_dmb_rd_2___schar (c1.88)  <504>;
            } stp=0;
            <28> {
              (c2.93 var=37 stl=dmb_rd __shv_s2.309 var=79 stl=aguC) load__pl_const_1_B1 (s2.376 __extDMb.18)  <421>;
              (s2.376 var=31 stl=aguA) aguA_1_dr_move_R_1_w32 (s2.377)  <497>;
              (__shv_s2.380 var=79 stl=R off=5) R_1_dr_move_aguC_1_w32 (__shv_s2.309)  <498>;
              (c2.387 var=37 stl=R off=6) R_2_dr_move_dmb_rd_2___schar (c2.93)  <502>;
            } stp=1;
            <29> {
              (__tmp.96 var=51 stl=aluC) _ne_1_B1 (c1.388 c2.386)  <422>;
              (c2.386 var=37 stl=aluB) aluA_aluB_2_dr_move_R_2___schar_B1 (c2.387)  <501>;
              (c1.388 var=35 stl=aluA) aluA_aluB_2_dr_move_R_2___schar_B0 (c1.389)  <503>;
              (__tmp.392 var=51 stl=R off=7) R_2_dr_move_aluC_2_bool (__tmp.96)  <507>;
            } stp=2;
            <30> {
              (__tmp.312 var=57 stl=aluC) eqz_1_B1 (c1.390)  <423>;
              (c1.390 var=35 stl=aluA) aluA_2_dr_move_R_2___schar (c1.389)  <505>;
              (__tmp.394 var=57 stl=R off=8) R_2_dr_move_aluC_2_bool (__tmp.312)  <509>;
            } stp=3;
            <31> {
              (__tmp.316 var=58 stl=aluC) lor_1_B1 (__tmp.391 __tmp.393)  <424>;
              (__tmp.391 var=51 stl=aluA) aluA_aluB_2_dr_move_R_2_bool_B0 (__tmp.392)  <506>;
              (__tmp.393 var=57 stl=aluB) aluA_aluB_2_dr_move_R_2_bool_B1 (__tmp.394)  <508>;
              (__tmp.396 var=58 stl=R off=7) R_2_dr_move_aluC_2_bool (__tmp.316)  <511>;
            } stp=4;
            <32> {
              () eqz_br_const_1_B1 (__tmp.395 __trgt.330)  <425>;
              (__tmp.395 var=58 stl=eqA) eqA_2_dr_move_R_2_bool (__tmp.396)  <510>;
            } stp=5;
            <33> {
              () vd_nop_ID ()  <539>;
            } stp=6;
            <34> {
              () vd_nop_ID ()  <540>;
            } stp=7;
            if {
                {
                    () if_expr (__either.325)  <153>;
                    (__either.325 var=93) undefined ()  <403>;
                } #19
                {
                } #24 nxt=52
                {
                    () out (__rt.407)  <166>;
                    () sink (__sp.19)  <172>;
                    <23> {
                      (__tmp.138 var=59 stl=aluC) __uchar_1_B1 (c1.409)  <416>;
                      (c1.409 var=35 stl=aluA) aluA_sxW_2_dr_move_R_2___schar_B0 (c1.389)  <514>;
                      (__tmp.413 var=59 stl=R off=4) R_2_dr_move_aluC_lxC_2___uchar_B0 (__tmp.138)  <518>;
                    } stp=2;
                    <24> {
                      (__tmp.140 var=61 stl=aluC) __uchar_1_B1 (c2.408)  <417>;
                      (c2.408 var=37 stl=aluA) aluA_sxW_2_dr_move_R_2___schar_B0 (c2.387)  <513>;
                      (__tmp.411 var=61 stl=R off=5) R_2_dr_move_aluC_lxC_2___uchar_B0 (__tmp.140)  <516>;
                    } stp=0;
                    <25> {
                      (__rt.142 var=29 stl=aluC __seff.339 var=97 stl=aluM) _mi_1_B1 (__tmp.412 __tmp.410)  <418>;
                      (__rt.407 var=29 stl=R off=3) R_2_dr_move_aluC_2_w32 (__rt.142)  <512>;
                      (__tmp.410 var=61 stl=aluB) aluB_2_dr_move_R_2___uchar (__tmp.411)  <515>;
                      (__tmp.412 var=59 stl=aluA) aluA_2_dr_move_R_2___uchar (__tmp.413)  <517>;
                      (__seff.414 var=97 stl=MC off=0) MC_2_dr_move_aluM_2_any (__seff.339)  <519>;
                    } stp=3;
                    <26> {
                      () __rts_jr_1_B1 (__la.415)  <419>;
                      (__la.415 var=28 stl=trgt) trgt_2_dr_move_R_2_w32 (__la.27)  <520>;
                    } stp=1;
                } #23 off=8 nxt=-2
                {
                } #25
            } #18
            #52 tgt=50
            (__true.327 var=91) const ()  <406>;
        } #10
        {
            () while_expr (__true.327)  <229>;
            (s2.378 var=31 stl=R off=5 s2.379 var=31 stl=R off=5) exit (__shv_s2.380)  <452>;
            (s1.383 var=30 stl=R off=4 s1.384 var=30 stl=R off=4) exit (__shv_s1.385)  <456>;
        } #27
    } #8 rng=[1,2147483647]
    #35 nxt=-4
    () sink (__sp.19)  <360>;
} #0
0 : '../runtime/src/string.c';
----------
0 : (0,95:0,0);
8 : (0,97:4,2);
10 : (0,97:14,2);
18 : (0,100:1,12);
23 : (0,101:5,13);
24 : (0,100:1,16);
50 : (0,100:14,11);
----------
153 : (0,100:1,12);
229 : (0,97:4,21);
416 : (0,101:12,13);
417 : (0,101:32,13);
418 : (0,101:30,13);
419 : (0,101:5,13);
420 : (0,98:11,4) (0,98:14,0);
421 : (0,99:11,7) (0,99:14,0);
422 : (0,100:8,8);
423 : (0,100:20,10);
424 : (0,100:14,11);
425 : (0,100:1,12);

