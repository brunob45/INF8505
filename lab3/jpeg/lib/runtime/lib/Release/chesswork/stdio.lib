
// File generated by noodle version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:16 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I.. -I../isg -I../runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -itlx_chess.h +wlib/Release/chesswork ../runtime/src/stdio.c tlx

toolrelease _18R1;

// int remove(const char *)
F__sint_remove___P__cchar : user_defined, called {
    fnm : "remove" 'int remove(const char *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int rename(const char *, const char *)
F__sint_rename___P__cchar___P__cchar : user_defined, called {
    fnm : "rename" 'int rename(const char *, const char *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// FILE *tmpfile()
F__PFILE_tmpfile : user_defined, called {
    fnm : "tmpfile" 'FILE *tmpfile()'; 
    arg : ( w32:i w32:r );
    loc : ( R[2] R[3] );
    frm : ( l=68 );
    llv : 1 0 0 0 0 ;
}

// int mkstemp(char *)
F__sint_mkstemp___P__cchar : user_defined, called {
    fnm : "mkstemp" 'int mkstemp(char *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// FILE *fdopen(int, const char *)
F__PFILE_fdopen___sint___P__cchar : user_defined, called {
    fnm : "fdopen" 'FILE *fdopen(int, const char *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int close(int)
F__sint_close___sint : user_defined, called {
    fnm : "close" 'int close(int)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// FILE *fopen(const char *, const char *)
F__PFILE_fopen___P__cchar___P__cchar : user_defined, called {
    fnm : "fopen" 'FILE *fopen(const char *, const char *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 1 0 0 0 0 ;
}

// int fclose(FILE *)
F__sint_fclose___PFILE : user_defined, called {
    fnm : "fclose" 'int fclose(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fflush(FILE *)
F__sint_fflush___PFILE : user_defined, called {
    fnm : "fflush" 'int fflush(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// FILE *freopen(const char *, const char *, FILE *)
F__PFILE_freopen___P__cchar___P__cchar___PFILE : user_defined, called {
    fnm : "freopen" 'FILE *freopen(const char *, const char *, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 1 0 0 0 0 ;
}

// int vfprintf(FILE *, const char *, va_list)
F__sint_vfprintf___PFILE___P__cchar___Pvoid : user_defined, called {
    fnm : "vfprintf" 'int vfprintf(FILE *, const char *, va_list)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fprintf(FILE *, const char *, ...)
F__sint_fprintf___PFILE___P__cchar : user_defined, called {
    fnm : "fprintf" 'int fprintf(FILE *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int printf(const char *, ...)
F__sint_printf___P__cchar : user_defined, called {
    fnm : "printf" 'int printf(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}

// int vfscanf(FILE *, const char *, va_list)
F__sint_vfscanf___PFILE___P__cchar___Pvoid : user_defined, called {
    fnm : "vfscanf" 'int vfscanf(FILE *, const char *, va_list)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fscanf(FILE *, const char *, ...)
F__sint_fscanf___PFILE___P__cchar : user_defined, called {
    fnm : "fscanf" 'int fscanf(FILE *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int scanf(const char *, ...)
F__sint_scanf___P__cchar : user_defined, called {
    fnm : "scanf" 'int scanf(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}

// int sprintf(char *, const char *, ...)
F__sint_sprintf___P__cchar___P__cchar : user_defined, called {
    fnm : "sprintf" 'int sprintf(char *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int snprintf(char *, int, const char *, ...)
F__sint_snprintf___P__cchar___sint___P__cchar : user_defined, called {
    fnm : "snprintf" 'int snprintf(char *, int, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int vsprintf(char *, const char *, va_list)
F__sint_vsprintf___P__cchar___P__cchar___Pvoid : user_defined, called {
    fnm : "vsprintf" 'int vsprintf(char *, const char *, va_list)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int vsnprintf(char *, int, const char *, va_list)
F__sint_vsnprintf___P__cchar___sint___P__cchar___Pvoid : user_defined, called {
    fnm : "vsnprintf" 'int vsnprintf(char *, int, const char *, va_list)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int sscanf(const char *, const char *, ...)
F__sint_sscanf___P__cchar___P__cchar : user_defined, called {
    fnm : "sscanf" 'int sscanf(const char *, const char *, ...)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int vsscanf(const char *, const char *, va_list)
F__sint_vsscanf___P__cchar___P__cchar___Pvoid : user_defined, called {
    fnm : "vsscanf" 'int vsscanf(const char *, const char *, va_list)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fputc(int, FILE *)
F__sint_fputc___sint___PFILE : user_defined, called {
    fnm : "fputc" 'int fputc(int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fputs(const char *, FILE *)
F__sint_fputs___P__cchar___PFILE : user_defined, called {
    fnm : "fputs" 'int fputs(const char *, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fgetc(FILE *)
F__sint_fgetc___PFILE : user_defined, called {
    fnm : "fgetc" 'int fgetc(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// char *fgets(char *, int, FILE *)
F__P__cchar_fgets___P__cchar___sint___PFILE : user_defined, called {
    fnm : "fgets" 'char *fgets(char *, int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// char *gets(char *)
F__P__cchar_gets___P__cchar : user_defined, called {
    fnm : "gets" 'char *gets(char *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int ungetc(int, FILE *)
F__sint_ungetc___sint___PFILE : user_defined, called {
    fnm : "ungetc" 'int ungetc(int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fwrite(const void chess_storage(DMb) *, int, int, FILE *)
F__sint_fwrite___PDMbvoid___sint___sint___PFILE : user_defined, called {
    fnm : "fwrite" 'int fwrite(const void chess_storage(DMb) *, int, int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fread(void chess_storage(DMb) *, int, int, FILE *)
F__sint_fread___PDMbvoid___sint___sint___PFILE : user_defined, called {
    fnm : "fread" 'int fread(void chess_storage(DMb) *, int, int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fwrite_word(const void chess_storage(DMb) *, int, int, int, FILE *)
F__sint_fwrite_word___PDMbvoid___sint___sint___sint___PFILE : user_defined, called {
    fnm : "fwrite_word" 'int fwrite_word(const void chess_storage(DMb) *, int, int, int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] R[8] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fread_word(void chess_storage(DMb) *, int, int, int, FILE *)
F__sint_fread_word___PDMbvoid___sint___sint___sint___PFILE : user_defined, called {
    fnm : "fread_word" 'int fread_word(void chess_storage(DMb) *, int, int, int, FILE *)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] R[7] R[8] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int fseek(FILE *, long, int)
F__sint_fseek___PFILE___slong___sint : user_defined, called {
    fnm : "fseek" 'int fseek(FILE *, long, int)'; 
    arg : ( w32:i w32:r w32:i w32:i w32:i );
    loc : ( R[2] R[3] R[4] R[5] R[6] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// long ftell(FILE *)
F__slong_ftell___PFILE : user_defined, called {
    fnm : "ftell" 'long ftell(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int feof(FILE *)
F__sint_feof___PFILE : user_defined, called {
    fnm : "feof" 'int feof(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// int ferror(FILE *)
F__sint_ferror___PFILE : user_defined, called {
    fnm : "ferror" 'int ferror(FILE *)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// void clearerr(FILE *)
Fvoid_clearerr___PFILE : user_defined, called {
    fnm : "clearerr" 'void clearerr(FILE *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// void perror(const char *)
Fvoid_perror___P__cchar : user_defined, called {
    fnm : "perror" 'void perror(const char *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( l=68 );
    llv : 0 0 0 0 0 ;
}

// inline assembly void _ihosted_clib_io()
Fvoid__ihosted_clib_io : user_defined, assembly {
    fnm : "_ihosted_clib_io" 'inline assembly void _ihosted_clib_io()'; 
    flc : ( R[2] R[3] R[4] R[5] R[6] R[7] R[8] R[9] R[10] R[11] R[12] R[13] R[14] R[15] );
    llv : 0 0 0 0 0 ;
}

// void _hosted_clib_io(Hosted_clib_vars *)
F_hosted_clib_io : user_defined, called {
    fnm : "_hosted_clib_io" 'void _hosted_clib_io(Hosted_clib_vars *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( );
    llv : 0 0 0 0 0 ;
}

