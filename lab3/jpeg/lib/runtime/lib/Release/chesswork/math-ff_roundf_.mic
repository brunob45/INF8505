
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:34 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_roundf_ tlx


// m3;   next: m30, jump target: m7 (next offset: 8)
000000  1 0  "01001000000000110111111110000000"   // (R[3]) = const_5_B1 (); 
000001  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_2_B1 (R[4],R[3]); 
000002  1 0  "10011100011000110000000000010111"   // (R[3]) = _rs_const_1_B1 (R[3]); 
000003  1 0  "00001000011001011111111110000001"   // (R[5],MC) = _pl_const_1_B1 (R[3]); 
000004  1 0  "10001100101000110000000000010111"   // (R[3]) = _lt_const_2_B1 (R[5]); 
000005  1 0  "00100000011000000000000000001110"   // () = nez_br_const_1_B1 (R[3],14); 
000006  1 0  "00001000001000010000000000000100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (4,SP,SP); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m30;   next: m53, jump target: m37 (next offset: 12)
000008  1 0  "10010100101000110000000010000000"   // (R[3]) = _ne_const_1_B1 (R[5]); 
000009  1 0  "00100000011000000000000000001000"   // () = nez_br_const_1_B1 (R[3],8); 
000010  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m53;   next: m54 (next offset: 15)
000012  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000013  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000014  1 0  "01010100100001010000000000000000"   // R[5] = R[4]; 

// m54 subroutine call;   next: m36 (next offset: 15)

// m36 (next offset: 19)
000015  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000016  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000017  1 0  "00001000001000011111111111111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-4,SP,SP); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m37;   next: m59 (next offset: 19)

// m59, jump target: m41 (next offset: 21)
000019  1 0  "00100100000000000000000000011110"   // () = j_const_1_B1 (30); 
000020  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 

// m7;   next: m46, jump target: m11 (next offset: 25)
000021  1 0  "00000000101000000001100000010011"   // (R[3]) = _lt_const_1_B2 (R[5]); 
000022  1 0  "00100000011000000000000000010010"   // () = nez_br_const_1_B1 (R[3],18); 
000023  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000024  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m46;   next: m23, jump target: m24 (next offset: 32)
000025  1 0  "01001000000000110000000001111111"   // (R[3]) = lhi_const_1_B1 (127); 
000026  1 0  "01010100011000111111111111111111"   // (R[3]) = w32_const_bor_1_B1 (R[3],65535); 
000027  1 0  "00000000011001010001100000010111"   // (R[3]) = _rs_2_B1 (R[3],R[5]); 
000028  1 0  "00000000011001000011000000000011"   // (R[6]) = _ad_1_B1 (R[4],R[3]); 
000029  1 0  "00100000110000000000000000000100"   // () = nez_br_const_2_B1 (R[6],4); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23 (next offset: 35)
000032  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000033  1 0  "01010100100000110000000000000000"   // R[3] = R[4]; 
000034  1 0  "00001000001000011111111111111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-4,SP,SP); 

// m24;   next: m50 (next offset: 35)

// m50, jump target: m41 (next offset: 42)
000035  1 0  "01001000000001100000000001000000"   // (R[6]) = const_1_B1 (); 
000036  1 0  "00000000110001010010100000010111"   // (R[5]) = _rs_1_B1 (R[6],R[5]); 
000037  1 0  "00001000000001101111111111111111"   // (R[6]) = const_4_B1 (); 
000038  1 0  "00000000011001100001100000011010"   // (R[3]) = _er_1_B1 (R[3],R[6]); 
000039  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[5]); 
000040  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000041  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[3]); 

// m11;   next: m14, jump target: m15 (next offset: 48)
000042  1 0  "01001000000000111000000000000000"   // (R[3]) = const_3_B1 (); 
000043  1 0  "00000000011001000001100000000011"   // (R[3]) = _ad_2_B1 (R[4],R[3]); 
000044  1 0  "10010100101001001111111111111111"   // (R[4]) = _ne_const_2_B1 (R[5]); 
000045  1 0  "00100000100000000000000000000011"   // () = nez_br_const_1_B1 (R[4],3); 
000046  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m14;   next: m41 (next offset: 50)
000048  1 0  "01001000000001000011111110000000"   // (R[4]) = const_2_B1 (); 
000049  1 0  "00000000011001000001100000001010"   // (R[3]) = _or_1_B1 (R[3],R[4]); 

// m15;   next: m41 (next offset: 50)

// m41 (next offset: /)
000050  1 0  "00110000010000000000000000000000"   // () = __rts_jr_1_B1 (R[2]); 
000051  1 0  "00001000001000011111111111111100"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-4,SP,SP); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

