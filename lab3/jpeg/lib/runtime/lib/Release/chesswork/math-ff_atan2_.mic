
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:41 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_atan2_ tlx


// m410;   next: m260, jump target: m419 (next offset: 22)
000000  1 0  "00001000001000010000000000100000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (32,SP,SP); 
000001  1 0  "01001000000000110111111111111111"   // (R[3]) = lhi_const_1_B1 (32767); 
000002  1 0  "01010100011010001111111111111111"   // (R[8]) = w32_const_bor_1_B1 (R[3],65535); 
000003  1 0  "00000000000001110101000000011000"   // (R[10],MC) = _mi_const_1_B1 (R[7]); 
000004  1 0  "00000000000001010100100000011000"   // (R[9],MC) = _mi_const_1_B1 (R[5]); 
000005  1 0  "00000000110010000001100000000011"   // (R[3]) = _ad_1_B1 (R[6],R[8]); 
000006  1 0  "00000000111010100101000000001010"   // (R[10]) = _or_1_B1 (R[7],R[10]); 
000007  1 0  "00000000101010010100100000001010"   // (R[9]) = _or_1_B1 (R[5],R[9]); 
000008  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000009  1 0  "00000000100010000100000000000011"   // (R[8]) = _ad_1_B1 (R[4],R[8]); 
000010  1 0  "10011101010010100000000000011111"   // (R[10]) = _rs_const_4_B1 (R[10]); 
000011  1 0  "10011101001010010000000000011111"   // (R[9]) = _rs_const_4_B1 (R[9]); 
000012  1 0  "01001000000010110111111111110000"   // (R[11]) = const_4_B1 (); 
000013  1 0  "00000000011010100101000000001010"   // (R[10]) = _or_1_B1 (R[3],R[10]); 
000014  1 0  "00000001000010010100100000001010"   // (R[9]) = _or_1_B1 (R[8],R[9]); 
000015  1 0  "00000001010010110101000000001111"   // (R[10]) = _gt_1_B1 (R[10],R[11]); 
000016  1 0  "00000001001010110100100000001111"   // (R[9]) = _gt_1_B1 (R[9],R[11]); 
000017  1 0  "00000001001010100100100000001010"   // (R[9]) = lor_1_B1 (R[10],R[9]); 
000018  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 
000019  1 0  "00100001001000000000000011101010"   // () = br_nez_const_1_B1 (R[9],234); 
000020  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000021  1 0  "10101000001001101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[6],SP,-16); 

// m260;   next: m272, jump target: m18 (next offset: 28)
000022  1 0  "01001000000010011100000000010000"   // (R[9]) = const_2_B1 (); 
000023  1 0  "00000000110010010101000000000001"   // (R[10],) = _pl_1_B1 (R[6],R[9]); 
000024  1 0  "00000000111010100101000000001010"   // (R[10]) = _or_1_B1 (R[10],R[7]); 
000025  1 0  "00010101010000000000000011011110"   // () = br_eqz_const_1_B1 (R[10],222); 
000026  1 0  "01001000000010010101010001000100"   // (R[9]) = lhi_const_1_B1 (21572); 
000027  1 0  "01010101001011010010110100011000"   // (R[13]) = w32_const_bor_1_B1 (R[9],11544); 

// m272;   next: m278, jump target: m57 (next offset: 46)
000028  1 0  "10011000100010010000000000011111"   // (R[9]) = _rs_const_2_B1 (R[4]); 
000029  1 0  "10011000110001100000000000011110"   // (R[6]) = _rs_const_3_B1 (R[6]); 
000030  1 0  "00010001001010010000000000000001"   // (R[9]) = _ad_const_1_B1 (R[9]); 
000031  1 0  "00010000110001100000000000000010"   // (R[6]) = _ad_const_2_B1 (R[6]); 
000032  1 0  "01001000000010100100000000001001"   // (R[10]) = lhi_const_1_B1 (16393); 
000033  1 0  "00000000110010010100100000001010"   // (R[9]) = _or_1_B1 (R[9],R[6]); 
000034  1 0  "01010101010000100010000111111011"   // (R[2]) = w32_const_bor_1_B1 (R[10],8699); 
000035  1 0  "00000000101010000110000000001010"   // (R[12]) = _or_1_B1 (R[8],R[5]); 
000036  1 0  "10101000001011011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[13],SP,-36); 
000037  1 0  "01001000000011101100000000001001"   // (R[14]) = lhi_const_1_B1 (-16375); 
000038  1 0  "00000001001000000111100000001011"   // (R[15]) = eqz_1_B1 (R[9]); 
000039  1 0  "01100101001010100000000000000001"   // (R[10]) = _eq_const_1_B1 (R[9]); 
000040  1 0  "10010101001001010000000000000011"   // (R[5]) = _ne_const_1_B1 (R[9]); 
000041  1 0  "10101000001000101111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[2],SP,-32); 
000042  1 0  "01010101110011010010000111111011"   // (R[13]) = w32_const_bor_1_B1 (R[14],8699); 
000043  1 0  "00100001100000000000000000011010"   // () = nez_br_const_1_B1 (R[12],26); 
000044  1 0  "01100101001001100000000000000010"   // (R[6]) = _eq_const_2_B1 (R[9]); 
000045  1 0  "10101000001001101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[6],SP,-28); 

// m278;   next: m481, jump target: m36 (next offset: 50)
000046  1 0  "00000001010011110110000000001010"   // (R[12]) = lor_1_B1 (R[10],R[15]); 
000047  1 0  "00100001100000000000000000010000"   // () = br_nez_const_1_B1 (R[12],16); 
000048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000049  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m481;   next: m479, jump target: m44 (next offset: 53)
000050  1 0  "00100000110000000000000000001000"   // () = br_nez_const_1_B1 (R[6],8); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000052  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m479;   next: m52, jump target: m506 (next offset: 56)
000053  1 0  "00100000101000000000000000010000"   // () = br_nez_const_1_B1 (R[5],16); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m52 (next offset: 60)
000056  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000057  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000058  1 0  "10101000001011011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[13],SP,-40); 
000059  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m44 (next offset: 65)
000060  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000061  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000062  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000063  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000064  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m36 (next offset: 71)
000065  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000066  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000067  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000068  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000069  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000070  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m506;   next: m282 (next offset: 71)

// m57;   next: m282 (next offset: 71)

// m282;   next: m70, jump target: m503 (next offset: 78)
000071  1 0  "00000000100000000110000000010011"   // (R[12]) = _lt_const_1_B2 (R[4]); 
000072  1 0  "00000000011001110111000000001010"   // (R[14]) = _or_1_B1 (R[3],R[7]); 
000073  1 0  "01001000000000100011111111111001"   // (R[2]) = lhi_const_1_B1 (16377); 
000074  1 0  "01001000000011111011111111111001"   // (R[15]) = lhi_const_1_B1 (-16391); 
000075  1 0  "00010101110000000000000010100111"   // () = br_eqz_const_1_B1 (R[14],167); 
000076  1 0  "01010101111011110010000111111011"   // (R[15]) = w32_const_bor_1_B1 (R[15],8699); 
000077  1 0  "01010100010000100010000111111011"   // (R[2]) = w32_const_bor_1_B1 (R[2],8699); 

// m70;   next: m497, jump target: m152 (next offset: 83)
000078  1 0  "00000001000010110111000000001011"   // (R[14]) = _eq_1_B1 (R[8],R[11]); 
000079  1 0  "00000000011010110101100000010101"   // (R[11]) = _ne_1_B1 (R[3],R[11]); 
000080  1 0  "00100001011000000000000001001011"   // () = br_nez_const_1_B1 (R[11],75); 
000081  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000082  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m497;   next: m495, jump target: m493 (next offset: 86)
000083  1 0  "00100001110000000000000000100010"   // () = br_nez_const_1_B1 (R[14],34); 
000084  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000085  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m495;   next: m491, jump target: m121 (next offset: 89)
000086  1 0  "00010101001000000000000000011001"   // () = br_eqz_const_1_B1 (R[9],25); 
000087  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m491;   next: m489, jump target: m129 (next offset: 92)
000089  1 0  "00100001010000000000000000010000"   // () = br_nez_const_1_B1 (R[10],16); 
000090  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000091  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m489;   next: m487, jump target: m137 (next offset: 95)
000092  1 0  "00100000110000000000000000001000"   // () = br_nez_const_1_B1 (R[6],8); 
000093  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000094  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m487;   next: m145, jump target: m516 (next offset: 98)
000095  1 0  "00100000101000000000000000111100"   // () = br_nez_const_1_B1 (R[5],60); 
000096  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000097  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m145 (next offset: 102)
000098  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000099  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000100  1 0  "10101000001011011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[13],SP,-40); 
000101  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m137 (next offset: 107)
000102  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000103  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000104  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000105  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000106  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m129 (next offset: 113)
000107  1 0  "10101000001000001111111111011000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-40]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-40); 
000108  1 0  "01001000000001110000000000000000"   // (R[7]) = const_3_B3 (); 
000109  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000110  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000111  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000112  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m121 (next offset: 119)
000113  1 0  "10101000001000001111111111011000"   // (dmw_wr) = const_3_B5 (); (__spill_DMw[-40]) = stack_store_bndl_B3 (__CTr2_w32_cstV0cv,SP,-40); 
000114  1 0  "01001000000001110000000000000000"   // (R[7]) = const_3_B3 (); 
000115  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000116  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000117  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000118  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m493;   next: m485, jump target: m84 (next offset: 122)
000119  1 0  "00010101001000000000000000011110"   // () = br_eqz_const_1_B1 (R[9],30); 
000120  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000121  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m485;   next: m474, jump target: m92 (next offset: 125)
000122  1 0  "00100001010000000000000000010101"   // () = br_nez_const_1_B1 (R[10],21); 
000123  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000124  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m474;   next: m483, jump target: m100 (next offset: 128)
000125  1 0  "00100000110000000000000000001011"   // () = br_nez_const_1_B1 (R[6],11); 
000126  1 0  "01001000000010110111111100110011"   // (R[11]) = lhi_const_1_B1 (32563); 
000127  1 0  "01010101011010110010000111010010"   // (R[11]) = w32_const_bor_1_B1 (R[11],8658); 

// m483;   next: m108, jump target: m516 (next offset: 131)
000128  1 0  "00100000101000000000000000011011"   // () = br_nez_const_1_B1 (R[5],27); 
000129  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000130  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m108 (next offset: 138)
000131  1 0  "01001000000001001100000000000010"   // (R[4]) = lhi_const_1_B1 (-16382); 
000132  1 0  "01010100100001111101100101111100"   // (R[7]) = w32_const_bor_1_B1 (R[4],55676); 
000133  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000134  1 0  "10101000001010111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[11],SP,-36); 
000135  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000136  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000137  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m100 (next offset: 145)
000138  1 0  "01001000000001000100000000000010"   // (R[4]) = lhi_const_1_B1 (16386); 
000139  1 0  "01010100100001111101100101111100"   // (R[7]) = w32_const_bor_1_B1 (R[4],55676); 
000140  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000141  1 0  "10101000001010111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[11],SP,-36); 
000142  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000143  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000144  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m92 (next offset: 151)
000145  1 0  "01001000000001001011111111101001"   // (R[4]) = lhi_const_1_B1 (-16407); 
000146  1 0  "01010100100001110010000111111011"   // (R[7]) = w32_const_bor_1_B1 (R[4],8699); 
000147  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000148  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000149  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000150  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m84 (next offset: 157)
000151  1 0  "01001000000001000011111111101001"   // (R[4]) = lhi_const_1_B1 (16361); 
000152  1 0  "01010100100001110010000111111011"   // (R[7]) = w32_const_bor_1_B1 (R[4],8699); 
000153  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000154  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000155  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000156  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m516;   next: m517 (next offset: 157)

// m152;   next: m517 (next offset: 157)

// m517;   next: m165, jump target: m501 (next offset: 160)
000157  1 0  "00100001110000000000000001010000"   // () = br_nez_const_1_B1 (R[14],80); 
000158  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000159  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m165;   next: m287, jump target: m168 (next offset: 166)
000160  1 0  "00000001000000110010100000011000"   // (R[5],MC) = _mi_1_B1 (R[8],R[3]); 
000161  1 0  "10011000101000110000000000010100"   // (R[3]) = _rs_const_1_B1 (R[5]); 
000162  1 0  "01110100011001100000000000111100"   // (R[6]) = _gt_const_1_B1 (R[3]); 
000163  1 0  "00100000110000000000000000010110"   // () = br_nez_const_1_B1 (R[6],22); 
000164  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000165  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m287;   next: m428, jump target: m179 (next offset: 173)
000166  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000167  1 0  "00000000110000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[6]); 
000168  1 0  "10001100011000111111111111000100"   // (R[3]) = _lt_const_2_B1 (R[3]); 
000169  1 0  "00000000011001010001100000000011"   // (R[3]) = land_1_B1 (R[5],R[3]); 
000170  1 0  "00100000011000000000000000001111"   // () = br_nez_const_1_B1 (R[3],15); 
000171  1 0  "01001000000000100000000000000000"   // (R[2]) = const_3_B3 (); 
000172  1 0  "01001000000001010000000000000000"   // (R[5]) = const_3_B3 (); 

// m428;   next: m429 (next offset: 178)
000173  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000174  1 0  "10101000001010101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[10],SP,-20); 
000175  1 0  "10101000001010011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[9],SP,-16); 
000176  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000177  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m429 subroutine call;   next: m426 (next offset: 178)

// m426;   next: m182 (next offset: 183)
000178  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000179  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000180  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000181  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000182  1 0  "00000000100001110010000000000011"   // (R[4]) = _ad_1_B1 (R[7],R[4]); 

// m182 subroutine call;   next: m519 (next offset: 183)

// m519;   next: m520 (next offset: 187)
000183  1 0  "01010000001000101111111111111000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000184  1 0  "01010000001010011111111111110000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000185  1 0  "01010000001010101111111111101100"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000186  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m179;   next: m520 (next offset: 187)

// m520;   next: m521 (next offset: 187)

// m168;   next: m521 (next offset: 187)

// m521;   next: m499, jump target: m188 (next offset: 190)
000187  1 0  "00010101001000000000000000101101"   // () = br_eqz_const_1_B1 (R[9],45); 
000188  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000189  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m499;   next: m449, jump target: m196 (next offset: 193)
000190  1 0  "00100001010000000000000000100011"   // () = br_nez_const_1_B1 (R[10],35); 
000191  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000192  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m449;   next: m450 (next offset: 200)
000193  1 0  "01001000000001110011110010100001"   // (R[7]) = lhi_const_1_B1 (15521); 
000194  1 0  "01010100111001101010011000100110"   // (R[6]) = w32_const_bor_1_B1 (R[7],42534); 
000195  1 0  "01001000000001000011001100010100"   // (R[4]) = lhi_const_1_B1 (13076); 
000196  1 0  "01010100100001110101110000000111"   // (R[7]) = w32_const_bor_1_B1 (R[4],23559); 
000197  1 0  "01010100010001000000000000000000"   // R[4] = R[2]; 
000198  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000199  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m450 subroutine call;   next: m522 (next offset: 200)

// m522;   next: m462, jump target: m454 (next offset: 206)
000200  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000201  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000202  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000203  1 0  "00100000011000000000000000001101"   // () = br_nez_const_1_B1 (R[3],13); 
000204  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000205  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m462;   next: m463 (next offset: 214)
000206  1 0  "01010100101000100000000000000000"   // LR = R[5]; 
000207  1 0  "01010100111001010000000000000000"   // R[5] = R[7]; 
000208  1 0  "01010100010001110000000000000000"   // R[7] = LR; 
000209  1 0  "01010100100000100000000000000000"   // LR = R[4]; 
000210  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000211  1 0  "01010100010001100000000000000000"   // R[6] = LR; 
000212  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000213  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m463 subroutine call;   next: m523 (next offset: 214)

// m523, jump target: m210 (next offset: 218)
000214  1 0  "01010000001000101111111111111000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000215  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000216  1 0  "00100100000000000000000000010010"   // () = j_const_1_B1 (18); 
000217  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m454;   next: m455 (next offset: 220)
000218  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000219  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m455 subroutine call;   next: m204 (next offset: 220)

// m204 (next offset: 227)
000220  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000221  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000222  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000223  1 0  "10101000001001011111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[5],SP,-40); 
000224  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000225  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 
000226  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m196 (next offset: 234)
000227  1 0  "01001000000001001000000000000000"   // (R[4]) = const_1_B1 (); 
000228  1 0  "01010000001001111111111111101000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000229  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000230  1 0  "00000000010001000010000000011010"   // (R[4]) = _er_1_B1 (R[2],R[4]); 
000231  1 0  "00110000111000000000000000000000"   // () = __rts_jr_1_B1 (R[7]); 
000232  1 0  "10101000001001001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[4],SP,-40); 
000233  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m188;   next: m210 (next offset: 235)
000234  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m210 (next offset: 239)
000235  1 0  "10101000001000101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[2],SP,-40); 
000236  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000237  1 0  "10101000001001011111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[5],SP,-36); 
000238  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

// m501;   next: m162, jump target: m216 (next offset: 242)
000239  1 0  "00100001100000000000000000011001"   // () = br_nez_const_1_B1 (R[12],25); 
000240  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000241  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m162, jump target: m216 (next offset: 244)
000242  1 0  "00100100000000000000000000010111"   // () = j_const_1_B1 (23); 
000243  1 0  "01010100010011110000000000000000"   // R[15] = R[2]; 

// m503;   next: m67, jump target: m216 (next offset: 247)
000244  1 0  "00100001100000000000000000010100"   // () = br_nez_const_1_B1 (R[12],20); 
000245  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000246  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m67, jump target: m216 (next offset: 249)
000247  1 0  "00100100000000000000000000010010"   // () = j_const_1_B1 (18); 
000248  1 0  "01010100010011110000000000000000"   // R[15] = R[2]; 

// m18;   next: m19 (next offset: 251)
000249  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000250  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m19 subroutine call;   next: m529 (next offset: 251)

// m529, jump target: m216 (next offset: 255)
000251  1 0  "01010000001011111111111111111000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000252  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000253  1 0  "00100100000000000000000000001100"   // () = j_const_1_B1 (12); 
000254  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m419;   next: m420 (next offset: 263)
000255  1 0  "01010100111000100000000000000000"   // LR = R[7]; 
000256  1 0  "01010100101001110000000000000000"   // R[7] = R[5]; 
000257  1 0  "01010100010001010000000000000000"   // R[5] = LR; 
000258  1 0  "01010100100000100000000000000000"   // LR = R[4]; 
000259  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000260  1 0  "01010100010001100000000000000000"   // R[6] = LR; 
000261  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000262  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m420 subroutine call;   next: m530 (next offset: 263)

// m530;   next: m216 (next offset: 266)
000263  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000264  1 0  "01010000001011111111111111111000"   // (R[15]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000265  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m216 (next offset: /)
000266  1 0  "10101000001011111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[15],SP,-40); 
000267  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000268  1 0  "10101000001001111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[7],SP,-36); 
000269  1 0  "00001000001000011111111111100000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-32,SP,SP); 

