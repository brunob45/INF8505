
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:35 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i math-ff_rem_pio2_ tlx


// m200;   next: m8, jump target: m6 (next offset: 13)
000000  1 0  "00001000001000010000000001001000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (72,SP,SP); 
000001  1 0  "01001000000001110111111111111111"   // (R[7]) = lhi_const_1_B1 (32767); 
000002  1 0  "01010100111001111111111111111111"   // (R[7]) = w32_const_bor_1_B1 (R[7],65535); 
000003  1 0  "01001000000010000011111111101001"   // (R[8]) = lhi_const_1_B1 (16361); 
000004  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000005  1 0  "00000000100001110001100000000011"   // (R[3]) = _ad_1_B1 (R[4],R[7]); 
000006  1 0  "01010101000010000010000111111011"   // (R[8]) = w32_const_bor_1_B1 (R[8],8699); 
000007  1 0  "00000000011010000011000000010000"   // (R[6]) = _le_1_B1 (R[3],R[8]); 
000008  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 
000009  1 0  "10101000001000101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[2],SP,-28); 
000010  1 0  "00100000110000000000000110110100"   // () = nez_br_const_1_B1 (R[6],436); 
000011  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000012  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 

// m8;   next: m402, jump target: m12 (next offset: 32)
000013  1 0  "01001000000011000100000000000010"   // (R[12]) = lhi_const_1_B1 (16386); 
000014  1 0  "01001000000010100011110111010000"   // (R[10]) = lhi_const_1_B1 (15824); 
000015  1 0  "01001000000010010001101001100010"   // (R[9]) = lhi_const_1_B1 (6754); 
000016  1 0  "01001000000010000011101110100011"   // (R[8]) = lhi_const_1_B1 (15267); 
000017  1 0  "01010101100011001101100101111100"   // (R[12]) = w32_const_bor_1_B1 (R[12],55676); 
000018  1 0  "01001000000010110011111111111001"   // (R[11]) = lhi_const_1_B1 (16377); 
000019  1 0  "01010101010010101011010001100001"   // (R[10]) = w32_const_bor_1_B1 (R[10],46177); 
000020  1 0  "01010101001010010110001100110001"   // (R[9]) = w32_const_bor_1_B1 (R[9],25393); 
000021  1 0  "01010101000010000001100110001010"   // (R[8]) = w32_const_bor_1_B1 (R[8],6538); 
000022  1 0  "01001000000001100010111000000011"   // (R[6]) = lhi_const_1_B1 (11779); 
000023  1 0  "00000000011011000001100000010011"   // (R[3]) = _lt_1_B1 (R[3],R[12]); 
000024  1 0  "01010101011010110010000111111011"   // (R[11]) = w32_const_bor_1_B1 (R[11],8699); 
000025  1 0  "01010100110001100111000001110011"   // (R[6]) = w32_const_bor_1_B1 (R[6],28787); 
000026  1 0  "10101000001010001111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[8],SP,-40); 
000027  1 0  "10101000001010011111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[9],SP,-44); 
000028  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000029  1 0  "00100000011000000000000100001110"   // () = nez_br_const_1_B1 (R[3],270); 
000030  1 0  "10101000001010111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[11],SP,-32); 
000031  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 

// m402;   next: m403 (next offset: 39)
000032  1 0  "00000000100001110010000000000011"   // (R[4]) = _ad_1_B1 (R[4],R[7]); 
000033  1 0  "01001000000001100011111111100100"   // (R[6]) = lhi_const_1_B1 (16356); 
000034  1 0  "10101000001001001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[4],SP,-52); 
000035  1 0  "01010100110001100101111100110000"   // (R[6]) = w32_const_bor_1_B1 (R[6],24368); 
000036  1 0  "01001000000001110110110111001001"   // (R[7]) = lhi_const_1_B1 (28105); 
000037  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000038  1 0  "01010100111001111100100010000011"   // (R[7]) = w32_const_bor_1_B1 (R[7],51331); 

// m403 subroutine call;   next: m412 (next offset: 39)

// m412;   next: m413 (next offset: 44)
000039  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000040  1 0  "01001000000001100011111111100000"   // (R[6]) = const_2_B1 (); 
000041  1 0  "01001000000001110000000000000000"   // (R[7]) = const_7_B3 (); 
000042  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000043  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m413 subroutine call;   next: m417 (next offset: 44)

// m417;   next: m418 (next offset: 47)
000044  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000045  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000046  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m418 subroutine call;   next: m421 (next offset: 47)

// m421;   next: m422 (next offset: 50)
000047  1 0  "10101000001000111111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[3],SP,-56); 
000048  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000049  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 

// m422 subroutine call;   next: m431 (next offset: 50)

// m431;   next: m432 (next offset: 57)
000050  1 0  "01010000001001101111111111100000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000051  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000052  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000053  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000054  1 0  "10101000001001001111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[4],SP,-60); 
000055  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000056  1 0  "01001000000001110101010001000000"   // (R[7]) = const_5_B1 (); 

// m432 subroutine call;   next: m436 (next offset: 57)

// m436;   next: m437 (next offset: 62)
000057  1 0  "01010000001001001111111111001100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000058  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000059  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000060  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000061  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m437 subroutine call;   next: m446 (next offset: 62)

// m446;   next: m447 (next offset: 71)
000062  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000063  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000064  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000065  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000066  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000067  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000068  1 0  "10101000001010001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[8],SP,-44); 
000069  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000070  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m447 subroutine call;   next: m450 (next offset: 71)

// m450;   next: m451 (next offset: 89)
000071  1 0  "01010000001001011111111111001000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000072  1 0  "01001000000001101111111111111100"   // (R[6]) = lhi_const_1_B1 (-4); 
000073  1 0  "10001000101001000000000000000010"   // (R[4]) = _ls_const_1_B1 (R[5]); 
000074  1 0  "01010100110001101111111111111100"   // (R[6]) = w32_const_bor_1_B1 (R[6],-4); 
000075  1 0  "00000000100001100011000000000001"   // (R[6],) = _pl_1_B1 (R[6],R[4]); 
000076  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000077  1 0  "01010000110001100000000000000000"   // (R[6]) = load_2_B1 (R[6],DMb_stat); 
000078  1 0  "00000000100001100100000000010101"   // (R[8]) = _ne_1_B1 (R[4],R[6]); 
000079  1 0  "10001100101000110000000000100000"   // (R[3]) = _lt_const_1_B1 (R[5]); 
000080  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000081  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000082  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000083  1 0  "10101000001010001111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[8],SP,-52); 
000084  1 0  "10101000001001111111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[7],SP,-64); 
000085  1 0  "10101000001001101111111110111100"   // (__spill_DMw[-68]) = stack_store_bndl_B3 (R[6],SP,-68); 
000086  1 0  "10101000001000111111111110111000"   // (__spill_DMw[-72]) = stack_store_bndl_B3 (R[3],SP,-72); 
000087  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000088  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m451 subroutine call;   next: m400 (next offset: 89)

// m400;   next: m465, jump target: m44 (next offset: 96)
000089  1 0  "01010000001001011111111111001100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000090  1 0  "01010000001001001111111110111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-72],SP,-72); 
000091  1 0  "00000000100001010010100000000011"   // (R[5]) = land_1_B1 (R[4],R[5]); 
000092  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000093  1 0  "00100000101000000000000010010011"   // () = nez_br_const_1_B1 (R[5],147); 
000094  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000095  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m465;   next: m488, jump target: m56 (next offset: 108)
000096  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000097  1 0  "10011101000001010000000000010100"   // (R[5]) = _rs_const_1_B1 (R[8]); 
000098  1 0  "10011000100001000000000000010100"   // (R[4]) = _rs_const_2_B1 (R[4]); 
000099  1 0  "00010000101001010000011111111111"   // (R[5]) = _ad_const_1_B1 (R[5]); 
000100  1 0  "00000000100001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[4],R[5]); 
000101  1 0  "10101000011010000000000000000000"   // (DMb) = store_1_B1 (R[8],R[3],DMb); 
000102  1 0  "10101000011001100000000000000100"   // (DMb) = store__pl_const_1_B1 (R[6],R[3],DMb); 
000103  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000104  1 0  "10000000101001110000000000010000"   // (R[7]) = _le_const_2_B1 (R[5]); 
000105  1 0  "00100000111000000000000001111111"   // () = nez_br_const_1_B1 (R[7],127); 
000106  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000107  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 

// m488;   next: m489 (next offset: 111)
000108  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000109  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000110  1 0  "01001000000001110001101001100000"   // (R[7]) = const_6_B1 (); 

// m489 subroutine call;   next: m498 (next offset: 111)

// m498;   next: m499 (next offset: 118)
000111  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000112  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000113  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000114  1 0  "10101000001001111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[7],SP,-48); 
000115  1 0  "10101000001001101111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[6],SP,-52); 
000116  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000117  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m499 subroutine call;   next: m503 (next offset: 118)

// m503;   next: m504 (next offset: 127)
000118  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000119  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000120  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000121  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000122  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000123  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000124  1 0  "10101000001010001111111111000000"   // (__spill_DMw[-64]) = stack_store_bndl_B3 (R[8],SP,-64); 
000125  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000126  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 

// m504 subroutine call;   next: m513 (next offset: 127)

// m513;   next: m514 (next offset: 136)
000127  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000128  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000129  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000130  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000131  1 0  "01010000001001101111111111000000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000132  1 0  "10101000001000111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[3],SP,-20); 
000133  1 0  "10101000001010001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[8],SP,-44); 
000134  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000135  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m514 subroutine call;   next: m517 (next offset: 136)

// m517;   next: m518 (next offset: 141)
000136  1 0  "01010000001001101111111111001100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000137  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000138  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000140  1 0  "01010000001001111111111111010000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m518 subroutine call;   next: m527 (next offset: 141)

// m527;   next: m528 (next offset: 146)
000141  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000142  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000143  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000144  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000145  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m528 subroutine call;   next: m532 (next offset: 146)

// m532;   next: m533 (next offset: 153)
000146  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000147  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000148  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000149  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000150  1 0  "10101000001001101111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[6],SP,-44); 
000151  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000152  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m533 subroutine call;   next: m486 (next offset: 153)

// m486;   next: m548, jump target: m54 (next offset: 166)
000153  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000154  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000155  1 0  "10101000101001000000000000000000"   // (DMb) = store_1_B1 (R[4],R[5],DMb); 
000156  1 0  "10011100100001000000000000010100"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000157  1 0  "00010000100001000000011111111111"   // (R[4]) = _ad_const_1_B1 (R[4]); 
000158  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000159  1 0  "00000000110001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[6],R[4]); 
000160  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000161  1 0  "10101000101001100000000000000100"   // (DMb) = store__pl_const_1_B1 (R[6],R[5],DMb); 
000162  1 0  "10000000100001010000000000110001"   // (R[5]) = _le_const_1_B1 (R[4]); 
000163  1 0  "00100000101000000000000000111101"   // () = nez_br_const_1_B1 (R[5],61); 
000164  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000165  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m548;   next: m549 (next offset: 170)
000166  1 0  "01001000000001110010111000000000"   // (R[7]) = const_1_B1 (); 
000167  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000168  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000169  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m549 subroutine call;   next: m558 (next offset: 170)

// m558;   next: m559 (next offset: 177)
000170  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000171  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000172  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000173  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000174  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000175  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000176  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m559 subroutine call;   next: m563 (next offset: 177)

// m563;   next: m564 (next offset: 188)
000177  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000178  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000179  1 0  "10101000001001101111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[6],SP,-40); 
000180  1 0  "01001000000001110011100101111011"   // (R[7]) = lhi_const_1_B1 (14715); 
000181  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000182  1 0  "01010000001001001111111111000100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000183  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000184  1 0  "01010100111001101000001110011010"   // (R[6]) = w32_const_bor_1_B1 (R[7],33690); 
000185  1 0  "01001000000010000010010100100000"   // (R[8]) = lhi_const_1_B1 (9504); 
000186  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000187  1 0  "01010101000001110100100111000001"   // (R[7]) = w32_const_bor_1_B1 (R[8],18881); 

// m564 subroutine call;   next: m573 (next offset: 188)

// m573;   next: m574 (next offset: 197)
000188  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000189  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000190  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000191  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000192  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000193  1 0  "10101000001000111111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[3],SP,-36); 
000194  1 0  "10101000001010001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[8],SP,-44); 
000195  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000196  1 0  "01010000001001111111111111100000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m574 subroutine call;   next: m577 (next offset: 197)

// m577;   next: m578 (next offset: 202)
000197  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000198  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000199  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000200  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000201  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m578 subroutine call;   next: m587 (next offset: 202)

// m587;   next: m588 (next offset: 207)
000202  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000203  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000204  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000205  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000206  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m588 subroutine call;   next: m592 (next offset: 207)

// m592;   next: m593 (next offset: 214)
000207  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000208  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000209  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000210  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000211  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000212  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000213  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 

// m593 subroutine call;   next: m546 (next offset: 214)

// m546, jump target: m611 (next offset: 226)
000214  1 0  "01010000001010011111111111101100"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000215  1 0  "01010000001010001111111111110000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000216  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000217  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000218  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000219  1 0  "01010000001001001111111111011000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000220  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000221  1 0  "10101000001010011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[9],SP,-16); 
000222  1 0  "10101000001010001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[8],SP,-20); 
000223  1 0  "10101000011001110000000000000000"   // (DMb) = store_1_B1 (R[7],R[3],DMb); 
000224  1 0  "00100100000000000000000000011001"   // () = j_const_1_B1 (25); 
000225  1 0  "10101000011001100000000000000100"   // (DMb) = store__pl_const_1_B1 (R[6],R[3],DMb); 

// m54, jump target: m611 (next offset: 234)
000226  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000227  1 0  "01010000001001001111111111000000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000228  1 0  "01010000001001011111111111011100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000229  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000230  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000231  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000232  1 0  "00100100000000000000000000010001"   // () = j_const_1_B1 (17); 
000233  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 

// m56, jump target: m611 (next offset: 242)
000234  1 0  "01010000001001101111111110111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000235  1 0  "01010000001001111111111111000000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000236  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000237  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000238  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000239  1 0  "10101000001001101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[6],SP,-16); 
000240  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000241  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 

// m44;   next: m611 (next offset: 250)
000242  1 0  "01010000001001111111111110111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-68],SP,-68); 
000243  1 0  "01010000001010011111111111000000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-64],SP,-64); 
000244  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000245  1 0  "01010000001001001111111111010100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000246  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000247  1 0  "10101000011001100000000000000100"   // (DMb) = store__pl_const_1_B1 (R[6],R[3],DMb); 
000248  1 0  "10101000011010000000000000000000"   // (DMb) = store_1_B1 (R[8],R[3],DMb); 
000249  1 0  "10101000001010011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[9],SP,-20); 

// m611;   next: m612 (next offset: 258)
000250  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000251  1 0  "00000000011001100010000000110100"   // (R[6],R[3]) = load__pl_const_2_B1 (R[3],DMb); 
000252  1 0  "01010100011010000000000000000000"   // R[8] = R[3]; 
000253  1 0  "00000000011001110010000000110100"   // (R[7],R[3]) = load__pl_const_2_B1 (R[3],DMb); 
000254  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 
000255  1 0  "10101000001010001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[8],SP,-36); 
000256  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000257  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m612 subroutine call;   next: m622 (next offset: 258)

// m622;   next: m623 (next offset: 263)
000258  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000259  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000260  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000261  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000262  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m623 subroutine call;   next: m609 (next offset: 263)

// m609;   next: m648, jump target: m63 (next offset: 273)
000263  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000264  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000265  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000266  1 0  "10101000101001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[5],DMb); 
000267  1 0  "00000000100000000010100000001100"   // (R[5]) = _ge_const_1_B2 (R[4]); 
000268  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000269  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000270  1 0  "00100000101000000000000000011011"   // () = nez_br_const_1_B1 (R[5],27); 
000271  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000272  1 0  "10101000110000110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[3],R[6],DMb); 

// m648;   next: m649 (next offset: 278)
000273  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 
000274  1 0  "01010000100001110000000000000100"   // (R[7]) = load__pl_const_1_B1 (R[4],DMb); 
000275  1 0  "01010000100001100000000000000000"   // (R[6]) = load_1_B1 (R[4],DMb); 
000276  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000277  1 0  "01001000000001000000000000000000"   // (R[4]) = const_7_B3 (); 

// m649 subroutine call;   next: m652 (next offset: 278)

// m652;   next: m653 (next offset: 290)
000278  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000279  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000280  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000281  1 0  "10101000101001000000000000000100"   // (DMb) = store__pl_const_1_B1 (R[4],R[5],DMb); 
000282  1 0  "10101000101001100000000000000000"   // (DMb) = store_1_B1 (R[6],R[5],DMb); 
000283  1 0  "01001000000001010000000000000000"   // (R[5]) = const_7_B3 (); 
000284  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000285  1 0  "01010000001001101111111111011100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000286  1 0  "01010000100001110000000000000100"   // (R[7]) = load__pl_const_1_B1 (R[4],DMb); 
000287  1 0  "01010000110001100000000000000100"   // (R[6]) = load__pl_const_1_B1 (R[6],DMb); 
000288  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000289  1 0  "01001000000001000000000000000000"   // (R[4]) = const_7_B3 (); 

// m653 subroutine call;   next: m646 (next offset: 290)

// m646, jump target: m68 (next offset: 299)
000290  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000291  1 0  "01010000001000111111111111001000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000292  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000293  1 0  "10101000101001100000000000000100"   // (DMb) = store__pl_const_1_B1 (R[6],R[5],DMb); 
000294  1 0  "00000000000000110001100000011000"   // (R[3],MC) = _mi_const_1_B1 (R[3]); 
000295  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000296  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000297  1 0  "00100100000000000000000010011100"   // () = j_const_1_B1 (156); 
000298  1 0  "10101000100001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[4],DMb); 

// m63, jump target: m68 (next offset: 301)
000299  1 0  "00100100000000000000000010011010"   // () = j_const_1_B1 (154); 
000300  1 0  "01010000001000111111111111001000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 

// m12;   next: m292, jump target: m203 (next offset: 308)
000301  1 0  "00000000100000000001100000001110"   // (R[3]) = _gt_const_1_B2 (R[4]); 
000302  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000303  1 0  "01010000001001101111111111100000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000304  1 0  "00000000110001110011100000010101"   // (R[7]) = _ne_1_B1 (R[7],R[6]); 
000305  1 0  "00100000011000000000000001000100"   // () = nez_br_const_1_B1 (R[3],68); 
000306  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000307  1 0  "01001000000001110101010001000000"   // (R[7]) = const_5_B1 (); 

// m292;   next: m293 (next offset: 310)
000308  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000309  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m293 subroutine call;   next: m666 (next offset: 310)

// m666;   next: m351, jump target: m314 (next offset: 316)
000310  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000311  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000312  1 0  "01001000000001110001101001100000"   // (R[7]) = const_6_B1 (); 
000313  1 0  "00100000011000000000000000100001"   // () = nez_br_const_1_B1 (R[3],33); 
000314  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000315  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m351;   next: m352 (next offset: 318)
000316  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000317  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m352 subroutine call;   next: m361 (next offset: 318)

// m361;   next: m362 (next offset: 325)
000318  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000319  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000320  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000321  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000322  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000323  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000324  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m362 subroutine call;   next: m366 (next offset: 325)

// m366;   next: m367 (next offset: 336)
000325  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000326  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000327  1 0  "00000000011001100010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[6],R[3],DMb); 
000328  1 0  "01010100011010000000000000000000"   // R[8] = R[3]; 
000329  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000330  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000331  1 0  "00000000011001110010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[7],R[3],DMb); 
000332  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000333  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000334  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000335  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m367 subroutine call;   next: m376 (next offset: 336)

// m376;   next: m377 (next offset: 341)
000336  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000337  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000338  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000339  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000340  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m377 subroutine call;   next: m349 (next offset: 341)

// m349, jump target: m664 (next offset: 348)
000341  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000342  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000343  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000344  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000345  1 0  "10101000101001000000000000000100"   // (DMb) = store__pl_const_1_B1 (R[4],R[5],DMb); 
000346  1 0  "00100100000000000000000001100011"   // () = j_const_1_B1 (99); 
000347  1 0  "10101000110001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[6],DMb); 

// m314;   next: m315 (next offset: 352)
000348  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000349  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000350  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000351  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m315 subroutine call;   next: m318 (next offset: 352)

// m318;   next: m319 (next offset: 363)
000352  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000353  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000354  1 0  "00000000011001100010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[6],R[3],DMb); 
000355  1 0  "01010100011010000000000000000000"   // R[8] = R[3]; 
000356  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000357  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000358  1 0  "00000000011001110010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[7],R[3],DMb); 
000359  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000360  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000361  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000362  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m319 subroutine call;   next: m328 (next offset: 363)

// m328;   next: m329 (next offset: 368)
000363  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000364  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000365  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000366  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000367  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m329 subroutine call;   next: m312 (next offset: 368)

// m312, jump target: m664 (next offset: 375)
000368  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000369  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000370  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000371  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000372  1 0  "10101000101001000000000000000100"   // (DMb) = store__pl_const_1_B1 (R[4],R[5],DMb); 
000373  1 0  "00100100000000000000000001001000"   // () = j_const_1_B1 (72); 
000374  1 0  "10101000110001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[6],DMb); 

// m203;   next: m204 (next offset: 377)
000375  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000376  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m204 subroutine call;   next: m665 (next offset: 377)

// m665;   next: m262, jump target: m225 (next offset: 383)
000377  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000378  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000379  1 0  "01001000000001110001101001100000"   // (R[7]) = const_6_B1 (); 
000380  1 0  "00100000011000000000000000100001"   // () = nez_br_const_1_B1 (R[3],33); 
000381  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000382  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 

// m262;   next: m263 (next offset: 385)
000383  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000384  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m263 subroutine call;   next: m272 (next offset: 385)

// m272;   next: m273 (next offset: 392)
000385  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000386  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000387  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000388  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000389  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000390  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000391  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m273 subroutine call;   next: m277 (next offset: 392)

// m277;   next: m278 (next offset: 403)
000392  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000393  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000394  1 0  "00000000011001100010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[6],R[3],DMb); 
000395  1 0  "01010100011010000000000000000000"   // R[8] = R[3]; 
000396  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000397  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000398  1 0  "00000000011001110010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[7],R[3],DMb); 
000399  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000400  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000401  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000402  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m278 subroutine call;   next: m287 (next offset: 403)

// m287;   next: m288 (next offset: 408)
000403  1 0  "01010000001001101111111111011000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000404  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000405  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000406  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000407  1 0  "01010000001001111111111111011100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m288 subroutine call;   next: m260 (next offset: 408)

// m260, jump target: m24 (next offset: 415)
000408  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000409  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000410  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000411  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000412  1 0  "10101000110001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[6],DMb); 
000413  1 0  "00100100000000000000000000011011"   // () = j_const_1_B1 (27); 
000414  1 0  "10101000101001000000000000000100"   // (DMb) = store__pl_const_1_B1 (R[4],R[5],DMb); 

// m225;   next: m226 (next offset: 419)
000415  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000416  1 0  "10101000001001001111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[4],SP,-20); 
000417  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000418  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m226 subroutine call;   next: m229 (next offset: 419)

// m229;   next: m230 (next offset: 430)
000419  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000420  1 0  "01010000001001101111111111111000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000421  1 0  "00000000011001100010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[6],R[3],DMb); 
000422  1 0  "01010100011010000000000000000000"   // R[8] = R[3]; 
000423  1 0  "01010000001001111111111111111100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000424  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000425  1 0  "00000000011001110010000000110111"   // (R[3],DMb) = store__pl_const_2_B1 (R[7],R[3],DMb); 
000426  1 0  "10101000001010001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[8],SP,-12); 
000427  1 0  "10101000001000111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[3],SP,-16); 
000428  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000429  1 0  "01010000001001001111111111101100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m230 subroutine call;   next: m239 (next offset: 430)

// m239;   next: m240 (next offset: 435)
000430  1 0  "01010000001001101111111111010000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000431  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000432  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000433  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000434  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m240 subroutine call;   next: m223 (next offset: 435)

// m223;   next: m24 (next offset: 441)
000435  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000436  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000437  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000438  1 0  "01010000001001111111111111111000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000439  1 0  "10101000101001000000000000000100"   // (DMb) = store__pl_const_1_B1 (R[4],R[5],DMb); 
000440  1 0  "10101000110001110000000000000100"   // (DMb) = store__pl_const_1_B1 (R[7],R[6],DMb); 

// m24 (next offset: 446)
000441  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000442  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000443  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000444  1 0  "01010100000000110000000000000001"   // (R[3]) = const_4_B2 (); 
000445  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 

// m664, jump target: m68 (next offset: 448)
000446  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000447  1 0  "00001000000000111111111111111111"   // (R[3]) = const_3_B1 (); 

// m6;   next: m68 (next offset: 454)
000448  1 0  "01001000000000110000000000000000"   // (R[3]) = const_7_B3 (); 
000449  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000450  1 0  "00000000110001000010000000110111"   // (R[6],DMb) = store__pl_const_2_B1 (R[4],R[6],DMb); 
000451  1 0  "00000000110001010010000000110111"   // (R[6],DMb) = store__pl_const_2_B1 (R[5],R[6],DMb); 
000452  1 0  "10101000110000000000000000000000"   // (DMb) = store_const_1_B1 (R[6],DMb); 
000453  1 0  "10101000110000000000000000000100"   // (DMb) = store_const__pl_const_1_B1 (R[6],DMb); 

// m68 (next offset: /)
000454  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000455  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000456  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000457  1 0  "00001000001000011111111110111000"   // (SP,MC) = wr_res_reg__pl_rd_res_reg_const_1_B1 (-72,SP,SP); 
000458  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

