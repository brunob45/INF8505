
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:20 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i stdio-fdopen_ tlx


// m5;   next: m52 (next offset: 5)
000000  1 0  "01001000000000110000000000000100"   // (R[3]) = lhi_const_1_B1 (4); 
000001  1 0  "00001000001000010000000001010000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (80,SP,SP); 
000002  1 0  "01010100011001100000000000000100"   // (R[6]) = w32_const_bor_1_B1 (R[3],4); 
000003  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000004  1 0  "01001000000000110000000000000000"   // (R[3]) = const_3_B3 (); 

// m52;   next: m17, jump target: m2 (next offset: 9)
000005  1 0  "00000000110001110100000000110100"   // (R[7],R[6]) = load__pl_const_1_B1 (R[6],DMb); 
000006  1 0  "00010100111000000000000000000110"   // () = eqz_br_const_1_B1 (R[7],6); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000008  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m17;   next: m20 (next offset: 9)

// m20;   next: m56, jump target: m52 (next offset: 14)
000009  1 0  "00001000011000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000010  1 0  "10001100011001110000000000010000"   // (R[7]) = _lt_const_1_B1 (R[3]); 
000011  1 0  "00100000111000001111111111111000"   // () = nez_br_const_2_B1 (R[7],-8); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m56;   next: m2 (next offset: 14)

// m2;   next: m25 (next offset: 14)

// m25;   next: m30, jump target: m28 (next offset: 19)
000014  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000015  1 0  "01101100011000110000000000010000"   // (R[3]) = _ge_const_1_B1 (R[3]); 
000016  1 0  "00100000011000000000000000011011"   // () = nez_br_const_2_B1 (R[3],27); 
000017  1 0  "01001000000001100000000000000000"   // (R[6]) = lhi_const_1_B1 (0); 
000018  1 0  "01010100110001100000000000000000"   // (R[6]) = w32_const_bor_1_B1 (R[6],0); 

// m30;   next: m31 (next offset: 27)
000019  1 0  "01010100000000110000000000011111"   // (R[3]) = const_1_B2 (); 
000020  1 0  "10101000001001001111111110110100"   // (DMb) = store__pl_rd_res_reg_const_1_B1 (R[4],-76,DMb,SP); 
000021  1 0  "10101000001001011111111111000000"   // (DMb) = store__pl_rd_res_reg_const_1_B1 (R[5],-64,DMb,SP); 
000022  1 0  "10101000001000111111111110110000"   // (DMb) = store__pl_rd_res_reg_const_1_B1 (R[3],-80,DMb,SP); 
000023  1 0  "10101000001000001111111110111000"   // (DMb) = store_const__pl_rd_res_reg_const_1_B1 (-72,DMb,SP); 
000024  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000025  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000026  1 0  "00001000001001001111111110110000"   // (R[4],MC) = _pl_rd_res_reg_const_1_B1 (-80,SP); 

// m31 subroutine call;   next: m47 (next offset: 27)

// m47;   next: m36, jump target: m35 (next offset: 31)
000027  1 0  "01010000001001011111111110111000"   // (R[5]) = load__pl_rd_res_reg_const_1_B1 (-72,DMb,SP); 
000028  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
000029  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000030  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m36, jump target: m40 (next offset: 42)
000031  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000032  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000033  1 0  "10001000101001010000000000000011"   // (R[5]) = _ls_const_1_B1 (R[5]); 
000034  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 
000035  1 0  "00000000100001010001100000000001"   // (R[3],) = _pl_1_B1 (R[4],R[5]); 
000036  1 0  "01010000001001001111111110110100"   // (R[4]) = load__pl_rd_res_reg_const_1_B1 (-76,DMb,SP); 
000037  1 0  "01010100000001010000000000000001"   // (R[5]) = const_4_B2 (); 
000038  1 0  "10101000011001000000000000000000"   // (DMb) = store_1_B1 (R[4],R[3],DMb); 
000039  1 0  "10101000011001010000000000000100"   // (DMb) = store__pl_const_1_B1 (R[5],R[3],DMb); 
000040  1 0  "00100100000000000000000000000111"   // () = j_const_1_B1 (7); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m35, jump target: m40 (next offset: 45)
000042  1 0  "10101000100001010000000000000000"   // (DMb_stat) = store_2_B1 (R[5],R[4],DMb_stat); 
000043  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000044  1 0  "01001000000000110000000000000000"   // (R[3]) = const_3_B3 (); 

// m28;   next: m40 (next offset: 48)
000045  1 0  "01010100000001000000000000011000"   // (R[4]) = const_2_B2 (); 
000046  1 0  "10101000110001000000000000000000"   // (DMb_stat) = store_2_B1 (R[4],R[6],DMb_stat); 
000047  1 0  "01001000000000110000000000000000"   // (R[3]) = const_3_B3 (); 

// m40 (next offset: /)
000048  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000049  1 0  "00110000100000000000000000000000"   // () = __rts_jr_1_B1 (R[4]); 
000050  1 0  "00001000001000011111111110110000"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-80,SP,SP); 
000051  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

