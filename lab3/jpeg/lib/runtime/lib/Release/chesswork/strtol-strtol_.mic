
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:24 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i strtol-strtol_ tlx


// m492;   next: m330 (next offset: 7)
000000  1 0  "00001000001000010000000000100100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (36,SP,SP); 
000001  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000002  1 0  "01010100011010010000000000000000"   // (R[9]) = w32_const_bor_1_B1 (R[3],0); 
000003  1 0  "01010100100001110000000000000000"   // R[7] = R[4]; 
000004  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000005  1 0  "10101000001010011111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[9],SP,-8); 
000006  1 0  "01010100000000110000000000000001"   // (R[3]) = const_10_B2 (); 

// m330;   next: m23, jump target: m330 (next offset: 14)
000007  1 0  "00000000111010000000100000110001"   // (R[8],R[7]) = load__pl_const_1_B1 (R[7],DMb); 
000008  1 0  "00000001000010010101000000000001"   // (R[10],) = _pl_2_B1 (R[9],R[8]); 
000009  1 0  "00111001010010100000000000000000"   // (R[10]) = load_1_B1 (R[10],DMb_stat); 
000010  1 0  "00010001010010100000000001000000"   // (R[10]) = _ad_const_4_B1 (R[10]); 
000011  1 0  "00100001010000001111111111111010"   // () = br_nez_const_1_B1 (R[10],-6); 
000012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000013  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m23;   next: m28, jump target: m26 (next offset: 23)
000014  1 0  "01010100111010100000000000000000"   // R[10] = R[7]; 
000015  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000016  1 0  "01100101000010110000000000101101"   // (R[11]) = _eq_const_5_B1 (R[8]); 
000017  1 0  "00000000111010010000100000110000"   // (R[9],R[7]) = load__pl_const_2_B1 (R[7],DMb); 
000018  1 0  "10101000001001001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[4],SP,-12); 
000019  1 0  "10101000001001011111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[5],SP,-16); 
000020  1 0  "00100001011000000000000000001011"   // () = nez_br_const_1_B1 (R[11],11); 
000021  1 0  "10101000001001111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[7],SP,-28); 
000022  1 0  "10101000001010011111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[9],SP,-24); 

// m28;   next: m31, jump target: m32 (next offset: 27)
000023  1 0  "10010101000001010000000000101011"   // (R[5]) = _ne_const_1_B1 (R[8]); 
000024  1 0  "00100000101000000000000000000011"   // () = nez_br_const_1_B1 (R[5],3); 
000025  1 0  "01001000000000110000000000000000"   // (R[3]) = const_9_B3 (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m31;   next: m495 (next offset: 29)
000027  1 0  "01010101001010000000000000000000"   // R[8] = R[9]; 
000028  1 0  "01010100111010100000000000000000"   // R[10] = R[7]; 

// m32;   next: m495 (next offset: 29)

// m495;   next: m353 (next offset: 33)
000029  1 0  "10101000001010001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[8],SP,-24); 
000030  1 0  "01010101010001110000000000000000"   // R[7] = R[10]; 
000031  1 0  "10101000001010101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[10],SP,-28); 
000032  1 0  "01010101000010010000000000000000"   // R[9] = R[8]; 

// m26;   next: m353 (next offset: 33)

// m353;   next: m62, jump target: m63 (next offset: 46)
000033  1 0  "00000000110000000010100000001011"   // (R[5]) = eqz_1_B1 (R[6]); 
000034  1 0  "00110100111010000000000000000000"   // (R[8]) = load_2_B1 (R[7],DMb); 
000035  1 0  "01100100110001110000000000010000"   // (R[7]) = _eq_const_2_B1 (R[6]); 
000036  1 0  "01100101000001000000000001011000"   // (R[4]) = _eq_const_4_B1 (R[8]); 
000037  1 0  "01100101001010010000000000110000"   // (R[9]) = _eq_const_1_B1 (R[9]); 
000038  1 0  "01100101000010000000000001111000"   // (R[8]) = _eq_const_3_B1 (R[8]); 
000039  1 0  "00000000101001110010100000001010"   // (R[5]) = lor_1_B1 (R[5],R[7]); 
000040  1 0  "00000000101010010011100000000011"   // (R[7]) = land_1_B1 (R[5],R[9]); 
000041  1 0  "00000000100010000010000000001010"   // (R[4]) = lor_1_B1 (R[8],R[4]); 
000042  1 0  "00000000100001110011000000000011"   // (R[6]) = land_1_B1 (R[7],R[4]); 
000043  1 0  "00010100110000000000000000001001"   // () = eqz_br_const_2_B1 (R[6],9); 
000044  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000045  1 0  "10101000001000111111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[3],SP,-32); 

// m62;   next: m356 (next offset: 54)
000046  1 0  "01010100000001010000000000010000"   // (R[5]) = const_8_B2 (); 
000047  1 0  "01010000001001101111111111100100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000048  1 0  "00001000110001100000000000000001"   // (R[6],MC) = _pl_const_3_B1 (R[6]); 
000049  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000050  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000051  1 0  "00000000110001000000100000110000"   // (R[4],R[6]) = load__pl_const_2_B1 (R[6],DMb); 
000052  1 0  "10101000001001101111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[6],SP,-28); 
000053  1 0  "10101000001001001111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[4],SP,-24); 

// m63;   next: m356 (next offset: 54)

// m356;   next: m69, jump target: m75 (next offset: 57)
000054  1 0  "00100000101000000000000000001000"   // () = br_nez_const_1_B1 (R[5],8); 
000055  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m69;   next: m73, jump target: m72 (next offset: 62)
000057  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000058  1 0  "01100100110001100000000000110000"   // (R[6]) = _eq_const_1_B1 (R[6]); 
000059  1 0  "00100000110000000000000000000011"   // () = nez_br_const_1_B1 (R[6],3); 
000060  1 0  "01010100000001010000000000001000"   // (R[5]) = const_7_B2 (); 
000061  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m73;   next: m496 (next offset: 64)
000062  1 0  "01010100000001010000000000001010"   // (R[5]) = const_6_B2 (); 
000063  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 

// m72;   next: m496 (next offset: 64)

// m496;   next: m359 (next offset: 64)

// m75;   next: m359 (next offset: 64)

// m359;   next: m81, jump target: m80 (next offset: 68)
000064  1 0  "01001000000001001000000000000000"   // (R[4]) = const_5_B1 (); 
000065  1 0  "00100000011000000000000000000010"   // () = br_nez_const_1_B1 (R[3],2); 
000066  1 0  "01001000000001100111111111111111"   // (R[6]) = lhi_const_1_B1 (32767); 
000067  1 0  "01010100110001101111111111111111"   // (R[6]) = w32_const_bor_1_B1 (R[6],65535); 

// m81;   next: m436 (next offset: 69)
000068  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 

// m80;   next: m436 (next offset: 69)

// m436;   next: m437 (next offset: 72)
000069  1 0  "10101000001001101111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[6],SP,-36); 
000070  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000071  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m437 subroutine call;   next: m497 (next offset: 72)

// m497;   next: m87, jump target: m94 (next offset: 76)
000072  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000073  1 0  "00010100100000000000000000001001"   // () = eqz_br_const_1_B1 (R[4],9); 
000074  1 0  "01010100011001110000000000000000"   // R[7] = R[3]; 
000075  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m87;   next: m90, jump target: m91 (next offset: 80)
000076  1 0  "00000000110000000001100000010000"   // (R[3]) = _le_const_1_B2 (R[6]); 
000077  1 0  "00100000011000000000000000000100"   // () = nez_br_const_1_B1 (R[3],4); 
000078  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000079  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m90;   next: m93 (next offset: 83)
000080  1 0  "01010000001000111111111111101100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000081  1 0  "00000000110000110011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[3]); 
000082  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_3_B1 (R[7]); 

// m91;   next: m93 (next offset: 83)

// m93;   next: m491 (next offset: 84)
000083  1 0  "00000000000001100011000000011000"   // (R[6],MC) = _mi_const_1_B1 (R[6]); 

// m94;   next: m491 (next offset: 84)

// m491;   next: m366 (next offset: 93)
000084  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000085  1 0  "01010000001010001111111111111000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000086  1 0  "01010100011000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[3],0); 
000087  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 
000088  1 0  "01001000000000110000000000000000"   // (R[3]) = const_9_B3 (); 
000089  1 0  "01010000001011101111111111101000"   // (R[14]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000090  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000091  1 0  "01010000001010011111111111101100"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000092  1 0  "01001000000011010000000000000000"   // (R[13]) = const_9_B3 (); 

// m366;   next: m370, jump target: m118 (next offset: 100)
000093  1 0  "00010001110011110000000011111111"   // (R[15]) = __uchar_1_B1 (R[14]); 
000094  1 0  "00000001000011110111100000000001"   // (R[15],) = _pl_2_B1 (R[8],R[15]); 
000095  1 0  "00111001111011110000000000000000"   // (R[15]) = load_1_B1 (R[15],DMb_stat); 
000096  1 0  "00010001111000100000000000000100"   // (R[2]) = _ad_const_3_B1 (R[15]); 
000097  1 0  "00100000010000000000000000001100"   // () = br_nez_const_1_B1 (R[2],12); 
000098  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000099  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m370;   next: m374, jump target: m2 (next offset: 104)
000100  1 0  "00010001111000100000000000000011"   // (R[2]) = _ad_const_2_B1 (R[15]); 
000101  1 0  "00010100010000000000000000110011"   // () = eqz_br_const_1_B1 (R[2],51); 
000102  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000103  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m374;   next: m152, jump target: m151 (next offset: 108)
000104  1 0  "00010001111000100000000000000010"   // (R[2]) = _ad_const_1_B1 (R[15]); 
000105  1 0  "00100000010000000000000000000010"   // () = br_nez_const_1_B1 (R[2],2); 
000106  1 0  "01010100000011110000000000110111"   // (R[15]) = const_1_B2 (); 
000107  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m152;   next: m154 (next offset: 109)
000108  1 0  "01010100000011110000000001010111"   // (R[15]) = const_2_B2 (); 

// m151;   next: m154 (next offset: 109)

// m154, jump target: m159 (next offset: 111)
000109  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000110  1 0  "00000001110011110111000000011000"   // (R[14],MC) = _mi_1_B1 (R[14],R[15]); 

// m118;   next: m159 (next offset: 112)
000111  1 0  "00001001110011101111111111010000"   // (R[14],MC) = _pl_const_2_B1 (R[14]); 

// m159;   next: m164, jump target: m2 (next offset: 116)
000112  1 0  "00000001110010010111100000001100"   // (R[15]) = _ge_1_B1 (R[14],R[9]); 
000113  1 0  "00100001111000000000000000100111"   // () = nez_br_const_1_B1 (R[15],39); 
000114  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000115  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m164;   next: m166 (next offset: 116)

// m166;   next: m171, jump target: m169 (next offset: 120)
000116  1 0  "00000001101000000111100000010011"   // (R[15]) = _lt_const_1_B2 (R[13]); 
000117  1 0  "00100001111000000000000000100001"   // () = nez_br_const_1_B1 (R[15],33); 
000118  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000119  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m171;   next: m388, jump target: m381 (next offset: 125)
000120  1 0  "00000001110001100001000000001110"   // (R[2]) = _gt_1_B1 (R[14],R[6]); 
000121  1 0  "00000000011010010110100000100000"   // (R[13]) = _ml_1_B1 (R[3],R[9]); 
000122  1 0  "00100000100000000000000000001111"   // () = br_nez_const_1_B1 (R[4],15); 
000123  1 0  "00000000011001110111100000001011"   // (R[15]) = _eq_1_B1 (R[3],R[7]); 
000124  1 0  "00000000010011110111100000000011"   // (R[15]) = land_1_B1 (R[15],R[2]); 

// m388;   next: m210, jump target: m209 (next offset: 130)
000125  1 0  "00000000011001110001100000001110"   // (R[3]) = _gt_1_B1 (R[3],R[7]); 
000126  1 0  "00000000011011110001100000001010"   // (R[3]) = lor_1_B1 (R[3],R[15]); 
000127  1 0  "00100000011000000000000000000100"   // () = nez_br_const_1_B1 (R[3],4); 
000128  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000129  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m210, jump target: m501 (next offset: 133)
000130  1 0  "00000001101011100001100000000001"   // (R[3],) = _pl_1_B1 (R[13],R[14]); 
000131  1 0  "00100100000000000000000000010100"   // () = j_const_1_B1 (20); 
000132  1 0  "01010100000011010000000000000001"   // (R[13]) = const_10_B2 (); 

// m209, jump target: m501 (next offset: 139)
000133  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000134  1 0  "01010100000011010000000000100010"   // (R[13]) = const_4_B2 (); 
000135  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_2_B1 (R[13],R[3],DMb_stat); 
000136  1 0  "00001000000011011111111111111111"   // (R[13]) = const_3_B1 (); 
000137  1 0  "00100100000000000000000000001110"   // () = j_const_1_B1 (14); 
000138  1 0  "01010000001000111111111111011100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m381;   next: m191, jump target: m190 (next offset: 144)
000139  1 0  "00000000011001110001100000010011"   // (R[3]) = _lt_1_B1 (R[3],R[7]); 
000140  1 0  "00000000011011110001100000001010"   // (R[3]) = lor_1_B1 (R[3],R[15]); 
000141  1 0  "00100000011000000000000000000100"   // () = nez_br_const_1_B1 (R[3],4); 
000142  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000143  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m191, jump target: m501 (next offset: 147)
000144  1 0  "00000001101011100001100000011000"   // (R[3],MC) = _mi_1_B1 (R[13],R[14]); 
000145  1 0  "00100100000000000000000000000110"   // () = j_const_1_B1 (6); 
000146  1 0  "01010100000011010000000000000001"   // (R[13]) = const_10_B2 (); 

// m190;   next: m501 (next offset: 152)
000147  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000148  1 0  "01010100000011010000000000100010"   // (R[13]) = const_4_B2 (); 
000149  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_2_B1 (R[13],R[3],DMb_stat); 
000150  1 0  "00001000000011011111111111111111"   // (R[13]) = const_3_B1 (); 
000151  1 0  "01001000000000111000000000000000"   // (R[3]) = const_5_B1 (); 

// m501;   next: m214 (next offset: 152)

// m169;   next: m214 (next offset: 152)

// m214, jump target: m366 (next offset: 154)
000152  1 0  "00100111111111111111111111000100"   // () = j_const_1_B1 (-60); 
000153  1 0  "00000000101011100000100000110001"   // (R[14],R[5]) = load__pl_const_1_B1 (R[5],DMb); 

// m2;   next: m391 (next offset: 154)

// m391;   next: m394, jump target: m231 (next offset: 158)
000154  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000155  1 0  "00010100110000000000000000000110"   // () = eqz_br_const_1_B1 (R[6],6); 
000156  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000157  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m394;   next: m227, jump target: m228 (next offset: 161)
000158  1 0  "00010101101000000000000000000010"   // () = eqz_br_const_1_B1 (R[13],2); 
000159  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000160  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m227;   next: m230 (next offset: 162)
000161  1 0  "00001000101001001111111111111111"   // (R[4],MC) = _pl_const_1_B1 (R[5]); 

// m228;   next: m230 (next offset: 162)

// m230;   next: m234 (next offset: 163)
000162  1 0  "10101000110001000000000000000000"   // (DMb) = store_1_B1 (R[4],R[6],DMb); 

// m231;   next: m234 (next offset: 163)

// m234 (next offset: /)
000163  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000164  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000165  1 0  "00110000110000000000000000000000"   // () = __rts_jr_1_B1 (R[6]); 
000166  1 0  "00001000001000011111111111011100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-36,SP,SP); 
000167  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

