
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:31:27 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../.. -I../../../../isg -r +f +i qsort-med3_ tlx


// m3;   next: m4 (next offset: 8)
000000  1 0  "00001000001000010000000000010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (20,SP,SP); 
000001  1 0  "10101000001001101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[6],SP,-8); 
000002  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000003  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000004  1 0  "10101000001000101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[2],SP,-20); 
000005  1 0  "00101100111000000000000000000000"   // (LR) = jalr_1_B1 (R[7]); 
000006  1 0  "10101000001001111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[7],SP,-4); 
000007  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m4 subroutine call;   next: m5 (next offset: 8)

// m5;   next: m26, jump target: m9 (next offset: 13)
000008  1 0  "00000000011000000011100000010011"   // (R[7]) = _lt_const_1_B2 (R[3]); 
000009  1 0  "01010000001001001111111111110100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000010  1 0  "00100000111000000000000000010100"   // () = nez_br_const_1_B1 (R[7],20); 
000011  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000012  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m26;   next: m27 (next offset: 16)
000013  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000014  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000015  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m27 subroutine call;   next: m28 (next offset: 16)

// m28;   next: m33, jump target: m31 (next offset: 20)
000016  1 0  "00000000011000000010000000001110"   // (R[4]) = _gt_const_1_B2 (R[3]); 
000017  1 0  "00100000100000000000000000001011"   // () = nez_br_const_1_B1 (R[4],11); 
000018  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000019  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m33;   next: m34 (next offset: 24)
000020  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000021  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000022  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000023  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m34 subroutine call;   next: m35 (next offset: 24)

// m35;   next: m39, jump target: m44 (next offset: 28)
000024  1 0  "00000000011000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[3]); 
000025  1 0  "00100000101000000000000000010111"   // () = nez_br_const_1_B1 (R[5],23); 
000026  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000027  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m39, jump target: m44 (next offset: 30)
000028  1 0  "00100100000000000000000000010101"   // () = j_const_1_B1 (21); 
000029  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m31, jump target: m44 (next offset: 32)
000030  1 0  "00100100000000000000000000010011"   // () = j_const_1_B1 (19); 
000031  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m9;   next: m10 (next offset: 35)
000032  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000033  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000034  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m10 subroutine call;   next: m11 (next offset: 35)

// m11;   next: m16, jump target: m14 (next offset: 39)
000035  1 0  "00000000011000000010000000010011"   // (R[4]) = _lt_const_1_B2 (R[3]); 
000036  1 0  "00100000100000000000000000001011"   // () = nez_br_const_1_B1 (R[4],11); 
000037  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000038  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m16;   next: m17 (next offset: 43)
000039  1 0  "01010000001000111111111111111100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000040  1 0  "00101100011000000000000000000000"   // (LR) = jalr_1_B1 (R[3]); 
000041  1 0  "01010000001001001111111111110000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000042  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m17 subroutine call;   next: m18 (next offset: 43)

// m18;   next: m22, jump target: m44 (next offset: 47)
000043  1 0  "00000000011000000010100000010011"   // (R[5]) = _lt_const_1_B2 (R[3]); 
000044  1 0  "00100000101000000000000000000100"   // () = nez_br_const_1_B1 (R[5],4); 
000045  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000046  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m22, jump target: m44 (next offset: 49)
000047  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000048  1 0  "01010000001000111111111111110000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m14;   next: m44 (next offset: 50)
000049  1 0  "01010000001000111111111111110100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m44 (next offset: /)
000050  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000051  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000052  1 0  "00001000001000011111111111101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-20,SP,SP); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

