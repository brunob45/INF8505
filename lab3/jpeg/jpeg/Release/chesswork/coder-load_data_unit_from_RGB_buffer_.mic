
// File generated by mist version N-2018.03#7d02e3ca79#180723, Mon Apr 15 11:28:05 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i coder-load_data_unit_from_RGB_buffer_ tlx


// m9;   next: m120, jump target: m13 (next offset: 8)
000000  1 0  "00001000100000110000000000000100"   // (R[3],MC) = _pl_const_3_B1 (R[4]); 
000001  1 0  "00001000001000010000000000101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (44,SP,SP); 
000002  1 0  "10001100111010010000000000000100"   // (R[9]) = _lt_const_2_B1 (R[7]); 
000003  1 0  "01001100011011000000000000000000"   // (R[12]) = load_3_B1 (R[3],DMb); 
000004  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000005  1 0  "00100001001000000000000000010110"   // () = nez_br_const_1_B1 (R[9],22); 
000006  1 0  "01001100011010100000000000000010"   // (R[10]) = load__pl_const_7_B1 (R[3],DMb); 
000007  1 0  "01001000000000110000000000000000"   // (R[3]) = const_12_B3 (); 

// m120;   next: m140 (next offset: 18)
000008  1 0  "01001000000001101111111100000000"   // (R[6]) = lhi_const_1_B1 (-256); 
000009  1 0  "01001000000001010000000000010011"   // (R[5]) = lhi_const_1_B1 (19); 
000010  1 0  "01001000000001000000000000010101"   // (R[4]) = lhi_const_1_B1 (21); 
000011  1 0  "10001000111001110000000000000110"   // (R[7]) = _ls_const_1_B1 (R[7]); 
000012  1 0  "01010100110001101111111100000000"   // (R[6]) = w32_const_bor_1_B1 (R[6],-256); 
000013  1 0  "01010100101001010000000000010011"   // (R[5]) = w32_const_bor_1_B1 (R[5],19); 
000014  1 0  "01010100100001000000000000010101"   // (R[4]) = w32_const_bor_1_B1 (R[4],21); 
000015  1 0  "00000000110001110011100000000001"   // (R[7],) = _pl_1_B1 (R[6],R[7]); 
000016  1 0  "10111100101000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[5]); 
000017  1 0  "10111100100000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[4]); 

// m140;   next: m81 (next offset: 19)
000018  1 0  "10111100000000000000000000001000"   // (LC) = wr_res_reg_const_1_B1 (8); 

// m81;   next: m87, loop target: m81 (next offset: 22)
000019  1 0  "00000000111001000000100000110000"   // (R[4],R[7]) = load__pl_const_1_B1 (R[7],DMb_stat); 
000020  1 0  "00000001000001000000100000110101"   // (R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb) = store__pl_const_1_B1 (R[4],R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb); 
000021  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m87;   next: m142, jump target: m140 (next offset: 27)
000022  1 0  "00001000011000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[3]); 
000023  1 0  "10001100011001000000000000001000"   // (R[4]) = _lt_const_1_B1 (R[3]); 
000024  1 0  "00100000100000001111111111111000"   // () = nez_br_const_1_B1 (R[4],-8); 
000025  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000026  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m142, jump target: m94 (next offset: 29)
000027  1 0  "00100100000000000000000011010111"   // () = j_const_1_B1 (215); 
000028  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m13;   next: m139 (next offset: 71)
000029  1 0  "00001001010000101111111111111111"   // (R[2],MC) = _pl_const_7_B1 (R[10]); 
000030  1 0  "10001000110001100000000000000100"   // (R[6]) = _ls_const_3_B1 (R[6]); 
000031  1 0  "10011000111010010000000000000001"   // (R[9]) = _rs_const_3_B1 (R[7]); 
000032  1 0  "00000000010001100011000000011000"   // (R[6],MC) = _mi_1_B1 (R[2],R[6]); 
000033  1 0  "10001001001000100000000000000011"   // (R[2]) = _ls_const_4_B1 (R[9]); 
000034  1 0  "01001000000011010000000001001010"   // (R[13]) = lhi_const_1_B1 (74); 
000035  1 0  "00000000110000100011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[2]); 
000036  1 0  "01010101101011010000000001001010"   // (R[13]) = w32_const_bor_1_B1 (R[13],74); 
000037  1 0  "00010000111000100000000000000001"   // (R[2]) = _ad_const_1_B1 (R[7]); 
000038  1 0  "01010100000010100000000000110000"   // (R[10]) = const_10_B2 (); 
000039  1 0  "10111101101000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[13]); 
000040  1 0  "01001000000010110000000011100100"   // (R[11]) = lhi_const_1_B1 (228); 
000041  1 0  "00000000101010100010100000100000"   // (R[5]) = _ml_2_B1 (R[5],R[10]); 
000042  1 0  "10001001001010010000000000000101"   // (R[9]) = _ls_const_5_B1 (R[9]); 
000043  1 0  "10001000010011010000000000000010"   // (R[13]) = _ls_const_6_B1 (R[2]); 
000044  1 0  "01010101011010110000000011100100"   // (R[11]) = w32_const_bor_1_B1 (R[11],228); 
000045  1 0  "00000000110011000101000000100000"   // (R[10]) = _ml_4_B1 (R[6],R[12]); 
000046  1 0  "01010100000001110000000000000011"   // (R[7]) = const_1_B2 (); 
000047  1 0  "00000001001011010100100000000001"   // (R[9],) = _pl_1_B1 (R[9],R[13]); 
000048  1 0  "10111101011000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[11]); 
000049  1 0  "00000000111010100110100000100000"   // (R[13]) = _ml_2_B1 (R[10],R[7]); 
000050  1 0  "01010000100011100000000000000000"   // (R[14]) = load_2_B1 (R[4],DMb); 
000051  1 0  "01001000000010110000000000000000"   // (R[11]) = lhi_const_1_B1 (0); 
000052  1 0  "01010101011010100000000000000000"   // (R[10]) = w32_const_bor_1_B1 (R[11],0); 
000053  1 0  "00000000111011000011000000100000"   // (R[6]) = _ml_3_B1 (R[12],R[7]); 
000054  1 0  "00000001101011100110100000000001"   // (R[13],) = _pl_1_B1 (R[14],R[13]); 
000055  1 0  "00001001010001000000000001000000"   // (R[4],MC) = _pl_const_8_B1 (R[10]); 
000056  1 0  "10001001100011000000000000000001"   // (R[12]) = _ls_const_7_B1 (R[12]); 
000057  1 0  "00001000000011101111111111111111"   // (R[14]) = const_9_B1 (); 
000058  1 0  "01010100000010110000000000011000"   // (R[11]) = const_11_B2 (); 
000059  1 0  "10101000001001101111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[6],SP,-12); 
000060  1 0  "00000000100010010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[9]); 
000061  1 0  "00000001110001100011000000011000"   // (R[6],MC) = _mi_1_B1 (R[14],R[6]); 
000062  1 0  "00000000010010110001000000100000"   // (R[2]) = _ml_2_B1 (R[2],R[11]); 
000063  1 0  "00000000111011000011100000100000"   // (R[7]) = _ml_2_B1 (R[12],R[7]); 
000064  1 0  "00000000101011010010100000000001"   // (R[5],) = _pl_1_B1 (R[13],R[5]); 
000065  1 0  "00000001001010100100100000000001"   // (R[9],) = _pl_1_B1 (R[10],R[9]); 
000066  1 0  "00000000010001010010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[2]); 
000067  1 0  "10101000001001001111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[4],SP,-16); 
000068  1 0  "10101000001001101111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[6],SP,-20); 
000069  1 0  "10101000001001111111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[7],SP,-24); 
000070  1 0  "10101000001000111111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[3],SP,-8); 

// m139;   next: m54 (next offset: 74)
000071  1 0  "10111100000000000000000000000100"   // (LC) = wr_res_reg_const_1_B1 (4); 
000072  1 0  "10101000001001011111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[5],SP,-28); 
000073  1 0  "10101000001010011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[9],SP,-32); 

// m54;   next: m60, loop target: m54 (next offset: 229)
000074  1 0  "00000000011001010101000000000001"   // (R[10],) = _pl_1_B1 (R[5],R[3]); 
000075  1 0  "01010100000001101001011001000110"   // (R[6]) = const_3_B1 (); 
000076  1 0  "00000001010010010001000000110001"   // (R[9],R[10]) = load__pl_const_2_B1 (R[10],DMb); 
000077  1 0  "00000001010001001111100000110001"   // (R[4],R[10]) = load__pl_const_3_B1 (R[10],DMb); 
000078  1 0  "00000001010001110010000000110001"   // (R[7],R[10]) = load__pl_const_4_B1 (R[10],DMb); 
000079  1 0  "00000000110001110010100000100000"   // (R[5]) = _ml_1_B1 (R[7],R[6]); 
000080  1 0  "01011100001001001111111111011111"   // (__spill_DMb[-33]) = stack_store_bndl_B1 (R[4],SP,-33); 
000081  1 0  "01010100000000100100110010001011"   // (R[2]) = const_2_B2 (); 
000082  1 0  "01011100001001111111111111011110"   // (__spill_DMb[-34]) = stack_store_bndl_B1 (R[7],SP,-34); 
000083  1 0  "00000000010001000010000000100000"   // (R[4]) = _ml_1_B1 (R[4],R[2]); 
000084  1 0  "01010100000001110001110100101111"   // (R[7]) = const_4_B2 (); 
000085  1 0  "01011100001010011111111111011101"   // (__spill_DMb[-35]) = stack_store_bndl_B1 (R[9],SP,-35); 
000086  1 0  "00000000100001010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[5]); 
000087  1 0  "00000000111010010100100000100000"   // (R[9]) = _ml_1_B1 (R[9],R[7]); 
000088  1 0  "00000000100010010010000000000001"   // (R[4],) = _pl_1_B1 (R[4],R[9]); 
000089  1 0  "10011000100001000000000000010000"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000090  1 0  "00010000100001000000000011111111"   // (R[4]) = __uchar_1_B1 (R[4]); 
000091  1 0  "00001000100001001111111110000000"   // (R[4],MC) = _pl_const_5_B1 (R[4]); 
000092  1 0  "00000001000001000000100000110101"   // (R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb) = __schar_store__pl_const_1_B1 (R[8],R[4],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb); 
000093  1 0  "10101000001000111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[3],SP,-40); 
000094  1 0  "00001000000001011101010011001110"   // (R[5]) = const_5_B1 (); 
000095  1 0  "00000001010010011111100000110001"   // (R[9],R[10]) = load__pl_const_3_B1 (R[10],DMb); 
000096  1 0  "00000001010000111111100000110001"   // (R[3],R[10]) = load__pl_const_3_B1 (R[10],DMb); 
000097  1 0  "01011100001010011111111111010111"   // (__spill_DMb[-41]) = stack_store_bndl_B1 (R[9],SP,-41); 
000098  1 0  "01011100001000111111111111011100"   // (__spill_DMb[-36]) = stack_store_bndl_B1 (R[3],SP,-36); 
000099  1 0  "00000000011001100001100000100000"   // (R[3]) = _ml_1_B1 (R[3],R[6]); 
000100  1 0  "00000000010010010100100000100000"   // (R[9]) = _ml_1_B1 (R[9],R[2]); 
000101  1 0  "00000001010001001110100000110001"   // (R[4],R[10]) = load__pl_const_5_B1 (R[10],DMb); 
000102  1 0  "00000000011010010001100000000001"   // (R[3],) = _pl_1_B1 (R[9],R[3]); 
000103  1 0  "00000000100001110011100000100000"   // (R[7]) = _ml_1_B1 (R[4],R[7]); 
000104  1 0  "00000000011001110011100000000001"   // (R[7],) = _pl_1_B1 (R[3],R[7]); 
000105  1 0  "10011000111001110000000000010000"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000106  1 0  "01010000001010111111111111110100"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000107  1 0  "00010000111001110000000011111111"   // (R[7]) = __uchar_1_B1 (R[7]); 
000108  1 0  "00001001010010010000000000000010"   // (R[9],MC) = _pl_const_6_B1 (R[10]); 
000109  1 0  "00001000111001111111111110000000"   // (R[7],MC) = _pl_const_5_B1 (R[7]); 
000110  1 0  "00000001001010110001100000011000"   // (R[3],MC) = _mi_1_B1 (R[9],R[11]); 
000111  1 0  "00000001000001110011100000110101"   // (R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb) = __schar_store__pl_const_2_B1 (R[8],R[7],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb); 
000112  1 0  "01010100000001110101010011001100"   // (R[7]) = const_6_B2 (); 
000113  1 0  "01010000001011001111111111101100"   // (R[12]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000114  1 0  "00000001001011000100100000000001"   // (R[9],) = _pl_1_B1 (R[9],R[12]); 
000115  1 0  "00111000011011010000000000000000"   // (R[13]) = load_1_B1 (R[3],DMb); 
000116  1 0  "00111001001011000000000000000000"   // (R[12]) = load_1_B1 (R[9],DMb); 
000117  1 0  "00000000111011000111100000100000"   // (R[15]) = _ml_1_B1 (R[12],R[7]); 
000118  1 0  "00000000101011010111000000100000"   // (R[14]) = _ml_1_B1 (R[13],R[5]); 
000119  1 0  "01011100001011001111111111010101"   // (__spill_DMb[-43]) = stack_store_bndl_B1 (R[12],SP,-43); 
000120  1 0  "01011100001011011111111111010110"   // (__spill_DMb[-42]) = stack_store_bndl_B1 (R[13],SP,-42); 
000121  1 0  "00000000110011000110000000100000"   // (R[12]) = _ml_1_B1 (R[12],R[6]); 
000122  1 0  "00000000010011010110100000100000"   // (R[13]) = _ml_1_B1 (R[13],R[2]); 
000123  1 0  "00000001010010110101100000011000"   // (R[11],MC) = _mi_1_B1 (R[10],R[11]); 
000124  1 0  "00000001100011010101000000000001"   // (R[10],) = _pl_1_B1 (R[13],R[12]); 
000125  1 0  "00111001011011000000000000000000"   // (R[12]) = load_1_B1 (R[11],DMb); 
000126  1 0  "00000001110011110111000000011000"   // (R[14],MC) = _mi_1_B1 (R[14],R[15]); 
000127  1 0  "10001001100011010000000000001111"   // (R[13]) = _ls_const_2_B1 (R[12]); 
000128  1 0  "00000001101011100110100000000001"   // (R[13],) = _pl_1_B1 (R[14],R[13]); 
000129  1 0  "01010100000011100001110100101111"   // (R[14]) = const_4_B2 (); 
000130  1 0  "01011100001011001111111111010100"   // (__spill_DMb[-44]) = stack_store_bndl_B1 (R[12],SP,-44); 
000131  1 0  "00000001100011100110000000100000"   // (R[12]) = _ml_1_B1 (R[12],R[14]); 
000132  1 0  "00000001010011000101000000000001"   // (R[10],) = _pl_1_B1 (R[10],R[12]); 
000133  1 0  "10011001010010100000000000010000"   // (R[10]) = _rs_const_1_B1 (R[10]); 
000134  1 0  "00010001010010100000000011111111"   // (R[10]) = __uchar_1_B1 (R[10]); 
000135  1 0  "00001001010010101111111110000000"   // (R[10],MC) = _pl_const_5_B1 (R[10]); 
000136  1 0  "00000001000010100000100000110101"   // (R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb) = __schar_store__pl_const_1_B1 (R[8],R[10],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb); 
000137  1 0  "10011001101010100000000000010000"   // (R[10]) = _rs_const_1_B1 (R[13]); 
000138  1 0  "00111001001010010000000000000011"   // (R[9]) = load__pl_const_6_B1 (R[9],DMb); 
000139  1 0  "00111000011000110000000000000011"   // (R[3]) = load__pl_const_6_B1 (R[3],DMb); 
000140  1 0  "00000000110010010011000000100000"   // (R[6]) = _ml_1_B1 (R[9],R[6]); 
000141  1 0  "00000000010000110001000000100000"   // (R[2]) = _ml_1_B1 (R[3],R[2]); 
000142  1 0  "00000000010001100001000000000001"   // (R[2],) = _pl_1_B1 (R[2],R[6]); 
000143  1 0  "00111001011001100000000000000011"   // (R[6]) = load__pl_const_6_B1 (R[11],DMb); 
000144  1 0  "00111000001011001111111111010111"   // (R[12]) = stack_load_bndl_B1 (__spill_DMb[-41],SP,-41); 
000145  1 0  "00111000001011011111111111011100"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-36],SP,-36); 
000146  1 0  "00000000111011010110100000100000"   // (R[13]) = _ml_1_B1 (R[13],R[7]); 
000147  1 0  "00000000101011000110000000100000"   // (R[12]) = _ml_1_B1 (R[12],R[5]); 
000148  1 0  "00000001100011010110000000011000"   // (R[12],MC) = _mi_1_B1 (R[12],R[13]); 
000149  1 0  "10001000100011010000000000001111"   // (R[13]) = _ls_const_2_B1 (R[4]); 
000150  1 0  "00000000110011100111000000100000"   // (R[14]) = _ml_1_B1 (R[6],R[14]); 
000151  1 0  "00000001100011010110100000000001"   // (R[13],) = _pl_1_B1 (R[12],R[13]); 
000152  1 0  "00000000010011100111000000000001"   // (R[14],) = _pl_1_B1 (R[2],R[14]); 
000153  1 0  "00000000011001010101100000100000"   // (R[11]) = _ml_1_B1 (R[3],R[5]); 
000154  1 0  "00000000111010010110000000100000"   // (R[12]) = _ml_1_B1 (R[9],R[7]); 
000155  1 0  "00000001011011000101100000011000"   // (R[11],MC) = _mi_1_B1 (R[11],R[12]); 
000156  1 0  "10001000110000100000000000001111"   // (R[2]) = _ls_const_2_B1 (R[6]); 
000157  1 0  "00000000010010110001000000000001"   // (R[2],) = _pl_1_B1 (R[11],R[2]); 
000158  1 0  "00111000001010111111111111011111"   // (R[11]) = stack_load_bndl_B1 (__spill_DMb[-33],SP,-33); 
000159  1 0  "00111000001011001111111111011110"   // (R[12]) = stack_load_bndl_B1 (__spill_DMb[-34],SP,-34); 
000160  1 0  "00000000101010110010100000100000"   // (R[5]) = _ml_1_B1 (R[11],R[5]); 
000161  1 0  "00000000111011000011100000100000"   // (R[7]) = _ml_1_B1 (R[12],R[7]); 
000162  1 0  "00000000101001110010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[7]); 
000163  1 0  "00111000001001111111111111011101"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-35],SP,-35); 
000164  1 0  "10011001110011100000000000010000"   // (R[14]) = _rs_const_1_B1 (R[14]); 
000165  1 0  "00010001110011100000000011111111"   // (R[14]) = __uchar_1_B1 (R[14]); 
000166  1 0  "10001000111011110000000000001111"   // (R[15]) = _ls_const_2_B1 (R[7]); 
000167  1 0  "00001001110011101111111110000000"   // (R[14],MC) = _pl_const_5_B1 (R[14]); 
000168  1 0  "00000000101011110010100000000001"   // (R[5],) = _pl_1_B1 (R[5],R[15]); 
000169  1 0  "00000001000011101100100000110101"   // (R[8],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb) = __schar_store__pl_const_3_B1 (R[8],R[14],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb); 
000170  1 0  "10011000101001010000000000010000"   // (R[5]) = _rs_const_1_B1 (R[5]); 
000171  1 0  "10110100101011100000000000001000"   // (R[14]) = __schar_1_B1 (R[5]); 
000172  1 0  "01010100000001010110101100101110"   // (R[5]) = const_7_B2 (); 
000173  1 0  "10001001011010110000000000001111"   // (R[11]) = _ls_const_2_B1 (R[11]); 
000174  1 0  "00000000101011000110000000100000"   // (R[12]) = _ml_1_B1 (R[12],R[5]); 
000175  1 0  "00000001011011000110000000011000"   // (R[12],MC) = _mi_1_B1 (R[11],R[12]); 
000176  1 0  "01010100000010110001010011010000"   // (R[11]) = const_8_B2 (); 
000177  1 0  "10011001101011010000000000010000"   // (R[13]) = _rs_const_1_B1 (R[13]); 
000178  1 0  "10110101101011010000000000001000"   // (R[13]) = __schar_1_B1 (R[13]); 
000179  1 0  "00000001101011100110100000000001"   // (R[13],) = _pl_2_B1 (R[14],R[13]); 
000180  1 0  "00000000111010110011100000100000"   // (R[7]) = _ml_1_B1 (R[7],R[11]); 
000181  1 0  "00000001100001110110000000011000"   // (R[12],MC) = _mi_1_B1 (R[12],R[7]); 
000182  1 0  "10110101010010100000000000001000"   // (R[10]) = __schar_1_B1 (R[10]); 
000183  1 0  "00000001010011010101000000000001"   // (R[10],) = _pl_3_B1 (R[13],R[10]); 
000184  1 0  "00111000001011011111111111011100"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-36],SP,-36); 
000185  1 0  "00111000001001111111111111010111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-41],SP,-41); 
000186  1 0  "10001000111001110000000000001111"   // (R[7]) = _ls_const_2_B1 (R[7]); 
000187  1 0  "00000000101011010110100000100000"   // (R[13]) = _ml_1_B1 (R[13],R[5]); 
000188  1 0  "00000000111011010011100000011000"   // (R[7],MC) = _mi_1_B1 (R[7],R[13]); 
000189  1 0  "00000000100010110010000000100000"   // (R[4]) = _ml_1_B1 (R[4],R[11]); 
000190  1 0  "00000000111001000011100000011000"   // (R[7],MC) = _mi_1_B1 (R[7],R[4]); 
000191  1 0  "00111000001001001111111111010101"   // (R[4]) = stack_load_bndl_B1 (__spill_DMb[-43],SP,-43); 
000192  1 0  "00000000100001010010000000100000"   // (R[4]) = _ml_1_B1 (R[4],R[5]); 
000193  1 0  "00111000001011101111111111010110"   // (R[14]) = stack_load_bndl_B1 (__spill_DMb[-42],SP,-42); 
000194  1 0  "00111000001011011111111111010100"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-44],SP,-44); 
000195  1 0  "10001001110011100000000000001111"   // (R[14]) = _ls_const_2_B1 (R[14]); 
000196  1 0  "10001000011000110000000000001111"   // (R[3]) = _ls_const_2_B1 (R[3]); 
000197  1 0  "00000000101010010010100000100000"   // (R[5]) = _ml_1_B1 (R[9],R[5]); 
000198  1 0  "00000001011011010110100000100000"   // (R[13]) = _ml_1_B1 (R[13],R[11]); 
000199  1 0  "00000001110001000010000000011000"   // (R[4],MC) = _mi_1_B1 (R[14],R[4]); 
000200  1 0  "00000000011001010010100000011000"   // (R[5],MC) = _mi_1_B1 (R[3],R[5]); 
000201  1 0  "00000000110010110011000000100000"   // (R[6]) = _ml_1_B1 (R[6],R[11]); 
000202  1 0  "00000000100011010010000000011000"   // (R[4],MC) = _mi_1_B1 (R[4],R[13]); 
000203  1 0  "10011000111001110000000000010000"   // (R[7]) = _rs_const_1_B1 (R[7]); 
000204  1 0  "10011001100011000000000000010000"   // (R[12]) = _rs_const_1_B1 (R[12]); 
000205  1 0  "00000000101001100010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[6]); 
000206  1 0  "10011000100001000000000000010000"   // (R[4]) = _rs_const_1_B1 (R[4]); 
000207  1 0  "10110100111001110000000000001000"   // (R[7]) = __schar_1_B1 (R[7]); 
000208  1 0  "10110101100011000000000000001000"   // (R[12]) = __schar_1_B1 (R[12]); 
000209  1 0  "10110100100001000000000000001000"   // (R[4]) = __schar_1_B1 (R[4]); 
000210  1 0  "00000000111011000011100000000001"   // (R[7],) = _pl_2_B1 (R[12],R[7]); 
000211  1 0  "00000000100001110011100000000001"   // (R[7],) = _pl_3_B1 (R[7],R[4]); 
000212  1 0  "10011000010000100000000000010000"   // (R[2]) = _rs_const_1_B1 (R[2]); 
000213  1 0  "10011000101001010000000000010000"   // (R[5]) = _rs_const_1_B1 (R[5]); 
000214  1 0  "10110100010000100000000000001000"   // (R[2]) = __schar_1_B1 (R[2]); 
000215  1 0  "10110100101001010000000000001000"   // (R[5]) = __schar_1_B1 (R[5]); 
000216  1 0  "00000000010010100011000000000001"   // (R[6],) = _pl_3_B1 (R[10],R[2]); 
000217  1 0  "00000000101001110011100000000001"   // (R[7],) = _pl_3_B1 (R[7],R[5]); 
000218  1 0  "01010000001001001111111111100000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000219  1 0  "10011000110001100000000000000010"   // (R[6]) = _rs_const_2_B1 (R[6]); 
000220  1 0  "00000000100001100000100000110101"   // (R[4],DMb_stat) = __schar_store__pl_const_4_B1 (R[4],R[6],DMb_stat); 
000221  1 0  "10011000111001100000000000000010"   // (R[6]) = _rs_const_2_B1 (R[7]); 
000222  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000223  1 0  "01010000001001011111111111011000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000224  1 0  "00000000111001100000100000110101"   // (R[7],DMb_stat) = __schar_store__pl_const_4_B1 (R[7],R[6],DMb_stat); 
000225  1 0  "00001000101000110000000000000110"   // (R[3],MC) = _pl_const_4_B1 (R[5]); 
000226  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000227  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000228  1 0  "10101000001001001111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[4],SP,-32); 

// m60;   next: m144, jump target: m139 (next offset: 243)
000229  1 0  "00001001000010000000000000001000"   // (R[8],MC) = _pl_const_2_B1 (R[8]); 
000230  1 0  "01010000001001001111111111111000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000231  1 0  "00001000100001000000000000000001"   // (R[4],MC) = _pl_const_1_B1 (R[4]); 
000232  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 
000233  1 0  "10001100100001000000000000000100"   // (R[4]) = _lt_const_2_B1 (R[4]); 
000234  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000235  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000236  1 0  "00001000111001110000000000000100"   // (R[7],MC) = _pl_const_3_B1 (R[7]); 
000237  1 0  "00000000101001100010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[6]); 
000238  1 0  "01010000001000101111111111100000"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000239  1 0  "01001000000000110000000000000000"   // (R[3]) = const_12_B3 (); 
000240  1 0  "00100000100000001111111101010101"   // () = nez_br_const_1_B1 (R[4],-171); 
000241  1 0  "00001000010010010000000000000100"   // (R[9],MC) = _pl_const_3_B1 (R[2]); 
000242  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 

// m144;   next: m94 (next offset: 243)

// m94 (next offset: /)
000243  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000244  1 0  "01010000001010001111111111111100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000245  1 0  "00110001000000000000000000000000"   // () = __rts_jr_1_B1 (R[8]); 
000246  1 0  "00001000001000011111111111010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-44,SP,SP); 
000247  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

