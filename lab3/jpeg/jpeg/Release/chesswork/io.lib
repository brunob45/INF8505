
// File generated by noodle version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:33:08 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I../lib -I../lib/isg -I../lib/runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -itlx_chess.h +wRelease/chesswork io.c tlx

toolrelease _18R1;

// void init_input(image *)
Fvoid_init_input___Pimage : user_defined, called {
    fnm : "init_input" 'void init_input(image *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void fini_input(image *)
Fvoid_fini_input___Pimage : user_defined, called {
    fnm : "fini_input" 'void fini_input(image *)'; 
    arg : ( w32:i w32:i );
    loc : ( R[2] R[4] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void init_output()
Fvoid_init_output : user_defined, called {
    fnm : "init_output" 'void init_output()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// int fini_output()
F__sint_fini_output : user_defined, called {
    fnm : "fini_output" 'int fini_output()'; 
    arg : ( w32:i w32:r );
    loc : ( R[2] R[3] );
    frm : ( b=4 );
    llv : 1 0 0 0 0 ;
}

// void writebyte(unsigned char)
Fvoid_writebyte___uchar : user_defined, called {
    fnm : "writebyte" 'void writebyte(unsigned char)'; 
    arg : ( w32:i __uchar:i );
    loc : ( R[2] R[4] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void writeword(unsigned short)
Fvoid_writeword___ushort : user_defined, called {
    fnm : "writeword" 'void writeword(unsigned short)'; 
    arg : ( w32:i __ushort:i );
    loc : ( R[2] R[4] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void writearray(void *, int)
Fvoid_writearray___Pvoid___sint : user_defined, called {
    fnm : "writearray" 'void writearray(void *, int)'; 
    arg : ( w32:i w32:i w32:i );
    loc : ( R[2] R[4] R[5] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// int printf(const char *, ...)
F__sint_printf___P__cchar : user_defined, called {
    fnm : "printf" 'int printf(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA0F__sint_printf___P__cchar(const char *, ...)
VA0F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA0F__sint_printf___P__cchar" 'int VA0F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

// int VA1F__sint_printf___P__cchar(const char *, ...)
VA1F__sint_printf___P__cchar : user_defined, called {
    fnm : "VA1F__sint_printf___P__cchar" 'int VA1F__sint_printf___P__cchar(const char *, ...)'; 
    arg : ( w32:i w32:r w32:i );
    loc : ( R[2] R[3] R[4] );
    llv : 0 0 0 0 0 ;
}

