
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sat Apr 13 18:37:06 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i coder-writebits_ tlx

[
    0 : void_writebits___uint___uint typ=iword bnd=e stl=PM
   15 : __vola typ=iword bnd=b stl=PM
   18 : __extPM typ=iword bnd=b stl=PM
   19 : __extDMb typ=w08 bnd=b stl=DMb
   20 : __sp typ=w32 bnd=b stl=SP
   24 : shiftpos16 typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__uint_DMb_stat
   25 : __extDMb_w32 typ=w08 bnd=b stl=DMb
   26 : shiftword16 typ=w08 bnd=e sz=4 algn=4 stl=DMb_stat tref=__uint_DMb_stat
   27 : __extPM_void typ=iword bnd=b stl=PM
   28 : __extDMb_void typ=w08 bnd=b stl=DMb
   34 : __ptr_shiftpos16 typ=w32 val=0a bnd=m adro=24
   36 : __ptr_shiftword16 typ=w32 val=0a bnd=m adro=26
   37 : __la typ=w32 bnd=p tref=w32__
   38 : value typ=w32 bnd=p tref=__uint__
   39 : len typ=w32 bnd=p tref=__uint__
   48 : __fch_shiftpos16 typ=w32 bnd=m
   49 : __tmp typ=w32 bnd=m
   52 : __tmp typ=bool bnd=m
   57 : __fch_shiftword16 typ=w32 bnd=m
   59 : __tmp typ=w32 bnd=m
   60 : __tmp typ=w32 bnd=m
   63 : void_writebits_add___uint___uint typ=int26 val=0r bnd=m
   80 : __either typ=bool bnd=m
   81 : __trgt typ=int16 val=4j bnd=m
   85 : __seff typ=any bnd=m
   92 : __ptr_shiftpos16_part_0 typ=int16p val=0a bnd=m
   93 : __ptr_shiftpos16_part_1 typ=uint16 val=0a bnd=m
   94 : __ptr_shiftword16_part_0 typ=int16p val=0a bnd=m
   95 : __ptr_shiftword16_part_1 typ=uint16 val=0a bnd=m
   96 : __inl_L typ=w32 bnd=m tref=w32__
   99 : __tmp typ=w32 bnd=m
]
Fvoid_writebits___uint___uint {
    #3 off=0 nxt=15 tgt=6
    (__vola.14 var=15) source ()  <27>;
    (__extPM.17 var=18) source ()  <30>;
    (__extDMb.18 var=19) source ()  <31>;
    (__sp.19 var=20) source ()  <32>;
    (shiftpos16.23 var=24) source ()  <36>;
    (__extDMb_w32.24 var=25) source ()  <37>;
    (shiftword16.25 var=26) source ()  <38>;
    (__extPM_void.26 var=27) source ()  <39>;
    (__extDMb_void.27 var=28) source ()  <40>;
    (__la.36 var=37 stl=R off=2) inp ()  <49>;
    (value.39 var=38 stl=R off=4) inp ()  <52>;
    (len.42 var=39 stl=R off=5) inp ()  <55>;
    (__trgt.190 var=81) const_inp ()  <259>;
    <49> {
      (__fch_shiftpos16.56 var=48 stl=dmw_rd) load_1_B1 (__ptr_shiftpos16.221 shiftpos16.23)  <271>;
      (__ptr_shiftpos16.221 var=34 stl=dm_addr) dm_addr_1_dr_move_R_1_w32 (__ptr_shiftpos16.289)  <350>;
      (__fch_shiftpos16.224 var=48 stl=RD off=0) R_2_dr_move_dmw_rd_2_w32 (__fch_shiftpos16.56)  <352>;
    } stp=3;
    <50> {
      (__tmp.57 var=49 stl=aluC __seff.205 var=85) _pl_1_B1 (len.225 __fch_shiftpos16.223)  <272>;
      (__fch_shiftpos16.223 var=48 stl=aluB) aluA_aluB_2_dr_move_R_2_w32_B1 (__fch_shiftpos16.224)  <351>;
      (len.225 var=39 stl=aluA) aluA_aluB_2_dr_move_R_2_w32_B0 (len.226)  <353>;
      (__tmp.230 var=49 stl=R off=8) R_2_dr_move_aluC_2_w32 (__tmp.57)  <356>;
    } stp=5;
    <51> {
      (__tmp.60 var=52 stl=aluC) _lt_const_1_B1 (__tmp.229)  <273>;
      (__tmp.229 var=49 stl=aluA) aluA_2_dr_move_R_2_w32 (__tmp.230)  <355>;
      (__tmp.232 var=52 stl=R off=8) R_2_dr_move_aluC_2_bool (__tmp.60)  <358>;
    } stp=6;
    <52> {
      () nez_br_const_1_B1 (__tmp.231 __trgt.190)  <274>;
      (__tmp.231 var=52 stl=eqA) eqA_2_dr_move_R_2_bool (__tmp.232)  <357>;
    } stp=7;
    (__ptr_shiftpos16.273 var=34) const ()  <336>;
    (__ptr_shiftpos16_part_0.274 var=92 __ptr_shiftpos16_part_1.275 var=93) void___complex_ctpat_tie_w32_int16p_uint16 (__ptr_shiftpos16.273)  <337>;
    <78> {
      (__inl_L.276 var=96 stl=aluC) w32_const_bor_1_B1 (__tmp.278 __ptr_shiftpos16_part_1.275)  <338>;
      (__ptr_shiftpos16.289 var=34 stl=R off=7) R_2_dr_move_aluC_2_w32 (__inl_L.276)  <340>;
      (__tmp.278 var=99 stl=aluA) aluA_2_dr_move_R_2_w32 (__tmp.279)  <341>;
    } stp=1;
    <79> {
      (__tmp.280 var=99 stl=aluC) lhi_const_1_B1 (__ptr_shiftpos16_part_0.274)  <339>;
      (__tmp.279 var=99 stl=R off=7) R_2_dr_move_aluC_2_w32 (__tmp.280)  <342>;
    } stp=0;
    <63> {
      (len.226 var=39 stl=RB off=0) R_2_dr_move_R_2_MC_2_w32_B2 (len.42)  <354>;
    } stp=4;
    <65> {
      (value.240 var=38 stl=RA off=0) R_2_dr_move_R_2_MC_2_w32_B2 (value.39)  <365>;
    } stp=2;
    <82> {
      () vd_nop_ID ()  <386>;
    } stp=8;
    <83> {
      () vd_nop_ID ()  <387>;
    } stp=9;
    if {
        {
            () if_expr (__either.184)  <98>;
            (__either.184 var=80) undefined ()  <253>;
        } #5
        {
            <41> {
              () __rts_jr_1_B1 (__la.248)  <263>;
              (__la.248 var=37 stl=trgt) trgt_2_dr_move_R_2_w32 (__la.36)  <372>;
            } stp=5;
            <44> {
              (__fch_shiftword16.94 var=57 stl=dmw_rd) load_1_B1 (__ptr_shiftword16.233 shiftword16.25)  <266>;
              (__ptr_shiftword16.233 var=36 stl=dm_addr) dm_addr_1_dr_move_R_1_w32 (__ptr_shiftword16.290)  <359>;
              (__fch_shiftword16.236 var=57 stl=RC off=0) R_2_dr_move_dmw_rd_2_w32 (__fch_shiftword16.94)  <361>;
            } stp=2;
            <45> {
              (__tmp.96 var=59 stl=rcw __tmp.97 var=60 stl=rdw) writebits_ci_1_B1 (value.239 len.238 __fch_shiftword16.235 __fch_shiftpos16.237)  <267>;
              (__fch_shiftword16.235 var=57 stl=rcr) rcr_2_dr_move_RC_2_w32 (__fch_shiftword16.236)  <360>;
              (__fch_shiftpos16.237 var=48 stl=rdr) rdr_2_dr_move_RD_2_w32 (__fch_shiftpos16.224)  <362>;
              (len.238 var=39 stl=rbr) rbr_2_dr_move_RB_2_w32 (len.226)  <363>;
              (value.239 var=38 stl=rar) rar_2_dr_move_RA_2_w32 (value.240)  <364>;
              (__tmp.243 var=59 stl=RC off=0) RC_2_dr_move_rcw_2_w32 (__tmp.96)  <367>;
              (__tmp.246 var=60 stl=RD off=0) RD_2_dr_move_rdw_2_w32 (__tmp.97)  <370>;
            } stp=3;
            <46> {
              (shiftword16.99 var=26) store_1_B1 (__tmp.242 __ptr_shiftword16.244 shiftword16.25)  <268>;
              (__tmp.242 var=59 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__tmp.243)  <366>;
              (__ptr_shiftword16.244 var=36 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__ptr_shiftword16.290)  <368>;
            } stp=6;
            <47> {
              (shiftpos16.101 var=24) store_1_B1 (__tmp.245 __ptr_shiftpos16.247 shiftpos16.23)  <269>;
              (__tmp.245 var=60 stl=dmw_wr) dmw_wr_2_dr_move_R_2_w32 (__tmp.246)  <369>;
              (__ptr_shiftpos16.247 var=34 stl=dm_addr) dm_addr_2_dr_move_R_1_w32 (__ptr_shiftpos16.289)  <371>;
            } stp=4;
            (__ptr_shiftword16.281 var=36) const ()  <343>;
            (__ptr_shiftword16_part_0.282 var=94 __ptr_shiftword16_part_1.283 var=95) void___complex_ctpat_tie_w32_int16p_uint16 (__ptr_shiftword16.281)  <344>;
            <80> {
              (__inl_L.284 var=96 stl=aluC) w32_const_bor_1_B1 (__tmp.286 __ptr_shiftword16_part_1.283)  <345>;
              (__ptr_shiftword16.290 var=36 stl=R off=8) R_2_dr_move_aluC_2_w32 (__inl_L.284)  <347>;
              (__tmp.286 var=99 stl=aluA) aluA_2_dr_move_R_2_w32 (__tmp.287)  <348>;
            } stp=1;
            <81> {
              (__tmp.288 var=99 stl=aluC) lhi_const_1_B1 (__ptr_shiftword16_part_0.282)  <346>;
              (__tmp.287 var=99 stl=R off=8) R_2_dr_move_aluC_2_w32 (__tmp.288)  <349>;
            } stp=0;
            <84> {
              () vd_nop_ID ()  <388>;
            } stp=7;
        } #6 off=13 nxt=12
        {
            #15 off=10 nxt=9
            (void_writebits_add___uint___uint.188 var=63) const_inp ()  <257>;
            <43> {
              () j_const_1_B1 (void_writebits_add___uint___uint.188)  <265>;
            } stp=1;
            <74> {
              (len.262 var=39 stl=R off=5) R_2_dr_move_R_2_MC_2_w32_B2 (len.226)  <375>;
            } stp=0;
            <76> {
              (value.264 var=38 stl=R off=4) R_2_dr_move_R_2_MC_2_w32_B2 (value.240)  <376>;
            } stp=2;
            call {
                (__extDMb.109 var=19 __extDMb_void.110 var=28 __extDMb_w32.111 var=25 __extPM.112 var=18 __extPM_void.113 var=27 shiftpos16.114 var=24 shiftword16.115 var=26 __vola.116 var=15) Fvoid_writebits_add___uint___uint (__la.36 value.264 len.262 __extDMb.18 __extDMb_void.27 __extDMb_w32.24 __extPM.17 __extPM_void.26 shiftpos16.23 shiftword16.25 __vola.14)  <120>;
            } #9 off=13 nxt=16
            #16 nxt=-2
            () sink (__vola.116)  <232>;
            () sink (__extPM.112)  <233>;
            () sink (__extDMb.109)  <234>;
            () sink (__sp.19)  <235>;
            () sink (shiftpos16.114)  <236>;
            () sink (__extDMb_w32.111)  <237>;
            () sink (shiftword16.115)  <238>;
            () sink (__extPM_void.113)  <239>;
            () sink (__extDMb_void.110)  <240>;
            (shiftpos16.177 var=24) never ()  <245>;
            (shiftword16.179 var=26) never ()  <247>;
        } #7
        {
            (shiftpos16.120 var=24) merge (shiftpos16.101 shiftpos16.177)  <124>;
            (shiftword16.122 var=26) merge (shiftword16.99 shiftword16.179)  <126>;
        } #10
    } #4
    #12 nxt=-2
    () sink (__sp.19)  <145>;
    () sink (shiftpos16.120)  <149>;
    () sink (shiftword16.122)  <151>;
    65 -> 63 del=0;
    74 -> 76 del=0;
} #0
0 : 'coder.c';
----------
0 : (0,83:1,0);
3 : (0,85:20,1);
4 : (0,85:2,1);
6 : (0,85:25,2);
7 : (0,94:7,18);
9 : (0,95:6,18);
12 : (0,97:0,22);
15 : (0,97:0,22);
16 : (0,97:0,22);
----------
98 : (0,85:2,1);
120 : (0,95:6,18);
124 : (0,85:2,21);
126 : (0,85:2,21);
263 : (0,97:0,22);
265 : (0,95:6,18);
266 : (0,92:4,11);
267 : (0,92:4,11);
268 : (0,92:4,11);
269 : (0,92:4,11);
271 : (0,85:10,1);
272 : (0,85:9,1);
273 : (0,85:20,1);
274 : (0,85:2,1);
354 : (0,85:9,0) (0,92:4,0);
365 : (0,92:4,0);
375 : (0,95:26,0);
376 : (0,95:20,0);

