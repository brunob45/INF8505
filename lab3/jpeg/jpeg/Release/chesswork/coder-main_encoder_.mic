
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:46:46 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i coder-main_encoder_ tlx


// m47, jump target: m3 (next offset: 15)
000000  1 0  "01001000000001110000000000000000"   // (R[7]) = lhi_const_1_B1 (0); 
000001  1 0  "01001000000001100000000000000000"   // (R[6]) = lhi_const_1_B1 (0); 
000002  1 0  "01010100111001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],0); 
000003  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000004  1 0  "00001000001000010000000001010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (84,SP,SP); 
000005  1 0  "01010100110001100000000000000000"   // (R[6]) = w32_const_bor_1_B1 (R[6],0); 
000006  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000007  1 0  "01111100111000000000000000000000"   // (DMb_stat) = store_const_2_B1 (R[7],DMb_stat); 
000008  1 0  "01111100110000000000000000000000"   // (DMb_stat) = store_const_2_B1 (R[6],DMb_stat); 
000009  1 0  "01111100101000000000000000000000"   // (DMb_stat) = store_const_2_B1 (R[5],DMb_stat); 
000010  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 
000011  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000012  1 0  "01001000000001110000000000000000"   // (R[7]) = const_4_B3 (); 
000013  1 0  "00100100000000000000000000100010"   // () = j_const_1_B1 (34); 
000014  1 0  "01001000000001010000000000000000"   // (R[5]) = const_4_B3 (); 

// m41, jump target: m2 (next offset: 19)
000015  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000016  1 0  "10101000001001111111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[7],SP,-12); 
000017  1 0  "00100100000000000000000000010101"   // () = j_const_1_B1 (21); 
000018  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m214;   next: m27 (next offset: 23)
000019  1 0  "01001000000001110000000000000000"   // (R[7]) = const_4_B3 (); 
000020  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000021  1 0  "10101000001001011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[5],SP,-20); 
000022  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 

// m27;   next: m28 (next offset: 27)
000023  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000024  1 0  "00001000001010001111111110101100"   // (R[8],MC) = _pl_rd_res_reg_const_1_B1 (-84,SP); 
000025  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000026  1 0  "01010000001001101111111111110100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 

// m28 subroutine call;   next: m29 (next offset: 27)

// m29;   next: m30 (next offset: 30)
000027  1 0  "00001000001001001111111110101100"   // (R[4],MC) = _pl_rd_res_reg_const_1_B1 (-84,SP); 
000028  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000029  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m30 subroutine call;   next: m32 (next offset: 30)

// m32;   next: m37, jump target: m27 (next offset: 37)
000030  1 0  "01010000001001011111111111110000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000031  1 0  "00001000101001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[5]); 
000032  1 0  "10001100111001000000000000000110"   // (R[4]) = _lt_const_2_B1 (R[7]); 
000033  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000034  1 0  "00100000100000001111111111110011"   // () = nez_br_const_1_B1 (R[4],-13); 
000035  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000036  1 0  "01010000001001011111111111101100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m37;   next: m2 (next offset: 39)
000037  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000038  1 0  "00001000101001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[5]); 

// m2;   next: m38 (next offset: 39)

// m38;   next: m43, jump target: m214 (next offset: 45)
000039  1 0  "01001100100001110000000000000100"   // (R[7]) = load__pl_const_2_B1 (R[4],DMb); 
000040  1 0  "10011000111001110000000000000100"   // (R[7]) = _rs_const_2_B1 (R[7]); 
000041  1 0  "00000000101001110011100000010011"   // (R[7]) = _lt_2_B1 (R[5],R[7]); 
000042  1 0  "00100000111000001111111111100111"   // () = nez_br_const_1_B1 (R[7],-25); 
000043  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m43;   next: m3 (next offset: 48)
000045  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000046  1 0  "00001000101001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[5]); 
000047  1 0  "01001000000001010000000000000000"   // (R[5]) = const_4_B3 (); 

// m3;   next: m44 (next offset: 48)

// m44;   next: m49, jump target: m41 (next offset: 55)
000048  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000049  1 0  "01001100100001000000000000000110"   // (R[4]) = load__pl_const_1_B1 (R[4],DMb); 
000050  1 0  "10011000100001000000000000000100"   // (R[4]) = _rs_const_2_B1 (R[4]); 
000051  1 0  "00000000111001000010000000010011"   // (R[4]) = _lt_2_B1 (R[7],R[4]); 
000052  1 0  "00100000100000001111111111011001"   // () = nez_br_const_1_B1 (R[4],-39); 
000053  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000054  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m49;   next: m53, jump target: m107 (next offset: 65)
000055  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000056  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000057  1 0  "01010100000001110000000000001000"   // (R[7]) = const_3_B2 (); 
000058  1 0  "01010000101010000000000000000000"   // (R[8]) = load_1_B1 (R[5],DMb_stat); 
000059  1 0  "00010001000001000000000000000111"   // (R[4]) = _ad_const_2_B1 (R[8]); 
000060  1 0  "00000000111001000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[7],R[4]); 
000061  1 0  "01101100110001110000000000001000"   // (R[7]) = _ge_const_1_B1 (R[6]); 
000062  1 0  "00100000111000000000000001110111"   // () = nez_br_const_1_B1 (R[7],119); 
000063  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000064  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m53;   next: m58, jump target: m56 (next offset: 74)
000065  1 0  "00000000110010000001100000000001"   // (R[3],) = _pl_1_B1 (R[6],R[8]); 
000066  1 0  "01010100000001000000000000000001"   // (R[4]) = const_5_B2 (); 
000067  1 0  "01001000000001110000000000000000"   // (R[7]) = lhi_const_1_B1 (0); 
000068  1 0  "01010100111001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],0); 
000069  1 0  "00000000100001100100100000010010"   // (R[9]) = _ls_1_B1 (R[4],R[6]); 
000070  1 0  "10010000011010100000000000010000"   // (R[10]) = _lt_const_1_B1 (R[3]); 
000071  1 0  "00100001010000000000000001101010"   // () = nez_br_const_1_B1 (R[10],106); 
000072  1 0  "00001001001010011111111111111111"   // (R[9],MC) = _pl_const_2_B1 (R[9]); 
000073  1 0  "01010000111001000000000000000000"   // (R[4]) = load_1_B1 (R[7],DMb_stat); 

// m58;   next: m63, jump target: m61 (next offset: 96)
000074  1 0  "01010100000000110000000000010000"   // (R[3]) = const_2_B2 (); 
000075  1 0  "00000000011010000100000000011000"   // (R[8],MC) = _mi_1_B1 (R[3],R[8]); 
000076  1 0  "00000000110010000011000000011000"   // (R[6],MC) = _mi_1_B1 (R[6],R[8]); 
000077  1 0  "10101000111010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[7],DMb_stat); 
000078  1 0  "00000000100010000011100000010010"   // (R[7]) = _ls_1_B1 (R[4],R[8]); 
000079  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 
000080  1 0  "00000001001001100010000000010111"   // (R[4]) = _rs_1_B1 (R[9],R[6]); 
000081  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000082  1 0  "00000000100001110001100000001010"   // (R[3]) = _or_1_B1 (R[7],R[4]); 
000083  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000084  1 0  "01001000000001110000000100000000"   // (R[7]) = lhi_const_1_B1 (256); 
000085  1 0  "10011100011010010000000000001000"   // (R[9]) = _rs_const_1_B1 (R[3]); 
000086  1 0  "01010000101001100000000000000000"   // (R[6]) = load_1_B1 (R[5],DMb_stat); 
000087  1 0  "01010100111001110000000100000000"   // (R[7]) = w32_const_bor_1_B1 (R[7],256); 
000088  1 0  "00000000110001110100000000010100"   // (R[8]) = _lt_1_B1 (R[6],R[7]); 
000089  1 0  "00010001001010010000000011111111"   // (R[9]) = _ad_const_1_B1 (R[9]); 
000090  1 0  "00010000011000110000000011111111"   // (R[3]) = _ad_const_1_B1 (R[3]); 
000091  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000092  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000093  1 0  "00100001000000000000000000001111"   // () = nez_br_const_1_B1 (R[8],15); 
000094  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 
000095  1 0  "10101000001001001111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[4],SP,-4); 

// m63;   next: m64 (next offset: 101)
000096  1 0  "01011100001000111111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[3],SP,-13); 
000097  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000098  1 0  "01011100001010011111111111110010"   // (__spill_DMb[-14]) = stack_store_bndl_B1 (R[9],SP,-14); 
000099  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000100  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m64 subroutine call;   next: m65 (next offset: 101)

// m65, jump target: m67 (next offset: 110)
000101  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000102  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000103  1 0  "00111000001010011111111111110010"   // (R[9]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000104  1 0  "00111000001000111111111111110011"   // (R[3]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000105  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000106  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000107  1 0  "00000000110010010000100000110101"   // (R[6],DMb_stat) = store__pl_const_1_B1 (R[9],R[6],DMb_stat); 
000108  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000109  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 

// m61;   next: m67 (next offset: 113)
000110  1 0  "00001000110010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[6]); 
000111  1 0  "10101000101010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[5],DMb_stat); 
000112  1 0  "01011100110010010000000000000000"   // (DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[9],R[6],DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m67;   next: m71, jump target: m80 (next offset: 117)
000113  1 0  "10010101001001100000000011111111"   // (R[6]) = _ne_const_1_B1 (R[9]); 
000114  1 0  "00100000110000000000000000010101"   // () = nez_br_const_1_B1 (R[6],21); 
000115  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000116  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m71;   next: m76, jump target: m74 (next offset: 122)
000117  1 0  "01010000101001100000000000000000"   // (R[6]) = load_1_B1 (R[5],DMb_stat); 
000118  1 0  "00000000110001110100000000010100"   // (R[8]) = _lt_1_B1 (R[6],R[7]); 
000119  1 0  "00100001000000000000000000001101"   // () = nez_br_const_1_B1 (R[8],13); 
000120  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000121  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m76;   next: m77 (next offset: 126)
000122  1 0  "01011100001000111111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[3],SP,-13); 
000123  1 0  "10101000001001111111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[7],SP,-20); 
000124  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000125  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m77 subroutine call;   next: m78 (next offset: 126)

// m78, jump target: m210 (next offset: 134)
000126  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000127  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000128  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000129  1 0  "00111000001000111111111111110011"   // (R[3]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000130  1 0  "00000000110000000000100000110101"   // (R[6],DMb_stat) = store_const__pl_const_1_B1 (R[6],DMb_stat); 
000131  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 
000132  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000133  1 0  "01010000001001111111111111101100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m74;   next: m210 (next offset: 137)
000134  1 0  "00001000110010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[6]); 
000135  1 0  "10101000101010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[5],DMb_stat); 
000136  1 0  "01011100110000000000000000000000"   // (DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[6],DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m210;   next: m82 (next offset: 137)

// m80;   next: m82 (next offset: 137)

// m82;   next: m87, jump target: m85 (next offset: 143)
000137  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000138  1 0  "01010000101001100000000000000000"   // (R[6]) = load_1_B1 (R[5],DMb_stat); 
000139  1 0  "00000000110001110100000000010100"   // (R[8]) = _lt_1_B1 (R[6],R[7]); 
000140  1 0  "00100001000000000000000000001101"   // () = nez_br_const_1_B1 (R[8],13); 
000141  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000142  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m87;   next: m88 (next offset: 147)
000143  1 0  "10101000001001111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[7],SP,-16); 
000144  1 0  "01011100001000111111111111101111"   // (__spill_DMb[-17]) = stack_store_bndl_B1 (R[3],SP,-17); 
000145  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000146  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m88 subroutine call;   next: m89 (next offset: 147)

// m89, jump target: m91 (next offset: 155)
000147  1 0  "01010000001001101111111111111100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000148  1 0  "01010100110001000000000000000000"   // R[4] = R[6]; 
000149  1 0  "00111000001000111111111111101111"   // (R[3]) = stack_load_bndl_B1 (__spill_DMb[-17],SP,-17); 
000150  1 0  "01010000001001111111111111110000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000151  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000152  1 0  "00000000110000110000100000110101"   // (R[6],DMb_stat) = store__pl_const_1_B1 (R[3],R[6],DMb_stat); 
000153  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000154  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 

// m85;   next: m91 (next offset: 158)
000155  1 0  "00001000110010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[6]); 
000156  1 0  "10101000101010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[5],DMb_stat); 
000157  1 0  "01011100110000110000000000000000"   // (DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[3],R[6],DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m91;   next: m95, jump target: m213 (next offset: 162)
000158  1 0  "10010100011001100000000011111111"   // (R[6]) = _ne_const_1_B1 (R[3]); 
000159  1 0  "00100000110000000000000000010110"   // () = nez_br_const_1_B1 (R[6],22); 
000160  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000161  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m95;   next: m100, jump target: m98 (next offset: 167)
000162  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 
000163  1 0  "00000000101001110011100000010100"   // (R[7]) = _lt_1_B1 (R[5],R[7]); 
000164  1 0  "00100000111000000000000000001000"   // () = nez_br_const_1_B1 (R[7],8); 
000165  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000166  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m100;   next: m101 (next offset: 169)
000167  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000168  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m101 subroutine call;   next: m102 (next offset: 169)

// m102, jump target: m213 (next offset: 174)
000169  1 0  "01010000001001011111111111111100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000170  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000171  1 0  "00000000101000000000100000110101"   // (R[5],DMb_stat) = store_const__pl_const_1_B1 (R[5],DMb_stat); 
000172  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000173  1 0  "10101000111001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[7],DMb_stat); 

// m98, jump target: m213 (next offset: 179)
000174  1 0  "01010000001001111111111111110100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000175  1 0  "00001000101001000000000000000001"   // (R[4],MC) = _pl_const_1_B1 (R[5]); 
000176  1 0  "10101000111001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[7],DMb_stat); 
000177  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000178  1 0  "01011100101000000000000000000000"   // (DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[5],DMb_stat,DMb_stat,DMb_stat,DMb[-84],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m56;   next: m213 (next offset: 183)
000179  1 0  "00000000100001100010000000010010"   // (R[4]) = _ls_1_B1 (R[4],R[6]); 
000180  1 0  "00000000100010010010000000001010"   // (R[4]) = _or_1_B1 (R[4],R[9]); 
000181  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 
000182  1 0  "10101000111001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[7],DMb_stat); 

// m213;   next: m109 (next offset: 183)

// m107;   next: m109 (next offset: 183)

// m109;   next: m110 (next offset: 185)
000183  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000184  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m110 subroutine call;   next: m112 (next offset: 185)

// m112 (next offset: /)
000185  1 0  "01010000001001011111111111111000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000186  1 0  "00110000101000000000000000000000"   // () = __rts_jr_1_B1 (R[5]); 
000187  1 0  "00001000001000011111111110101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-84,SP,SP); 
000188  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

