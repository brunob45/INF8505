
// File generated by noodle version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:33:07 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// noodle -B -I../lib -I../lib/isg -I../lib/runtime/include -I../../io_modules -I/CMC/tools/synopsys/asip_designer_vN-2018.03-SP3/linux64/chessdir/../examples/io_modules -D__tct_patch__=300 -itlx_chess.h +wRelease/chesswork header.c tlx

toolrelease _18R1;

// void write_headers()
Fvoid_write_headers : user_defined, called {
    fnm : "write_headers" 'void write_headers()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void writebyte(unsigned char)
Fvoid_writebyte___uchar : user_defined, called {
    fnm : "writebyte" 'void writebyte(unsigned char)'; 
    arg : ( w32:i __uchar:i );
    loc : ( R[2] R[4] );
}

// void writeword(unsigned short)
Fvoid_writeword___ushort : user_defined, called {
    fnm : "writeword" 'void writeword(unsigned short)'; 
    arg : ( w32:i __ushort:i );
    loc : ( R[2] R[4] );
}

// void writearray(void *, int)
Fvoid_writearray___Pvoid___sint : user_defined, called {
    fnm : "writearray" 'void writearray(void *, int)'; 
    arg : ( w32:i w32:i w32:i );
    loc : ( R[2] R[4] R[5] );
}

// void write_APP0info()
Fvoid_write_APP0info : user_defined, called {
    fnm : "write_APP0info" 'void write_APP0info()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void write_SOF0info()
Fvoid_write_SOF0info : user_defined, called {
    fnm : "write_SOF0info" 'void write_SOF0info()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void write_DQTinfo()
Fvoid_write_DQTinfo : user_defined, called {
    fnm : "write_DQTinfo" 'void write_DQTinfo()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void write_DHTinfo()
Fvoid_write_DHTinfo : user_defined, called {
    fnm : "write_DHTinfo" 'void write_DHTinfo()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

// void write_SOSinfo()
Fvoid_write_SOSinfo : user_defined, called {
    fnm : "write_SOSinfo" 'void write_SOSinfo()'; 
    arg : ( w32:i );
    loc : ( R[2] );
    frm : ( );
    llv : 1 0 0 0 0 ;
}

