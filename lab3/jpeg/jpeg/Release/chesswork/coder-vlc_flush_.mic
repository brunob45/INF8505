
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:33:03 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i coder-vlc_flush_ tlx


// m3;   next: m7, jump target: m31 (next offset: 10)
000000  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000001  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 
000002  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000003  1 0  "01010000100000110000000000000000"   // (R[3]) = load_1_B1 (R[4],DMb_stat); 
000004  1 0  "00001000001000010000000000010100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (20,SP,SP); 
000005  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000006  1 0  "10010100011000110000000000001000"   // (R[3]) = _ne_const_2_B1 (R[3]); 
000007  1 0  "00100000011000000000000000110101"   // () = nez_br_const_1_B1 (R[3],53); 
000008  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000009  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 

// m7;   next: m12, jump target: m10 (next offset: 22)
000010  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000011  1 0  "01010100011001110000000000000000"   // (R[7]) = w32_const_bor_1_B1 (R[3],0); 
000012  1 0  "01001000000001100000000100000000"   // (R[6]) = lhi_const_1_B1 (256); 
000013  1 0  "01010000101000110000000000000000"   // (R[3]) = load_1_B1 (R[5],DMb_stat); 
000014  1 0  "01010000111010000000000000000000"   // (R[8]) = load_1_B1 (R[7],DMb_stat); 
000015  1 0  "01010100110001100000000100000000"   // (R[6]) = w32_const_bor_1_B1 (R[6],256); 
000016  1 0  "00000000011001100011100000010100"   // (R[7]) = _lt_1_B1 (R[3],R[6]); 
000017  1 0  "10101000001001001111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[4],SP,-8); 
000018  1 0  "10101000001001011111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[5],SP,-12); 
000019  1 0  "00100000111000000000000000001101"   // () = nez_br_const_1_B1 (R[7],13); 
000020  1 0  "10101000001000101111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[2],SP,-4); 
000021  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 

// m12;   next: m13 (next offset: 26)
000022  1 0  "10101000001001101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[6],SP,-16); 
000023  1 0  "01011100001010001111111111101111"   // (__spill_DMb[-17]) = stack_store_bndl_B1 (R[8],SP,-17); 
000024  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000025  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m13 subroutine call;   next: m14 (next offset: 26)

// m14, jump target: m16 (next offset: 34)
000026  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000027  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000028  1 0  "00111000001010001111111111101111"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-17],SP,-17); 
000029  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000030  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000031  1 0  "00000000011010000000100000110101"   // (R[3],DMb_stat) = store__pl_const_1_B1 (R[8],R[3],DMb_stat); 
000032  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000033  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 

// m10;   next: m16 (next offset: 37)
000034  1 0  "00001000011001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[3]); 
000035  1 0  "10101000101001110000000000000000"   // (DMb_stat) = store_1_B1 (R[7],R[5],DMb_stat); 
000036  1 0  "01011100011010000000000000000000"   // (DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[3],DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m16;   next: m20, jump target: m29 (next offset: 41)
000037  1 0  "10010101000000110000000011111111"   // (R[3]) = _ne_const_1_B1 (R[8]); 
000038  1 0  "00100000011000000000000000010101"   // () = nez_br_const_1_B1 (R[3],21); 
000039  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000040  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m20;   next: m25, jump target: m23 (next offset: 46)
000041  1 0  "01010000101000110000000000000000"   // (R[3]) = load_1_B1 (R[5],DMb_stat); 
000042  1 0  "00000000011001100010100000010100"   // (R[5]) = _lt_1_B1 (R[3],R[6]); 
000043  1 0  "00100000101000000000000000001010"   // () = nez_br_const_1_B1 (R[5],10); 
000044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000045  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m25;   next: m26 (next offset: 48)
000046  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000047  1 0  "01010100000001010000000100000000"   // (R[5]) = const_1_B2 (); 

// m26 subroutine call;   next: m27 (next offset: 48)

// m27, jump target: m44 (next offset: 55)
000048  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
000049  1 0  "01010100011001000000000000000000"   // R[4] = R[3]; 
000050  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000051  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000052  1 0  "00000000011000000000100000110101"   // (R[3],DMb_stat) = store_const__pl_const_1_B1 (R[3],DMb_stat); 
000053  1 0  "00100100000000000000000000001000"   // () = j_const_1_B1 (8); 
000054  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 

// m23, jump target: m44 (next offset: 61)
000055  1 0  "01010000001001011111111111110100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000056  1 0  "00001000011001100000000000000001"   // (R[6],MC) = _pl_const_1_B1 (R[3]); 
000057  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000058  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 
000059  1 0  "00100100000000000000000000000010"   // () = j_const_1_B1 (2); 
000060  1 0  "01011100011000000000000000000000"   // (DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[3],DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m29;   next: m44 (next offset: 62)
000061  1 0  "01010000001000101111111111111100"   // (R[2]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m44;   next: m41 (next offset: 62)

// m31;   next: m41 (next offset: 62)

// m41;   next: m40 (next offset: 66)
000062  1 0  "00001000001000011111111111101100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-20,SP,SP); 
000063  1 0  "01010000101001010000000000000000"   // (R[5]) = load_1_B1 (R[5],DMb_stat); 
000064  1 0  "00100100000000000000000000000000"   // () = j_const_1_B1 (0); 
000065  1 0  "00000000101001000010100000011000"   // (R[5],MC) = _mi_1_B1 (R[5],R[4]); 

// m40 subroutine call;   next: m42 (next offset: 66)

// m42 (next offset: /)

