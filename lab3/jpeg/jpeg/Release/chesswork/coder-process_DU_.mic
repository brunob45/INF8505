
// File generated by mist version N-2018.03#7d02e3ca79#180723, Sun Apr 14 19:33:06 2019
// Copyright 2014-2018 Synopsys, Inc. All rights reserved.
// mist -B -I../../../lib -I../../../lib/isg -r +f +i coder-process_DU_ tlx


// m5;   next: m6 (next offset: 6)
000000  1 0  "00001000001000010000000101000100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_2_B1 (324,SP,SP); 
000001  1 0  "01010100101000110000000000000000"   // R[3] = R[5]; 
000002  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000003  1 0  "10101000001000101111111111111000"   // (__spill_DMw[-8]) = stack_store_bndl_B3 (R[2],SP,-8); 
000004  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000005  1 0  "00001000001001011111111101000100"   // (R[5],MC) = _pl_rd_res_reg_const_1_B1 (-188,SP); 

// m6 subroutine call;   next: m7 (next offset: 6)

// m7;   next: m14 (next offset: 25)
000006  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000007  1 0  "01010100101000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[5],0); 
000008  1 0  "01010000001001001111111111111100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000009  1 0  "01001000000001010000000000111111"   // (R[5]) = lhi_const_1_B1 (63); 
000010  1 0  "01001000000001100000000000011001"   // (R[6]) = lhi_const_1_B1 (25); 
000011  1 0  "10001000100001000000000000000010"   // (R[4]) = _ls_const_2_B1 (R[4]); 
000012  1 0  "01010100101001110000000000111111"   // (R[7]) = w32_const_bor_1_B1 (R[5],63); 
000013  1 0  "01010100110001100000000000011001"   // (R[6]) = w32_const_bor_1_B1 (R[6],25); 
000014  1 0  "00000000011001000001100000000001"   // (R[3],) = _pl_2_B1 (R[3],R[4]); 
000015  1 0  "10111100110000010000000000000000"   // (LS) = wr_res_reg_1_B1 (R[6]); 
000016  1 0  "10111100111000100000000000000000"   // (LE) = wr_res_reg_2_B1 (R[7]); 
000017  1 0  "01001000000010000000000000000000"   // (R[8]) = lhi_const_1_B1 (0); 
000018  1 0  "00001000001001011111111101000100"   // (R[5],MC) = _pl_rd_res_reg_const_1_B1 (-188,SP); 
000019  1 0  "10111100000000000000000000100000"   // (LC) = wr_res_reg_const_1_B1 (32); 
000020  1 0  "01010000011000110000000000000000"   // (R[3]) = load_1_B1 (R[3],DMb_stat); 
000021  1 0  "01001000000001110000000000000000"   // (R[7]) = const_5_B3 (); 
000022  1 0  "00001000001001101111111011000100"   // (R[6],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000023  1 0  "01010101000010000000000000000000"   // (R[8]) = w32_const_bor_1_B1 (R[8],0); 
000024  1 0  "01001000000011000000000000000000"   // (R[12]) = const_5_B3 (); 

// m14;   next: m17, jump target: m18 (next offset: 32)
000025  1 0  "00000000101010100001000000110010"   // (R[10],R[5]) = load__pl_const_4_B1 (R[5],DMb[-188]); 
000026  1 0  "00000000011010010010000000110100"   // (R[9],R[3]) = load__pl_const_5_B1 (R[3],DMb,DMb_stat,DMb_stat); 
000027  1 0  "00000001001010100100100000100000"   // (R[9]) = _ml_1_B1 (R[10],R[9]); 
000028  1 0  "00000001010000000101000000001100"   // (R[10]) = _ge_const_1_B2 (R[10]); 
000029  1 0  "00100001010000000000000000000010"   // () = nez_br_const_1_B1 (R[10],2); 
000030  1 0  "10011001001010010000000000001111"   // (R[9]) = _rs_const_8_B1 (R[9]); 
000031  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m17;   next: m912 (next offset: 33)
000032  1 0  "00001001001010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[9]); 

// m18;   next: m912 (next offset: 33)

// m912;   next: m24, jump target: m30 (next offset: 39)
000033  1 0  "00000001000010100000100000110001"   // (R[10],R[8]) = load__pl_const_3_B1 (R[8],DMb_stat); 
000034  1 0  "10001001010010110000000000000001"   // (R[11]) = _ls_const_4_B1 (R[10]); 
000035  1 0  "00000000110010110101100000000001"   // (R[11],) = _pl_2_B1 (R[6],R[11]); 
000036  1 0  "00010101001000000000000000000110"   // () = eqz_br_const_1_B1 (R[9],6); 
000037  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000038  1 0  "01111101011010010000000000000000"   // (DMb[-316]) = __sshort_store_1_B1 (R[11],R[9],DMb[-316]); 

// m24;   next: m28, jump target: m27 (next offset: 43)
000039  1 0  "00000001100010100100100000001110"   // (R[9]) = _gt_1_B1 (R[12],R[10]); 
000040  1 0  "00100001001000000000000000000010"   // () = nez_br_const_1_B1 (R[9],2); 
000041  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000042  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m28;   next: m982 (next offset: 44)
000043  1 0  "01010101010011000000000000000000"   // R[12] = R[10]; 

// m27;   next: m982 (next offset: 44)

// m982;   next: m885 (next offset: 44)

// m30;   next: m885 (next offset: 44)

// m885;   next: m888, jump target: m889 (next offset: 51)
000044  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000045  1 0  "00000000101010100001000000110010"   // (R[10],R[5]) = load__pl_const_4_B1 (R[5],DMb[-188]); 
000046  1 0  "00000000011010110010000000110100"   // (R[11],R[3]) = load__pl_const_5_B1 (R[3],DMb,DMb_stat,DMb_stat); 
000047  1 0  "00000001010000000100100000001100"   // (R[9]) = _ge_const_1_B2 (R[10]); 
000048  1 0  "00100001001000000000000000000010"   // () = nez_br_const_1_B1 (R[9],2); 
000049  1 0  "00000001010010110101000000100000"   // (R[10]) = _ml_1_B1 (R[10],R[11]); 
000050  1 0  "10011001010010100000000000001111"   // (R[10]) = _rs_const_8_B1 (R[10]); 

// m888;   next: m978 (next offset: 52)
000051  1 0  "00001001010010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[10]); 

// m889;   next: m978 (next offset: 52)

// m978;   next: m895, jump target: m901 (next offset: 58)
000052  1 0  "00000001000010010000100000110001"   // (R[9],R[8]) = load__pl_const_3_B1 (R[8],DMb_stat); 
000053  1 0  "10001001001010110000000000000001"   // (R[11]) = _ls_const_4_B1 (R[9]); 
000054  1 0  "00000000110010110101100000000001"   // (R[11],) = _pl_2_B1 (R[6],R[11]); 
000055  1 0  "00010101010000000000000000000110"   // () = eqz_br_const_1_B1 (R[10],6); 
000056  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000057  1 0  "01111101011010100000000000000000"   // (DMb[-316]) = __sshort_store_1_B1 (R[11],R[10],DMb[-316]); 

// m895;   next: m899, jump target: m898 (next offset: 62)
000058  1 0  "00000001100010010101000000001110"   // (R[10]) = _gt_1_B1 (R[12],R[9]); 
000059  1 0  "00100001010000000000000000000010"   // () = nez_br_const_1_B1 (R[10],2); 
000060  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000061  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m899;   next: m983 (next offset: 63)
000062  1 0  "01010101001011000000000000000000"   // R[12] = R[9]; 

// m898;   next: m983 (next offset: 63)

// m983;   next: m1014 (next offset: 63)

// m901;   next: m1014 (next offset: 63)

// m1014;   next: m946, loop target: m14 (next offset: 64)
000063  1 0  "00000000000000000000000000000000"  .swstall "builtin_control"   // () = vd_nop_ID (); 

// m946;   next: m343, jump target: m288 (next offset: 117)
000064  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000065  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000066  1 0  "00000000100001010001100000000001"   // (R[3],) = _pl_2_B1 (R[5],R[4]); 
000067  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000068  1 0  "01010000011000110000000000000000"   // (R[3]) = load_1_B1 (R[3],DMb_stat); 
000069  1 0  "10101000001000111111111111111100"   // (__spill_DMw[-4]) = stack_store_bndl_B3 (R[3],SP,-4); 
000070  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000071  1 0  "00000000011001100001000000110010"   // (R[6],R[3]) = load__pl_const_1_B1 (R[3],DMb,DMb,DMb,DMb,PM); 
000072  1 0  "01111100001001101111111011000000"   // (DMb[-320],DMb,DMb,DMb,DMb,PM) = _pl_rd_res_reg_const_store_1_B1 (R[6],-320,DMb[-320],DMb,DMb,DMb,DMb,PM,SP); 
000073  1 0  "00000000100001010010100000000001"   // (R[5],) = _pl_2_B1 (R[5],R[4]); 
000074  1 0  "01000100011001100000000000000000"   // (R[6]) = load_4_B1 (R[3],DMb,DMb,DMb,DMb,PM); 
000075  1 0  "01111100001001101111111011000010"   // (DMb[-320],DMb,DMb,DMb,DMb,PM) = _pl_rd_res_reg_const_store_1_B1 (R[6],-318,DMb[-320],DMb,DMb,DMb,DMb,PM,SP); 
000076  1 0  "00001000011000110000001110111110"   // (R[3],MC) = _pl_const_7_B1 (R[3]); 
000077  1 0  "01001000000001100000000000000000"   // (R[6]) = lhi_const_1_B1 (0); 
000078  1 0  "01000100011010000000000000000000"   // (R[8]) = load_4_B1 (R[3],DMb,DMb,DMb,DMb,PM); 
000079  1 0  "01111100001010001111111010111100"   // (DMb[-324],DMb,DMb,DMb,DMb,PM) = _pl_rd_res_reg_const_store_1_B1 (R[8],-324,DMb[-324],DMb,DMb,DMb,DMb,PM,SP); 
000080  1 0  "01010100110010000000000000000000"   // (R[8]) = w32_const_bor_1_B1 (R[6],0); 
000081  1 0  "01000100011001100000000000000010"   // (R[6]) = load__pl_const_2_B1 (R[3],DMb,DMb,DMb,DMb,PM); 
000082  1 0  "00000000100010000100000000000001"   // (R[8],) = _pl_2_B1 (R[8],R[4]); 
000083  1 0  "01010000101000110000000000000000"   // (R[3]) = load_1_B1 (R[5],DMb_stat); 
000084  1 0  "01111100001001101111111010111110"   // (DMb[-324],DMb,DMb,DMb,DMb,PM) = _pl_rd_res_reg_const_store_1_B1 (R[6],-322,DMb[-324],DMb,DMb,DMb,DMb,PM,SP); 
000085  1 0  "01001000000001000000000000000000"   // (R[4]) = lhi_const_1_B1 (0); 
000086  1 0  "01010001000010010000000000000000"   // (R[9]) = load_1_B1 (R[8],DMb_stat); 
000087  1 0  "01000100001011111111111011000100"   // (R[15]) = load__pl_rd_res_reg_const_3_B1 (-316,DMb[-316],SP); 
000088  1 0  "01000100011011100000000000000000"   // (R[14]) = load_5_B1 (R[3],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 
000089  1 0  "01111100011011110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_4_B1 (R[15],R[3],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 
000090  1 0  "01010100100001000000000000000000"   // (R[4]) = w32_const_bor_1_B1 (R[4],0); 
000091  1 0  "01001000000001010000000000000000"   // (R[5]) = lhi_const_1_B1 (0); 
000092  1 0  "01010100101001010000000000000000"   // (R[5]) = w32_const_bor_1_B1 (R[5],0); 
000093  1 0  "00000001111011100111100000011000"   // (R[15],MC) = _mi_3_B1 (R[15],R[14]); 
000094  1 0  "01010000100010000000000000000000"   // (R[8]) = load_1_B1 (R[4],DMb_stat); 
000095  1 0  "01010100000000100000000000010000"   // (R[2]) = const_1_B2 (); 
000096  1 0  "01001000000000110000000000000000"   // (R[3]) = lhi_const_1_B1 (0); 
000097  1 0  "00000000010010000111000000011000"   // (R[14],MC) = _mi_1_B1 (R[2],R[8]); 
000098  1 0  "01010100011000110000000000000000"   // (R[3]) = w32_const_bor_1_B1 (R[3],0); 
000099  1 0  "01001000000010110000000000000000"   // (R[11]) = lhi_const_1_B1 (0); 
000100  1 0  "01001000000001100000000100000000"   // (R[6]) = lhi_const_1_B1 (256); 
000101  1 0  "01010000101010100000000000000000"   // (R[10]) = load_1_B1 (R[5],DMb_stat); 
000102  1 0  "01010101011000100000000000000000"   // (R[2]) = w32_const_bor_1_B1 (R[11],0); 
000103  1 0  "01010100110011010000000100000000"   // (R[13]) = w32_const_bor_1_B1 (R[6],256); 
000104  1 0  "10101000001010101111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[10],SP,-16); 
000105  1 0  "10110101111010110000000000010000"   // (R[11]) = __sshort_1_B1 (R[15]); 
000106  1 0  "00000001010011100101000000010010"   // (R[10]) = _ls_1_B1 (R[10],R[14]); 
000107  1 0  "01010000011001100000000000000000"   // (R[6]) = load_1_B1 (R[3],DMb_stat); 
000108  1 0  "10101000001011001111111111110100"   // (__spill_DMw[-12]) = stack_store_bndl_B3 (R[12],SP,-12); 
000109  1 0  "10101000001011011111111111101100"   // (__spill_DMw[-20]) = stack_store_bndl_B3 (R[13],SP,-20); 
000110  1 0  "10101000001000101111111111101000"   // (__spill_DMw[-24]) = stack_store_bndl_B3 (R[2],SP,-24); 
000111  1 0  "10101000001000111111111111100100"   // (__spill_DMw[-28]) = stack_store_bndl_B3 (R[3],SP,-28); 
000112  1 0  "10101000001001011111111111100000"   // (__spill_DMw[-32]) = stack_store_bndl_B3 (R[5],SP,-32); 
000113  1 0  "10101000001001001111111111011100"   // (__spill_DMw[-36]) = stack_store_bndl_B3 (R[4],SP,-36); 
000114  1 0  "00010101011000000000000100101010"   // () = eqz_br_const_2_B1 (R[11],298); 
000115  1 0  "00000000110011010110000000010100"   // (R[12]) = _lt_1_B1 (R[6],R[13]); 
000116  1 0  "00001000110011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[6]); 

// m343;   next: m346, jump target: m347 (next offset: 121)
000117  1 0  "00000001011000000001000000001100"   // (R[2]) = _ge_const_1_B2 (R[11]); 
000118  1 0  "00100000010000000000000000000010"   // () = nez_br_const_1_B1 (R[2],2); 
000119  1 0  "01010101011011110000000000000000"   // R[15] = R[11]; 
000120  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m346;   next: m349 (next offset: 122)
000121  1 0  "00000000000010110111100000011000"   // (R[15],MC) = _mi_const_1_B1 (R[11]); 

// m347;   next: m349 (next offset: 122)

// m349;   next: m352, jump target: m353 (next offset: 127)
000122  1 0  "01001000000000100000000000000001"   // (R[2]) = const_3_B1 (); 
000123  1 0  "00000001111000100001000000010011"   // (R[2]) = _lt_2_B1 (R[15],R[2]); 
000124  1 0  "00100000010000000000000000000011"   // () = nez_br_const_1_B1 (R[2],3); 
000125  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000126  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m352;   next: m355 (next offset: 129)
000127  1 0  "10011001111011110000000000000110"   // (R[15]) = _rs_const_6_B1 (R[15]); 
000128  1 0  "01010100000001110000000000000110"   // (R[7]) = const_4_B2 (); 

// m353;   next: m355 (next offset: 129)

// m355;   next: m358, jump target: m359 (next offset: 133)
000129  1 0  "10001101111000100000000100000000"   // (R[2]) = _lt_const_6_B1 (R[15]); 
000130  1 0  "00100000010000000000000000000011"   // () = nez_br_const_1_B1 (R[2],3); 
000131  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000132  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m358;   next: m361 (next offset: 135)
000133  1 0  "10011001111011110000000000000101"   // (R[15]) = _rs_const_5_B1 (R[15]); 
000134  1 0  "00001000111001110000000000000101"   // (R[7],MC) = _pl_const_6_B1 (R[7]); 

// m359;   next: m361 (next offset: 135)

// m361;   next: m364, jump target: m365 (next offset: 139)
000135  1 0  "10001101111000100000000000010000"   // (R[2]) = _lt_const_5_B1 (R[15]); 
000136  1 0  "00100000010000000000000000000011"   // () = nez_br_const_1_B1 (R[2],3); 
000137  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000138  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m364;   next: m367 (next offset: 141)
000139  1 0  "10011001111011110000000000000100"   // (R[15]) = _rs_const_4_B1 (R[15]); 
000140  1 0  "00001000111001110000000000000100"   // (R[7],MC) = _pl_const_5_B1 (R[7]); 

// m365;   next: m367 (next offset: 141)

// m367;   next: m370, jump target: m371 (next offset: 145)
000141  1 0  "10001101111000100000000000000100"   // (R[2]) = _lt_const_4_B1 (R[15]); 
000142  1 0  "00100000010000000000000000000011"   // () = nez_br_const_1_B1 (R[2],3); 
000143  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000144  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m370;   next: m373 (next offset: 147)
000145  1 0  "10011001111011110000000000000011"   // (R[15]) = _rs_const_3_B1 (R[15]); 
000146  1 0  "00001000111001110000000000000011"   // (R[7],MC) = _pl_const_4_B1 (R[7]); 

// m371;   next: m373 (next offset: 147)

// m373;   next: m376, jump target: m377 (next offset: 151)
000147  1 0  "10001101111000100000000000000010"   // (R[2]) = _lt_const_3_B1 (R[15]); 
000148  1 0  "00100000010000000000000000000011"   // () = nez_br_const_1_B1 (R[2],3); 
000149  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000150  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m376;   next: m379 (next offset: 153)
000151  1 0  "10011001111011110000000000000010"   // (R[15]) = _rs_const_2_B1 (R[15]); 
000152  1 0  "00001000111001110000000000000010"   // (R[7],MC) = _pl_const_3_B1 (R[7]); 

// m377;   next: m379 (next offset: 153)

// m379;   next: m382, jump target: m383 (next offset: 157)
000153  1 0  "10001101111011110000000000000001"   // (R[15]) = _lt_const_2_B1 (R[15]); 
000154  1 0  "00100001111000000000000000000010"   // () = nez_br_const_1_B1 (R[15],2); 
000155  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000156  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m382;   next: m385 (next offset: 158)
000157  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[7]); 

// m383;   next: m385 (next offset: 158)

// m385;   next: m388, jump target: m389 (next offset: 162)
000158  1 0  "00000001011000000111100000001110"   // (R[15]) = _gt_const_1_B2 (R[11]); 
000159  1 0  "00100001111000000000000000000101"   // () = nez_br_const_1_B1 (R[15],5); 
000160  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000161  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m388;   next: m391 (next offset: 166)
000162  1 0  "01010100000011110000000000000001"   // (R[15]) = const_6_B2 (); 
000163  1 0  "00000001111001110111100000010010"   // (R[15]) = _ls_1_B1 (R[15],R[7]); 
000164  1 0  "00000001011011110101100000000001"   // (R[11],) = _pl_3_B1 (R[11],R[15]); 
000165  1 0  "00001001011010111111111111111111"   // (R[11],MC) = _pl_const_2_B1 (R[11]); 

// m389;   next: m391 (next offset: 166)

// m391;   next: m396, jump target: m394 (next offset: 174)
000166  1 0  "10001000111011110000000000000010"   // (R[15]) = _ls_const_2_B1 (R[7]); 
000167  1 0  "00000001001011110001000000000001"   // (R[2],) = _pl_2_B1 (R[9],R[15]); 
000168  1 0  "00111000010010010000000000000000"   // (R[9]) = load_2_B1 (R[2],DMb); 
000169  1 0  "00000001000010010100000000000001"   // (R[8],) = _pl_1_B1 (R[9],R[8]); 
000170  1 0  "10010001000011110000000000010000"   // (R[15]) = _lt_const_1_B1 (R[8]); 
000171  1 0  "00100001111000000000000001110011"   // () = nez_br_const_1_B1 (R[15],115); 
000172  1 0  "01001100010000100000000000000010"   // (R[2]) = _pl_const_load_1_B1 (R[2],DMb); 
000173  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m396;   next: m401, jump target: m399 (next offset: 183)
000174  1 0  "00000001001011100100000000011000"   // (R[8],MC) = _mi_2_B1 (R[9],R[14]); 
000175  1 0  "10101000100010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[4],DMb_stat); 
000176  1 0  "00000000010010000100000000010111"   // (R[8]) = _rs_1_B1 (R[2],R[8]); 
000177  1 0  "00000001000010100100000000001010"   // (R[8]) = _or_1_B1 (R[10],R[8]); 
000178  1 0  "10101000101000100000000000000000"   // (DMb_stat) = store_3_B1 (R[2],R[5],DMb_stat); 
000179  1 0  "10011101000010010000000000001000"   // (R[9]) = _rs_const_1_B1 (R[8]); 
000180  1 0  "00100001100000000000000000010011"   // () = nez_br_const_1_B1 (R[12],19); 
000181  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 
000182  1 0  "00010001001010010000000011111111"   // (R[9]) = _ad_const_1_B1 (R[9]); 

// m401;   next: m402 (next offset: 190)
000183  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000184  1 0  "01011100001010011111111111010110"   // (__spill_DMb[-42]) = stack_store_bndl_B1 (R[9],SP,-42); 
000185  1 0  "01011100001010001111111111010111"   // (__spill_DMb[-41]) = stack_store_bndl_B1 (R[8],SP,-41); 
000186  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000187  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 
000188  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000189  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m402 subroutine call;   next: m403 (next offset: 190)

// m403, jump target: m405 (next offset: 201)
000190  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000191  1 0  "00111000001010011111111111010110"   // (R[9]) = stack_load_bndl_B1 (__spill_DMb[-42],SP,-42); 
000192  1 0  "00111000001010001111111111010111"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-41],SP,-41); 
000193  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000194  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000195  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000196  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000197  1 0  "01010000001010111111111111110000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000198  1 0  "00000000110010010000100000110101"   // (R[6],DMb_stat) = store__pl_const_1_B1 (R[9],R[6],DMb_stat); 
000199  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000200  1 0  "10101000011001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[3],DMb_stat); 

// m399;   next: m405 (next offset: 203)
000201  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000202  1 0  "01011100110010010000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[9],R[6],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m405;   next: m409, jump target: m418 (next offset: 207)
000203  1 0  "10010101001010010000000011111111"   // (R[9]) = _ne_const_1_B1 (R[9]); 
000204  1 0  "00100001001000000000000000011010"   // () = nez_br_const_1_B1 (R[9],26); 
000205  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000206  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m409;   next: m414, jump target: m412 (next offset: 212)
000207  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
000208  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
000209  1 0  "00100001010000000000000000010010"   // () = nez_br_const_1_B1 (R[10],18); 
000210  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000211  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m414;   next: m415 (next offset: 218)
000212  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 
000213  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000214  1 0  "01011100001010001111111111010111"   // (__spill_DMb[-41]) = stack_store_bndl_B1 (R[8],SP,-41); 
000215  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000216  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000217  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m415 subroutine call;   next: m416 (next offset: 218)

// m416, jump target: m989 (next offset: 229)
000218  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000219  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000220  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000221  1 0  "00111000001010001111111111010111"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-41],SP,-41); 
000222  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000223  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000224  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000225  1 0  "00000001001000000000100000110101"   // (R[9],DMb_stat) = store_const__pl_const_1_B1 (R[9],DMb_stat); 
000226  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000227  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000228  1 0  "01010000001010111111111111110000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m412;   next: m989 (next offset: 232)
000229  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
000230  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
000231  1 0  "01011101001000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m989;   next: m420 (next offset: 232)

// m418;   next: m420 (next offset: 232)

// m420;   next: m425, jump target: m423 (next offset: 238)
000232  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000233  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
000234  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
000235  1 0  "00100001010000000000000000010010"   // () = nez_br_const_1_B1 (R[10],18); 
000236  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000237  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m425;   next: m426 (next offset: 244)
000238  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 
000239  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000240  1 0  "01011100001010001111111111010111"   // (__spill_DMb[-41]) = stack_store_bndl_B1 (R[8],SP,-41); 
000241  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000242  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000243  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m426 subroutine call;   next: m427 (next offset: 244)

// m427, jump target: m429 (next offset: 255)
000244  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000245  1 0  "00111000001010001111111111010111"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-41],SP,-41); 
000246  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000247  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000248  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000249  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000250  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000251  1 0  "01010000001010111111111111110000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000252  1 0  "00000001001010000000100000110101"   // (R[9],DMb_stat) = store__pl_const_1_B1 (R[8],R[9],DMb_stat); 
000253  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000254  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 

// m423;   next: m429 (next offset: 258)
000255  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
000256  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
000257  1 0  "01011101001010000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m429;   next: m433, jump target: m445 (next offset: 262)
000258  1 0  "10010101000010000000000011111111"   // (R[8]) = _ne_const_1_B1 (R[8]); 
000259  1 0  "00100001000000000000000000100010"   // () = nez_br_const_1_B1 (R[8],34); 
000260  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000261  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m433;   next: m438, jump target: m436 (next offset: 267)
000262  1 0  "01010000011010000000000000000000"   // (R[8]) = load_1_B1 (R[3],DMb_stat); 
000263  1 0  "00000001000001100100100000010100"   // (R[9]) = _lt_1_B1 (R[8],R[6]); 
000264  1 0  "00100001001000000000000000010001"   // () = nez_br_const_1_B1 (R[9],17); 
000265  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000266  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m438;   next: m439 (next offset: 272)
000267  1 0  "10101000001010111111111111110000"   // (__spill_DMw[-16]) = stack_store_bndl_B3 (R[11],SP,-16); 
000268  1 0  "10101000001001111111111111011000"   // (__spill_DMw[-40]) = stack_store_bndl_B3 (R[7],SP,-40); 
000269  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000270  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000271  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m439 subroutine call;   next: m440 (next offset: 272)

// m440, jump target: m445 (next offset: 283)
000272  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000273  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000274  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000275  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000276  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000277  1 0  "01010000001001111111111111011000"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-40],SP,-40); 
000278  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000279  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000280  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000281  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000282  1 0  "01010000001010111111111111110000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 

// m436, jump target: m445 (next offset: 288)
000283  1 0  "00001001000010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[8]); 
000284  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000285  1 0  "01011101000000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[8],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 
000286  1 0  "00100100000000000000000000001000"   // () = j_const_1_B1 (8); 
000287  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m394;   next: m445 (next offset: 295)
000288  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000289  1 0  "00000000110010010011000000010010"   // (R[6]) = _ls_2_B1 (R[6],R[9]); 
000290  1 0  "00000000010001100011000000001010"   // (R[6]) = _or_2_B1 (R[6],R[2]); 
000291  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 
000292  1 0  "10101000100010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[4],DMb_stat); 
000293  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000294  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m445;   next: m450, jump target: m448 (next offset: 301)
000295  1 0  "01010000100010000000000000000000"   // (R[8]) = load_1_B1 (R[4],DMb_stat); 
000296  1 0  "00000000111010000100100000000001"   // (R[9],) = _pl_2_B1 (R[7],R[8]); 
000297  1 0  "10010001001011010000000000010000"   // (R[13]) = _lt_const_1_B1 (R[9]); 
000298  1 0  "00100001101000000000000001101100"   // () = nez_br_const_1_B1 (R[13],108); 
000299  1 0  "01010000101011000000000000000000"   // (R[12]) = load_1_B1 (R[5],DMb_stat); 
000300  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m450;   next: m455, jump target: m453 (next offset: 315)
000301  1 0  "01010100000010010000000000010000"   // (R[9]) = const_1_B2 (); 
000302  1 0  "00000001001010000100000000011000"   // (R[8],MC) = _mi_1_B1 (R[9],R[8]); 
000303  1 0  "00000000111010000011100000011000"   // (R[7],MC) = _mi_1_B1 (R[7],R[8]); 
000304  1 0  "10101000100001110000000000000000"   // (DMb_stat) = store_1_B1 (R[7],R[4],DMb_stat); 
000305  1 0  "00000001100010000100000000010010"   // (R[8]) = _ls_1_B1 (R[12],R[8]); 
000306  1 0  "00000001011001110011100000010111"   // (R[7]) = _rs_2_B1 (R[11],R[7]); 
000307  1 0  "00000000111010000100000000001010"   // (R[8]) = _or_1_B1 (R[8],R[7]); 
000308  1 0  "01010000011001110000000000000000"   // (R[7]) = load_1_B1 (R[3],DMb_stat); 
000309  1 0  "10101000101010110000000000000000"   // (DMb_stat) = store_1_B1 (R[11],R[5],DMb_stat); 
000310  1 0  "00000000111001100011000000010100"   // (R[6]) = _lt_1_B1 (R[7],R[6]); 
000311  1 0  "10011101000010010000000000001000"   // (R[9]) = _rs_const_1_B1 (R[8]); 
000312  1 0  "00100000110000000000000000010000"   // () = nez_br_const_1_B1 (R[6],16); 
000313  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 
000314  1 0  "00010001001010010000000011111111"   // (R[9]) = _ad_const_1_B1 (R[9]); 

// m455;   next: m456 (next offset: 320)
000315  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000316  1 0  "01011100001010011111111111110010"   // (__spill_DMb[-14]) = stack_store_bndl_B1 (R[9],SP,-14); 
000317  1 0  "01011100001010001111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[8],SP,-13); 
000318  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000319  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m456 subroutine call;   next: m457 (next offset: 320)

// m457, jump target: m459 (next offset: 330)
000320  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000321  1 0  "00111000001010011111111111110010"   // (R[9]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000322  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000323  1 0  "00000000100010010000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[9],R[4],DMb_stat); 
000324  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000325  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000326  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000327  1 0  "00111000001010001111111111110011"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000328  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000329  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m453;   next: m459 (next offset: 333)
000330  1 0  "00001000111001100000000000000001"   // (R[6],MC) = _pl_const_1_B1 (R[7]); 
000331  1 0  "10101000011001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[3],DMb_stat); 
000332  1 0  "01011100111010010000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[9],R[7],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m459;   next: m463, jump target: m472 (next offset: 337)
000333  1 0  "10010101001001110000000011111111"   // (R[7]) = _ne_const_1_B1 (R[9]); 
000334  1 0  "00100000111000000000000000010111"   // () = nez_br_const_1_B1 (R[7],23); 
000335  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000336  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m463;   next: m468, jump target: m466 (next offset: 342)
000337  1 0  "01010000011001110000000000000000"   // (R[7]) = load_1_B1 (R[3],DMb_stat); 
000338  1 0  "00000000111001100100100000010100"   // (R[9]) = _lt_1_B1 (R[7],R[6]); 
000339  1 0  "00100001001000000000000000001111"   // () = nez_br_const_1_B1 (R[9],15); 
000340  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000341  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m468;   next: m469 (next offset: 346)
000342  1 0  "01011100001010001111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[8],SP,-13); 
000343  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000344  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000345  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m469 subroutine call;   next: m470 (next offset: 346)

// m470, jump target: m992 (next offset: 356)
000346  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000347  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000348  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000349  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000350  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000351  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000352  1 0  "00111000001010001111111111110011"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000353  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000354  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000355  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m466;   next: m992 (next offset: 359)
000356  1 0  "00001000111010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[7]); 
000357  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000358  1 0  "01011100111000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[7],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m992;   next: m474 (next offset: 359)

// m472;   next: m474 (next offset: 359)

// m474;   next: m479, jump target: m477 (next offset: 365)
000359  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000360  1 0  "01010000011001110000000000000000"   // (R[7]) = load_1_B1 (R[3],DMb_stat); 
000361  1 0  "00000000111001100100100000010100"   // (R[9]) = _lt_1_B1 (R[7],R[6]); 
000362  1 0  "00100001001000000000000000001111"   // () = nez_br_const_1_B1 (R[9],15); 
000363  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000364  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m479;   next: m480 (next offset: 369)
000365  1 0  "01011100001010001111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[8],SP,-13); 
000366  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000367  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000368  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m480 subroutine call;   next: m481 (next offset: 369)

// m481, jump target: m483 (next offset: 379)
000369  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000370  1 0  "00111000001010001111111111110011"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000371  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000372  1 0  "00000000100010000000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[8],R[4],DMb_stat); 
000373  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000374  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000375  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000376  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000377  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000378  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m477;   next: m483 (next offset: 382)
000379  1 0  "00001000111010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[7]); 
000380  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000381  1 0  "01011100111010000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[7],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m483;   next: m487, jump target: m951 (next offset: 386)
000382  1 0  "10010101000001110000000011111111"   // (R[7]) = _ne_const_1_B1 (R[8]); 
000383  1 0  "00100000111000000000000010001100"   // () = nez_br_const_1_B1 (R[7],140); 
000384  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000385  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m487;   next: m492, jump target: m490 (next offset: 391)
000386  1 0  "01010000011001110000000000000000"   // (R[7]) = load_1_B1 (R[3],DMb_stat); 
000387  1 0  "00000000111001100100000000010100"   // (R[8]) = _lt_1_B1 (R[7],R[6]); 
000388  1 0  "00100001000000000000000000001101"   // () = nez_br_const_1_B1 (R[8],13); 
000389  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000390  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m492;   next: m493 (next offset: 394)
000391  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000392  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000393  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m493 subroutine call;   next: m494 (next offset: 394)

// m494, jump target: m951 (next offset: 403)
000394  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000395  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000396  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000397  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000398  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000399  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000400  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000401  1 0  "00100100000000000000000001111011"   // () = j_const_1_B1 (123); 
000402  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m490, jump target: m951 (next offset: 408)
000403  1 0  "00001000111010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[7]); 
000404  1 0  "10101000011010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[3],DMb_stat); 
000405  1 0  "01011100111000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[7],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 
000406  1 0  "00100100000000000000000001110110"   // () = j_const_1_B1 (118); 
000407  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m448, jump target: m951 (next offset: 414)
000408  1 0  "00000001100001110011100000010010"   // (R[7]) = _ls_1_B1 (R[12],R[7]); 
000409  1 0  "00000000111010110011100000001010"   // (R[7]) = _or_1_B1 (R[7],R[11]); 
000410  1 0  "10101000101001110000000000000000"   // (DMb_stat) = store_1_B1 (R[7],R[5],DMb_stat); 
000411  1 0  "10101000100010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[4],DMb_stat); 
000412  1 0  "00100100000000000000000001110000"   // () = j_const_1_B1 (112); 
000413  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m288;   next: m293, jump target: m291 (next offset: 420)
000414  1 0  "00111001001001110000000000000000"   // (R[7]) = load_2_B1 (R[9],DMb); 
000415  1 0  "00000000111010000100000000000001"   // (R[8],) = _pl_1_B1 (R[7],R[8]); 
000416  1 0  "10010001000010110000000000010000"   // (R[11]) = _lt_const_1_B1 (R[8]); 
000417  1 0  "00100001011000000000000001100011"   // () = nez_br_const_1_B1 (R[11],99); 
000418  1 0  "01001101001010010000000000000010"   // (R[9]) = _pl_const_load_1_B1 (R[9],DMb); 
000419  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m293;   next: m298, jump target: m296 (next offset: 429)
000420  1 0  "00000000111011100011100000011000"   // (R[7],MC) = _mi_2_B1 (R[7],R[14]); 
000421  1 0  "10101000100001110000000000000000"   // (DMb_stat) = store_1_B1 (R[7],R[4],DMb_stat); 
000422  1 0  "00000001001001110011100000010111"   // (R[7]) = _rs_1_B1 (R[9],R[7]); 
000423  1 0  "00000000111010100011100000001010"   // (R[7]) = _or_1_B1 (R[10],R[7]); 
000424  1 0  "10101000101010010000000000000000"   // (DMb_stat) = store_3_B1 (R[9],R[5],DMb_stat); 
000425  1 0  "10011100111010000000000000001000"   // (R[8]) = _rs_const_1_B1 (R[7]); 
000426  1 0  "00100001100000000000000000001111"   // () = nez_br_const_1_B1 (R[12],15); 
000427  1 0  "00010000111001110000000011111111"   // (R[7]) = _ad_const_1_B1 (R[7]); 
000428  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 

// m298;   next: m299 (next offset: 434)
000429  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000430  1 0  "01011100001010001111111111110010"   // (__spill_DMb[-14]) = stack_store_bndl_B1 (R[8],SP,-14); 
000431  1 0  "01011100001001111111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[7],SP,-13); 
000432  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000433  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m299 subroutine call;   next: m300 (next offset: 434)

// m300, jump target: m302 (next offset: 443)
000434  1 0  "01010000001001101111111111101000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000435  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000436  1 0  "00111000001001111111111111110011"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000437  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000438  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000439  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000440  1 0  "00000000110010000000100000110101"   // (R[6],DMb_stat) = store__pl_const_1_B1 (R[8],R[6],DMb_stat); 
000441  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000442  1 0  "10101000011001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[3],DMb_stat); 

// m296;   next: m302 (next offset: 445)
000443  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000444  1 0  "01011100110010000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[6],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m302;   next: m306, jump target: m315 (next offset: 449)
000445  1 0  "10010101000010000000000011111111"   // (R[8]) = _ne_const_1_B1 (R[8]); 
000446  1 0  "00100001000000000000000000010110"   // () = nez_br_const_1_B1 (R[8],22); 
000447  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000448  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m306;   next: m311, jump target: m309 (next offset: 454)
000449  1 0  "01010000011010000000000000000000"   // (R[8]) = load_1_B1 (R[3],DMb_stat); 
000450  1 0  "00000001000001100100100000010100"   // (R[9]) = _lt_1_B1 (R[8],R[6]); 
000451  1 0  "00100001001000000000000000001110"   // () = nez_br_const_1_B1 (R[9],14); 
000452  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000453  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m311;   next: m312 (next offset: 458)
000454  1 0  "01011100001001111111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[7],SP,-13); 
000455  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000456  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000457  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m312 subroutine call;   next: m313 (next offset: 458)

// m313, jump target: m985 (next offset: 467)
000458  1 0  "01010000001010001111111111101000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000459  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000460  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000461  1 0  "00111000001001111111111111110011"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000462  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000463  1 0  "00000001000000000000100000110101"   // (R[8],DMb_stat) = store_const__pl_const_1_B1 (R[8],DMb_stat); 
000464  1 0  "10101000011010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[3],DMb_stat); 
000465  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000466  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m309;   next: m985 (next offset: 470)
000467  1 0  "00001001000010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[8]); 
000468  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000469  1 0  "01011101000000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[8],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m985;   next: m317 (next offset: 470)

// m315;   next: m317 (next offset: 470)

// m317;   next: m322, jump target: m320 (next offset: 476)
000470  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000471  1 0  "01010000011010000000000000000000"   // (R[8]) = load_1_B1 (R[3],DMb_stat); 
000472  1 0  "00000001000001100100100000010100"   // (R[9]) = _lt_1_B1 (R[8],R[6]); 
000473  1 0  "00100001001000000000000000001110"   // () = nez_br_const_1_B1 (R[9],14); 
000474  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000475  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m322;   next: m323 (next offset: 480)
000476  1 0  "01011100001001111111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[7],SP,-13); 
000477  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000478  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000479  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m323 subroutine call;   next: m324 (next offset: 480)

// m324, jump target: m326 (next offset: 489)
000480  1 0  "01010000001010001111111111101000"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000481  1 0  "00111000001001111111111111110011"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
000482  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000483  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000484  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000485  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000486  1 0  "00000001000001110000100000110101"   // (R[8],DMb_stat) = store__pl_const_1_B1 (R[7],R[8],DMb_stat); 
000487  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000488  1 0  "10101000011010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[3],DMb_stat); 

// m320;   next: m326 (next offset: 492)
000489  1 0  "00001001000010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[8]); 
000490  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000491  1 0  "01011101000001110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[7],R[8],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m326;   next: m330, jump target: m951 (next offset: 496)
000492  1 0  "10010100111001110000000011111111"   // (R[7]) = _ne_const_1_B1 (R[7]); 
000493  1 0  "00100000111000000000000000011110"   // () = nez_br_const_1_B1 (R[7],30); 
000494  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000495  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m330;   next: m335, jump target: m333 (next offset: 501)
000496  1 0  "01010000011001110000000000000000"   // (R[7]) = load_1_B1 (R[3],DMb_stat); 
000497  1 0  "00000000111001100100000000010100"   // (R[8]) = _lt_1_B1 (R[7],R[6]); 
000498  1 0  "00100001000000000000000000001101"   // () = nez_br_const_1_B1 (R[8],13); 
000499  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000500  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m335;   next: m336 (next offset: 504)
000501  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000502  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000503  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m336 subroutine call;   next: m337 (next offset: 504)

// m337, jump target: m951 (next offset: 513)
000504  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000505  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000506  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000507  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000508  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000509  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000510  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000511  1 0  "00100100000000000000000000001101"   // () = j_const_1_B1 (13); 
000512  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m333, jump target: m951 (next offset: 518)
000513  1 0  "00001000111010000000000000000001"   // (R[8],MC) = _pl_const_1_B1 (R[7]); 
000514  1 0  "10101000011010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[3],DMb_stat); 
000515  1 0  "01011100111000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[7],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 
000516  1 0  "00100100000000000000000000001000"   // () = j_const_1_B1 (8); 
000517  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m291;   next: m951 (next offset: 525)
000518  1 0  "01010000001001101111111111110000"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-16],SP,-16); 
000519  1 0  "00000000110001110011000000010010"   // (R[6]) = _ls_2_B1 (R[6],R[7]); 
000520  1 0  "00000000110010010011000000001010"   // (R[6]) = _or_2_B1 (R[6],R[9]); 
000521  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 
000522  1 0  "10101000100010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[4],DMb_stat); 
000523  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
000524  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m951;   next: m879, jump target: m504 (next offset: 530)
000525  1 0  "01001100001001111111111011000010"   // (R[7]) = load__pl_rd_res_reg_const_1_B1 (-318,DMb,SP); 
000526  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000527  1 0  "00010101000000000000001001110100"   // () = eqz_br_const_1_B1 (R[8],628); 
000528  1 0  "00111000001010011111111011000000"   // (R[9]) = load__pl_rd_res_reg_const_2_B1 (-320,DMb,SP); 
000529  1 0  "01011100001010011111111111110011"   // (__spill_DMb[-13]) = stack_store_bndl_B1 (R[9],SP,-13); 

// m879;   next: m585 (next offset: 537)
000530  1 0  "01111100001001111111111111011010"   // (__spill_DMh[-38]) = stack_store_bndl_B2 (R[7],SP,-38); 
000531  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000532  1 0  "01001100001010011111111010111110"   // (R[9]) = load__pl_rd_res_reg_const_1_B1 (-322,DMb,SP); 
000533  1 0  "00111000001010111111111010111100"   // (R[11]) = load__pl_rd_res_reg_const_2_B1 (-324,DMb,SP); 
000534  1 0  "01111100001010011111111111110000"   // (__spill_DMh[-16]) = stack_store_bndl_B2 (R[9],SP,-16); 
000535  1 0  "01011100001010111111111111110010"   // (__spill_DMb[-14]) = stack_store_bndl_B1 (R[11],SP,-14); 
000536  1 0  "01010100000010010000000000000001"   // (R[9]) = const_6_B2 (); 

// m585, jump target: m2 (next offset: 542)
000537  1 0  "10001001001001110000000000000001"   // (R[7]) = _ls_const_3_B1 (R[9]); 
000538  1 0  "00000000111010100101000000000001"   // (R[10],) = _pl_2_B1 (R[10],R[7]); 
000539  1 0  "01010000001010111111111111111100"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 
000540  1 0  "00100100000000000000000000000011"   // () = j_const_1_B1 (3); 
000541  1 0  "01010101001001110000000000000000"   // R[7] = R[9]; 

// m576;   next: m2 (next offset: 544)
000542  1 0  "00001001010010100000000000000010"   // (R[10],MC) = _pl_const_3_B1 (R[10]); 
000543  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[7]); 

// m2;   next: m969 (next offset: 544)

// m969;   next: m587, jump target: m576 (next offset: 551)
000544  1 0  "01000101010011010000000000000000"   // (R[13]) = load_3_B1 (R[10],DMb[-316]); 
000545  1 0  "00000000111010000110000000010000"   // (R[12]) = _le_1_B1 (R[7],R[8]); 
000546  1 0  "00000001101000000110100000001011"   // (R[13]) = eqz_1_B1 (R[13]); 
000547  1 0  "00000001100011010110000000000011"   // (R[12]) = land_1_B1 (R[13],R[12]); 
000548  1 0  "00100001100000001111111111111000"   // () = nez_br_const_1_B1 (R[12],-8); 
000549  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000550  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m587;   next: m880, jump target: m652 (next offset: 556)
000551  1 0  "00000000111010010110000000011000"   // (R[12],MC) = _mi_1_B1 (R[7],R[9]); 
000552  1 0  "10001101100010010000000000010000"   // (R[9]) = _lt_const_5_B1 (R[12]); 
000553  1 0  "00100001001000000000000010100001"   // () = nez_br_const_1_B1 (R[9],161); 
000554  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000555  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m880;   next: m595 (next offset: 568)
000556  1 0  "10011001100010000000000000011111"   // (R[8]) = _rs_const_7_B1 (R[12]); 
000557  1 0  "00010001000010000000000000001111"   // (R[8]) = _ad_const_2_B1 (R[8]); 
000558  1 0  "00000001000011000100000000000001"   // (R[8],) = _pl_2_B1 (R[12],R[8]); 
000559  1 0  "10011001000010110000000000000100"   // (R[11]) = _rs_const_4_B1 (R[8]); 
000560  1 0  "10101000001001111111111111001100"   // (__spill_DMw[-52]) = stack_store_bndl_B3 (R[7],SP,-52); 
000561  1 0  "10101000001010101111111111001000"   // (__spill_DMw[-56]) = stack_store_bndl_B3 (R[10],SP,-56); 
000562  1 0  "10101000001010111111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[11],SP,-48); 
000563  1 0  "10101000001011001111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[12],SP,-44); 
000564  1 0  "01001000000001110000000000000000"   // (R[7]) = const_5_B3 (); 
000565  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000566  1 0  "01001100001010011111111111110000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-16],SP,-16); 
000567  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 

// m595;   next: m600, jump target: m598 (next offset: 574)
000568  1 0  "01010000100011100000000000000000"   // (R[14]) = load_1_B1 (R[4],DMb_stat); 
000569  1 0  "00000001000011100110100000000001"   // (R[13],) = _pl_1_B1 (R[8],R[14]); 
000570  1 0  "10010001101011110000000000010000"   // (R[15]) = _lt_const_1_B1 (R[13]); 
000571  1 0  "00100001111000000000000001111111"   // () = nez_br_const_1_B1 (R[15],127); 
000572  1 0  "01010000101011000000000000000000"   // (R[12]) = load_1_B1 (R[5],DMb_stat); 
000573  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m600;   next: m605, jump target: m603 (next offset: 587)
000574  1 0  "00000001010011100110100000011000"   // (R[13],MC) = _mi_1_B1 (R[10],R[14]); 
000575  1 0  "00000001000011010111000000011000"   // (R[14],MC) = _mi_2_B1 (R[8],R[13]); 
000576  1 0  "00000001100011010110000000010010"   // (R[12]) = _ls_1_B1 (R[12],R[13]); 
000577  1 0  "10101000100011100000000000000000"   // (DMb_stat) = store_1_B1 (R[14],R[4],DMb_stat); 
000578  1 0  "00000001001011100110100000010111"   // (R[13]) = _rs_1_B1 (R[9],R[14]); 
000579  1 0  "00000001100011010111000000001010"   // (R[14]) = _or_1_B1 (R[12],R[13]); 
000580  1 0  "01010000011011000000000000000000"   // (R[12]) = load_1_B1 (R[3],DMb_stat); 
000581  1 0  "10101000101010010000000000000000"   // (DMb_stat) = store_3_B1 (R[9],R[5],DMb_stat); 
000582  1 0  "00000001100001100110100000010100"   // (R[13]) = _lt_1_B1 (R[12],R[6]); 
000583  1 0  "10011101110011110000000000001000"   // (R[15]) = _rs_const_1_B1 (R[14]); 
000584  1 0  "00100001101000000000000000010110"   // () = nez_br_const_1_B1 (R[13],22); 
000585  1 0  "00010001110011100000000011111111"   // (R[14]) = _ad_const_1_B1 (R[14]); 
000586  1 0  "00010001111011110000000011111111"   // (R[15]) = _ad_const_1_B1 (R[15]); 

// m605;   next: m606 (next offset: 593)
000587  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000588  1 0  "01011100001011111111111111011000"   // (__spill_DMb[-40]) = stack_store_bndl_B1 (R[15],SP,-40); 
000589  1 0  "01011100001011101111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[14],SP,-39); 
000590  1 0  "10101000001001111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[7],SP,-60); 
000591  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000592  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m606 subroutine call;   next: m607 (next offset: 593)

// m607, jump target: m609 (next offset: 608)
000593  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000594  1 0  "00111000001011111111111111011000"   // (R[15]) = stack_load_bndl_B1 (__spill_DMb[-40],SP,-40); 
000595  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000596  1 0  "00000000100011110000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[15],R[4],DMb_stat); 
000597  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000598  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 
000599  1 0  "01010000001001111111111111000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000600  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000601  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000602  1 0  "01001100001010011111111111110000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-16],SP,-16); 
000603  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000604  1 0  "01010000001010111111111111010000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000605  1 0  "00111000001011101111111111011001"   // (R[14]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000606  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000607  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m603;   next: m609 (next offset: 611)
000608  1 0  "00001001100011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[12]); 
000609  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000610  1 0  "01011101100011110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[15],R[12],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m609;   next: m613, jump target: m622 (next offset: 615)
000611  1 0  "10010101111011000000000011111111"   // (R[12]) = _ne_const_1_B1 (R[15]); 
000612  1 0  "00100001100000000000000000011100"   // () = nez_br_const_1_B1 (R[12],28); 
000613  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000614  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m613;   next: m618, jump target: m616 (next offset: 620)
000615  1 0  "01010000011011000000000000000000"   // (R[12]) = load_1_B1 (R[3],DMb_stat); 
000616  1 0  "00000001100001100110100000010100"   // (R[13]) = _lt_1_B1 (R[12],R[6]); 
000617  1 0  "00100001101000000000000000010100"   // () = nez_br_const_1_B1 (R[13],20); 
000618  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000619  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m618;   next: m619 (next offset: 625)
000620  1 0  "10101000001001111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[7],SP,-60); 
000621  1 0  "01011100001011101111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[14],SP,-39); 
000622  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000623  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000624  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m619 subroutine call;   next: m620 (next offset: 625)

// m620, jump target: m1000 (next offset: 639)
000625  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000626  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000627  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000628  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000629  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 
000630  1 0  "01010000001001111111111111000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000631  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000632  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000633  1 0  "01001100001010011111111111110000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-16],SP,-16); 
000634  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000635  1 0  "01010000001010111111111111010000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000636  1 0  "00111000001011101111111111011001"   // (R[14]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000637  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000638  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m616;   next: m1000 (next offset: 642)
000639  1 0  "00001001100011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[12]); 
000640  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000641  1 0  "01011101100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[12],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m1000;   next: m624 (next offset: 642)

// m622;   next: m624 (next offset: 642)

// m624;   next: m629, jump target: m627 (next offset: 648)
000642  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000643  1 0  "01010000011011000000000000000000"   // (R[12]) = load_1_B1 (R[3],DMb_stat); 
000644  1 0  "00000001100001100110100000010100"   // (R[13]) = _lt_1_B1 (R[12],R[6]); 
000645  1 0  "00100001101000000000000000010100"   // () = nez_br_const_1_B1 (R[13],20); 
000646  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000647  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m629;   next: m630 (next offset: 653)
000648  1 0  "10101000001001111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[7],SP,-60); 
000649  1 0  "01011100001011101111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[14],SP,-39); 
000650  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000651  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000652  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m630 subroutine call;   next: m631 (next offset: 653)

// m631, jump target: m633 (next offset: 667)
000653  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000654  1 0  "00111000001011101111111111011001"   // (R[14]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000655  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000656  1 0  "00000000100011100000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[14],R[4],DMb_stat); 
000657  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000658  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 
000659  1 0  "01010000001001111111111111000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000660  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000661  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000662  1 0  "01001100001010011111111111110000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-16],SP,-16); 
000663  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000664  1 0  "01010000001010111111111111010000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000665  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000666  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m627;   next: m633 (next offset: 670)
000667  1 0  "00001001100011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[12]); 
000668  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000669  1 0  "01011101100011100000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[14],R[12],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m633;   next: m637, jump target: m649 (next offset: 674)
000670  1 0  "10010101110011000000000011111111"   // (R[12]) = _ne_const_1_B1 (R[14]); 
000671  1 0  "00100001100000000000000000011111"   // () = nez_br_const_1_B1 (R[12],31); 
000672  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000673  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m637;   next: m642, jump target: m640 (next offset: 679)
000674  1 0  "01010000011011000000000000000000"   // (R[12]) = load_1_B1 (R[3],DMb_stat); 
000675  1 0  "00000001100001100110100000010100"   // (R[13]) = _lt_1_B1 (R[12],R[6]); 
000676  1 0  "00100001101000000000000000010010"   // () = nez_br_const_1_B1 (R[13],18); 
000677  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000678  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m642;   next: m643 (next offset: 683)
000679  1 0  "10101000001001111111111111000100"   // (__spill_DMw[-60]) = stack_store_bndl_B3 (R[7],SP,-60); 
000680  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000681  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000682  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m643 subroutine call;   next: m644 (next offset: 683)

// m644, jump target: m649 (next offset: 696)
000683  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000684  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000685  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000686  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000687  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 
000688  1 0  "01010000001001111111111111000100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-60],SP,-60); 
000689  1 0  "00111000001010001111111111110010"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-14],SP,-14); 
000690  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000691  1 0  "01001100001010011111111111110000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-16],SP,-16); 
000692  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000693  1 0  "01010000001010111111111111010000"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000694  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
000695  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m640, jump target: m649 (next offset: 700)
000696  1 0  "00001001100011010000000000000001"   // (R[13],MC) = _pl_const_1_B1 (R[12]); 
000697  1 0  "10101000011011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[3],DMb_stat); 
000698  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
000699  1 0  "01011101100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[12],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m598;   next: m649 (next offset: 704)
000700  1 0  "00000001100010000110000000010010"   // (R[12]) = _ls_2_B1 (R[12],R[8]); 
000701  1 0  "00000001001011000110000000001010"   // (R[12]) = _or_2_B1 (R[12],R[9]); 
000702  1 0  "10101000101011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[5],DMb_stat); 
000703  1 0  "10101000100011010000000000000000"   // (DMb_stat) = store_1_B1 (R[13],R[4],DMb_stat); 

// m649;   next: m651, jump target: m595 (next offset: 709)
000704  1 0  "00001000111001110000000000000001"   // (R[7],MC) = _pl_const_1_B1 (R[7]); 
000705  1 0  "00000000111010110110000000010011"   // (R[12]) = _lt_3_B1 (R[7],R[11]); 
000706  1 0  "00100001100000001111111101110100"   // () = nez_br_const_1_B1 (R[12],-140); 
000707  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000708  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m651;   next: m654 (next offset: 716)
000709  1 0  "10001001011001110000000000000100"   // (R[7]) = _ls_const_1_B1 (R[11]); 
000710  1 0  "01010000001010001111111111010100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000711  1 0  "00000001000001110110000000011000"   // (R[12],MC) = _mi_1_B1 (R[8],R[7]); 
000712  1 0  "01010000001010101111111111001000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-56],SP,-56); 
000713  1 0  "01010000001001111111111111001100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-52],SP,-52); 
000714  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000715  1 0  "01010000001010111111111111111100"   // (R[11]) = stack_load_bndl_B3 (__spill_DMw[-4],SP,-4); 

// m652;   next: m654 (next offset: 716)

// m654;   next: m657, jump target: m658 (next offset: 721)
000716  1 0  "01000101010010010000000000000000"   // (R[9]) = load_3_B1 (R[10],DMb[-316]); 
000717  1 0  "00000001001000000111000000001100"   // (R[14]) = _ge_const_1_B2 (R[9]); 
000718  1 0  "00100001110000000000000000000010"   // () = nez_br_const_1_B1 (R[14],2); 
000719  1 0  "01010101001011010000000000000000"   // R[13] = R[9]; 
000720  1 0  "01001000000010100000000000000001"   // (R[10]) = const_3_B1 (); 

// m657;   next: m660 (next offset: 722)
000721  1 0  "00000000000010010110100000011000"   // (R[13],MC) = _mi_const_1_B1 (R[9]); 

// m658;   next: m660 (next offset: 722)

// m660;   next: m663, jump target: m664 (next offset: 726)
000722  1 0  "00000001101010100111000000010011"   // (R[14]) = _lt_2_B1 (R[13],R[10]); 
000723  1 0  "00100001110000000000000000000011"   // () = nez_br_const_1_B1 (R[14],3); 
000724  1 0  "01001000000010100000000000000000"   // (R[10]) = const_5_B3 (); 
000725  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m663;   next: m666 (next offset: 728)
000726  1 0  "10011001101011010000000000000110"   // (R[13]) = _rs_const_6_B1 (R[13]); 
000727  1 0  "01010100000010100000000000000110"   // (R[10]) = const_4_B2 (); 

// m664;   next: m666 (next offset: 728)

// m666;   next: m669, jump target: m670 (next offset: 732)
000728  1 0  "10001101101011100000000100000000"   // (R[14]) = _lt_const_6_B1 (R[13]); 
000729  1 0  "00100001110000000000000000000011"   // () = nez_br_const_1_B1 (R[14],3); 
000730  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000731  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m669;   next: m672 (next offset: 734)
000732  1 0  "10011001101011010000000000000101"   // (R[13]) = _rs_const_5_B1 (R[13]); 
000733  1 0  "00001001010010100000000000000101"   // (R[10],MC) = _pl_const_6_B1 (R[10]); 

// m670;   next: m672 (next offset: 734)

// m672;   next: m675, jump target: m676 (next offset: 738)
000734  1 0  "10001101101011100000000000010000"   // (R[14]) = _lt_const_5_B1 (R[13]); 
000735  1 0  "00100001110000000000000000000011"   // () = nez_br_const_1_B1 (R[14],3); 
000736  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000737  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m675;   next: m678 (next offset: 740)
000738  1 0  "10011001101011010000000000000100"   // (R[13]) = _rs_const_4_B1 (R[13]); 
000739  1 0  "00001001010010100000000000000100"   // (R[10],MC) = _pl_const_5_B1 (R[10]); 

// m676;   next: m678 (next offset: 740)

// m678;   next: m681, jump target: m682 (next offset: 744)
000740  1 0  "10001101101011100000000000000100"   // (R[14]) = _lt_const_4_B1 (R[13]); 
000741  1 0  "00100001110000000000000000000011"   // () = nez_br_const_1_B1 (R[14],3); 
000742  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000743  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m681;   next: m684 (next offset: 746)
000744  1 0  "10011001101011010000000000000011"   // (R[13]) = _rs_const_3_B1 (R[13]); 
000745  1 0  "00001001010010100000000000000011"   // (R[10],MC) = _pl_const_4_B1 (R[10]); 

// m682;   next: m684 (next offset: 746)

// m684;   next: m687, jump target: m688 (next offset: 750)
000746  1 0  "10001101101011100000000000000010"   // (R[14]) = _lt_const_3_B1 (R[13]); 
000747  1 0  "00100001110000000000000000000011"   // () = nez_br_const_1_B1 (R[14],3); 
000748  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000749  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m687;   next: m690 (next offset: 752)
000750  1 0  "10011001101011010000000000000010"   // (R[13]) = _rs_const_2_B1 (R[13]); 
000751  1 0  "00001001010010100000000000000010"   // (R[10],MC) = _pl_const_3_B1 (R[10]); 

// m688;   next: m690 (next offset: 752)

// m690;   next: m693, jump target: m694 (next offset: 756)
000752  1 0  "10001101101011010000000000000001"   // (R[13]) = _lt_const_2_B1 (R[13]); 
000753  1 0  "00100001101000000000000000000010"   // () = nez_br_const_1_B1 (R[13],2); 
000754  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000755  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m693;   next: m696 (next offset: 757)
000756  1 0  "00001001010010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[10]); 

// m694;   next: m696 (next offset: 757)

// m696;   next: m701, jump target: m699 (next offset: 768)
000757  1 0  "10001001100011000000000000000100"   // (R[12]) = _ls_const_1_B1 (R[12]); 
000758  1 0  "00000001010011000110000000000001"   // (R[12],) = _pl_2_B1 (R[12],R[10]); 
000759  1 0  "10001001100011000000000000000010"   // (R[12]) = _ls_const_2_B1 (R[12]); 
000760  1 0  "00000001011011000001000000000001"   // (R[2],) = _pl_2_B1 (R[11],R[12]); 
000761  1 0  "01010000100011010000000000000000"   // (R[13]) = load_1_B1 (R[4],DMb_stat); 
000762  1 0  "00111000010011000000000000000000"   // (R[12]) = load_2_B1 (R[2],DMb); 
000763  1 0  "00000001100011010111000000000001"   // (R[14],) = _pl_1_B1 (R[12],R[13]); 
000764  1 0  "10010001110011110000000000010000"   // (R[15]) = _lt_const_1_B1 (R[14]); 
000765  1 0  "00100001111000000000000010001000"   // () = nez_br_const_1_B1 (R[15],136); 
000766  1 0  "01010000101010110000000000000000"   // (R[11]) = load_1_B1 (R[5],DMb_stat); 
000767  1 0  "01001100010000100000000000000010"   // (R[2]) = _pl_const_load_1_B1 (R[2],DMb); 

// m701;   next: m706, jump target: m704 (next offset: 782)
000768  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 
000769  1 0  "00000001110011010110100000011000"   // (R[13],MC) = _mi_1_B1 (R[14],R[13]); 
000770  1 0  "00000001100011010110000000011000"   // (R[12],MC) = _mi_2_B1 (R[12],R[13]); 
000771  1 0  "10101000100011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[4],DMb_stat); 
000772  1 0  "00000001011011010101100000010010"   // (R[11]) = _ls_1_B1 (R[11],R[13]); 
000773  1 0  "00000000010011000110000000010111"   // (R[12]) = _rs_1_B1 (R[2],R[12]); 
000774  1 0  "00000001011011000110100000001010"   // (R[13]) = _or_1_B1 (R[11],R[12]); 
000775  1 0  "01010000011010110000000000000000"   // (R[11]) = load_1_B1 (R[3],DMb_stat); 
000776  1 0  "10101000101000100000000000000000"   // (DMb_stat) = store_3_B1 (R[2],R[5],DMb_stat); 
000777  1 0  "00000001011001100110000000010100"   // (R[12]) = _lt_1_B1 (R[11],R[6]); 
000778  1 0  "10011101101011110000000000001000"   // (R[15]) = _rs_const_1_B1 (R[13]); 
000779  1 0  "00100001100000000000000000011000"   // () = nez_br_const_1_B1 (R[12],24); 
000780  1 0  "00010001101011010000000011111111"   // (R[13]) = _ad_const_1_B1 (R[13]); 
000781  1 0  "00010001111011110000000011111111"   // (R[15]) = _ad_const_1_B1 (R[15]); 

// m706;   next: m707 (next offset: 790)
000782  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000783  1 0  "01011100001011111111111111001110"   // (__spill_DMb[-50]) = stack_store_bndl_B1 (R[15],SP,-50); 
000784  1 0  "01011100001011011111111111001111"   // (__spill_DMb[-49]) = stack_store_bndl_B1 (R[13],SP,-49); 
000785  1 0  "01111100001010011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[9],SP,-40); 
000786  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000787  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000788  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000789  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m707 subroutine call;   next: m708 (next offset: 790)

// m708, jump target: m710 (next offset: 805)
000790  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000791  1 0  "00111000001011111111111111001110"   // (R[15]) = stack_load_bndl_B1 (__spill_DMb[-50],SP,-50); 
000792  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000793  1 0  "00000000100011110000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[15],R[4],DMb_stat); 
000794  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000795  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 
000796  1 0  "01010000001010101111111111010000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000797  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000798  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000799  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000800  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000801  1 0  "01000100001010011111111111011000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000802  1 0  "00111000001011011111111111001111"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-49],SP,-49); 
000803  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000804  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m704;   next: m710 (next offset: 808)
000805  1 0  "00001001011011000000000000000001"   // (R[12],MC) = _pl_const_1_B1 (R[11]); 
000806  1 0  "10101000011011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[3],DMb_stat); 
000807  1 0  "01011101011011110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[15],R[11],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m710;   next: m714, jump target: m723 (next offset: 812)
000808  1 0  "10010101111010110000000011111111"   // (R[11]) = _ne_const_1_B1 (R[15]); 
000809  1 0  "00100001011000000000000000011110"   // () = nez_br_const_1_B1 (R[11],30); 
000810  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000811  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m714;   next: m719, jump target: m717 (next offset: 817)
000812  1 0  "01010000011010110000000000000000"   // (R[11]) = load_1_B1 (R[3],DMb_stat); 
000813  1 0  "00000001011001100110000000010100"   // (R[12]) = _lt_1_B1 (R[11],R[6]); 
000814  1 0  "00100001100000000000000000010110"   // () = nez_br_const_1_B1 (R[12],22); 
000815  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000816  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m719;   next: m720 (next offset: 824)
000817  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000818  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000819  1 0  "01111100001010011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[9],SP,-40); 
000820  1 0  "01011100001011011111111111001111"   // (__spill_DMb[-49]) = stack_store_bndl_B1 (R[13],SP,-49); 
000821  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000822  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000823  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m720 subroutine call;   next: m721 (next offset: 824)

// m721, jump target: m1003 (next offset: 838)
000824  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000825  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000826  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000827  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000828  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 
000829  1 0  "01010000001010101111111111010000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000830  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000831  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000832  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000833  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000834  1 0  "01000100001010011111111111011000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000835  1 0  "00111000001011011111111111001111"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-49],SP,-49); 
000836  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000837  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m717;   next: m1003 (next offset: 841)
000838  1 0  "00001001011011000000000000000001"   // (R[12],MC) = _pl_const_1_B1 (R[11]); 
000839  1 0  "10101000011011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[3],DMb_stat); 
000840  1 0  "01011101011000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[11],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m1003;   next: m725 (next offset: 841)

// m723;   next: m725 (next offset: 841)

// m725;   next: m730, jump target: m728 (next offset: 847)
000841  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000842  1 0  "01010000011010110000000000000000"   // (R[11]) = load_1_B1 (R[3],DMb_stat); 
000843  1 0  "00000001011001100110000000010100"   // (R[12]) = _lt_1_B1 (R[11],R[6]); 
000844  1 0  "00100001100000000000000000010110"   // () = nez_br_const_1_B1 (R[12],22); 
000845  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000846  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m730;   next: m731 (next offset: 854)
000847  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000848  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000849  1 0  "01111100001010011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[9],SP,-40); 
000850  1 0  "01011100001011011111111111001111"   // (__spill_DMb[-49]) = stack_store_bndl_B1 (R[13],SP,-49); 
000851  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000852  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000853  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m731 subroutine call;   next: m732 (next offset: 854)

// m732, jump target: m734 (next offset: 868)
000854  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000855  1 0  "00111000001011011111111111001111"   // (R[13]) = stack_load_bndl_B1 (__spill_DMb[-49],SP,-49); 
000856  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000857  1 0  "00000000100011010000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[13],R[4],DMb_stat); 
000858  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000859  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 
000860  1 0  "01010000001010101111111111010000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000861  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000862  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000863  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000864  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000865  1 0  "01000100001010011111111111011000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000866  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000867  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m728;   next: m734 (next offset: 871)
000868  1 0  "00001001011011000000000000000001"   // (R[12],MC) = _pl_const_1_B1 (R[11]); 
000869  1 0  "10101000011011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[3],DMb_stat); 
000870  1 0  "01011101011011010000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[13],R[11],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m734;   next: m738, jump target: m750 (next offset: 875)
000871  1 0  "10010101101010110000000011111111"   // (R[11]) = _ne_const_1_B1 (R[13]); 
000872  1 0  "00100001011000000000000000100010"   // () = nez_br_const_1_B1 (R[11],34); 
000873  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000874  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m738;   next: m743, jump target: m741 (next offset: 880)
000875  1 0  "01010000011010110000000000000000"   // (R[11]) = load_1_B1 (R[3],DMb_stat); 
000876  1 0  "00000001011001100110000000010100"   // (R[12]) = _lt_1_B1 (R[11],R[6]); 
000877  1 0  "00100001100000000000000000010100"   // () = nez_br_const_1_B1 (R[12],20); 
000878  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000879  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m743;   next: m744 (next offset: 886)
000880  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000881  1 0  "10101000001010101111111111010000"   // (__spill_DMw[-48]) = stack_store_bndl_B3 (R[10],SP,-48); 
000882  1 0  "01111100001010011111111111011000"   // (__spill_DMh[-40]) = stack_store_bndl_B2 (R[9],SP,-40); 
000883  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000884  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000885  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m744 subroutine call;   next: m745 (next offset: 886)

// m745, jump target: m750 (next offset: 899)
000886  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000887  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000888  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
000889  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
000890  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 
000891  1 0  "01010000001010101111111111010000"   // (R[10]) = stack_load_bndl_B3 (__spill_DMw[-48],SP,-48); 
000892  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000893  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000894  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000895  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000896  1 0  "01000100001010011111111111011000"   // (R[9]) = stack_load_bndl_B2 (__spill_DMh[-40],SP,-40); 
000897  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
000898  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 

// m741, jump target: m750 (next offset: 903)
000899  1 0  "00001001011011000000000000000001"   // (R[12],MC) = _pl_const_1_B1 (R[11]); 
000900  1 0  "10101000011011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[3],DMb_stat); 
000901  1 0  "00100100000000000000000000000110"   // () = j_const_1_B1 (6); 
000902  1 0  "01011101011000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[11],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m699;   next: m750 (next offset: 908)
000903  1 0  "00000001011011000101100000010010"   // (R[11]) = _ls_2_B1 (R[11],R[12]); 
000904  1 0  "00000000010010110101100000001010"   // (R[11]) = _or_2_B1 (R[11],R[2]); 
000905  1 0  "10101000100011100000000000000000"   // (DMb_stat) = store_1_B1 (R[14],R[4],DMb_stat); 
000906  1 0  "10101000101010110000000000000000"   // (DMb_stat) = store_1_B1 (R[11],R[5],DMb_stat); 
000907  1 0  "01010100000011100000000000010000"   // (R[14]) = const_1_B2 (); 

// m750;   next: m753, jump target: m754 (next offset: 912)
000908  1 0  "00000001001000000101100000001110"   // (R[11]) = _gt_const_1_B2 (R[9]); 
000909  1 0  "00100001011000000000000000000101"   // () = nez_br_const_1_B1 (R[11],5); 
000910  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000911  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m753;   next: m756 (next offset: 916)
000912  1 0  "01010100000010110000000000000001"   // (R[11]) = const_6_B2 (); 
000913  1 0  "00000001011010100101100000010010"   // (R[11]) = _ls_1_B1 (R[11],R[10]); 
000914  1 0  "00000001001010110100100000000001"   // (R[9],) = _pl_3_B1 (R[9],R[11]); 
000915  1 0  "00001001001010011111111111111111"   // (R[9],MC) = _pl_const_2_B1 (R[9]); 

// m754;   next: m756 (next offset: 916)

// m756;   next: m761, jump target: m759 (next offset: 922)
000916  1 0  "01010000100010110000000000000000"   // (R[11]) = load_1_B1 (R[4],DMb_stat); 
000917  1 0  "00000001010010110110000000000001"   // (R[12],) = _pl_2_B1 (R[10],R[11]); 
000918  1 0  "10010001100011110000000000010000"   // (R[15]) = _lt_const_1_B1 (R[12]); 
000919  1 0  "00100001111000000000000001110011"   // () = nez_br_const_1_B1 (R[15],115); 
000920  1 0  "01010000101011010000000000000000"   // (R[13]) = load_1_B1 (R[5],DMb_stat); 
000921  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m761;   next: m766, jump target: m764 (next offset: 935)
000922  1 0  "00000001110010110101100000011000"   // (R[11],MC) = _mi_1_B1 (R[14],R[11]); 
000923  1 0  "00000001010010110101000000011000"   // (R[10],MC) = _mi_1_B1 (R[10],R[11]); 
000924  1 0  "10101000101010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[5],DMb_stat); 
000925  1 0  "00000001101010110101100000010010"   // (R[11]) = _ls_1_B1 (R[13],R[11]); 
000926  1 0  "00000001001010100100100000010111"   // (R[9]) = _rs_2_B1 (R[9],R[10]); 
000927  1 0  "00000001001010110101100000001010"   // (R[11]) = _or_1_B1 (R[11],R[9]); 
000928  1 0  "10101000100010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[4],DMb_stat); 
000929  1 0  "10011101011011000000000000001000"   // (R[12]) = _rs_const_1_B1 (R[11]); 
000930  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
000931  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
000932  1 0  "00100001010000000000000000010011"   // () = nez_br_const_1_B1 (R[10],19); 
000933  1 0  "00010001011010110000000011111111"   // (R[11]) = _ad_const_1_B1 (R[11]); 
000934  1 0  "00010001100011000000000011111111"   // (R[12]) = _ad_const_1_B1 (R[12]); 

// m766;   next: m767 (next offset: 941)
000935  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000936  1 0  "01011100001011001111111111011000"   // (__spill_DMb[-40]) = stack_store_bndl_B1 (R[12],SP,-40); 
000937  1 0  "01011100001010111111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[11],SP,-39); 
000938  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000939  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000940  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 

// m767 subroutine call;   next: m768 (next offset: 941)

// m768, jump target: m770 (next offset: 953)
000941  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000942  1 0  "00111000001011001111111111011000"   // (R[12]) = stack_load_bndl_B1 (__spill_DMb[-40],SP,-40); 
000943  1 0  "00111000001010111111111111011001"   // (R[11]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000944  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000945  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000946  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000947  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000948  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000949  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
000950  1 0  "00000001001011000000100000110101"   // (R[9],DMb_stat) = store__pl_const_1_B1 (R[12],R[9],DMb_stat); 
000951  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000952  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 

// m764;   next: m770 (next offset: 956)
000953  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
000954  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
000955  1 0  "01011101001011000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[12],R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m770;   next: m774, jump target: m783 (next offset: 960)
000956  1 0  "10010101100010010000000011111111"   // (R[9]) = _ne_const_1_B1 (R[12]); 
000957  1 0  "00100001001000000000000000011001"   // () = nez_br_const_1_B1 (R[9],25); 
000958  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000959  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m774;   next: m779, jump target: m777 (next offset: 965)
000960  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
000961  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
000962  1 0  "00100001010000000000000000010001"   // () = nez_br_const_1_B1 (R[10],17); 
000963  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000964  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m779;   next: m780 (next offset: 970)
000965  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000966  1 0  "01011100001010111111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[11],SP,-39); 
000967  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000968  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000969  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m780 subroutine call;   next: m781 (next offset: 970)

// m781, jump target: m1006 (next offset: 981)
000970  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000971  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
000972  1 0  "00111000001010111111111111011001"   // (R[11]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000973  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000974  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
000975  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
000976  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000977  1 0  "00000001001000000000100000110101"   // (R[9],DMb_stat) = store_const__pl_const_1_B1 (R[9],DMb_stat); 
000978  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 
000979  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
000980  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 

// m777;   next: m1006 (next offset: 984)
000981  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
000982  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
000983  1 0  "01011101001000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m1006;   next: m785 (next offset: 984)

// m783;   next: m785 (next offset: 984)

// m785;   next: m790, jump target: m788 (next offset: 990)
000984  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
000985  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
000986  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
000987  1 0  "00100001010000000000000000010001"   // () = nez_br_const_1_B1 (R[10],17); 
000988  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
000989  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m790;   next: m791 (next offset: 995)
000990  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
000991  1 0  "01011100001010111111111111011001"   // (__spill_DMb[-39]) = stack_store_bndl_B1 (R[11],SP,-39); 
000992  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
000993  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
000994  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m791 subroutine call;   next: m792 (next offset: 995)

// m792, jump target: m794 (next offset: 1006)
000995  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
000996  1 0  "00111000001010111111111111011001"   // (R[11]) = stack_load_bndl_B1 (__spill_DMb[-39],SP,-39); 
000997  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
000998  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
000999  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
001000  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001001  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001002  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001003  1 0  "00000001001010110000100000110101"   // (R[9],DMb_stat) = store__pl_const_1_B1 (R[11],R[9],DMb_stat); 
001004  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001005  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 

// m788;   next: m794 (next offset: 1009)
001006  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
001007  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
001008  1 0  "01011101001010110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[11],R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m794;   next: m798, jump target: m810 (next offset: 1013)
001009  1 0  "10010101011010010000000011111111"   // (R[9]) = _ne_const_1_B1 (R[11]); 
001010  1 0  "00100001001000000000000000011100"   // () = nez_br_const_1_B1 (R[9],28); 
001011  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001012  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m798;   next: m803, jump target: m801 (next offset: 1018)
001013  1 0  "01010000011010010000000000000000"   // (R[9]) = load_1_B1 (R[3],DMb_stat); 
001014  1 0  "00000001001001100101000000010100"   // (R[10]) = _lt_1_B1 (R[9],R[6]); 
001015  1 0  "00100001010000000000000000001111"   // () = nez_br_const_1_B1 (R[10],15); 
001016  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001017  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m803;   next: m804 (next offset: 1022)
001018  1 0  "10101000001001111111111111010100"   // (__spill_DMw[-44]) = stack_store_bndl_B3 (R[7],SP,-44); 
001019  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001020  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001021  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m804 subroutine call;   next: m805 (next offset: 1022)

// m805, jump target: m810 (next offset: 1032)
001022  1 0  "01010000001010011111111111101000"   // (R[9]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001023  1 0  "01010000001010001111111111110100"   // (R[8]) = stack_load_bndl_B3 (__spill_DMw[-12],SP,-12); 
001024  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001025  1 0  "01010000001001011111111111100000"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-32],SP,-32); 
001026  1 0  "01010000001001001111111111011100"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-36],SP,-36); 
001027  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001028  1 0  "01010000001001111111111111010100"   // (R[7]) = stack_load_bndl_B3 (__spill_DMw[-44],SP,-44); 
001029  1 0  "00000001001000000000100000110101"   // (R[9],DMb_stat) = store_const__pl_const_1_B1 (R[9],DMb_stat); 
001030  1 0  "00100100000000000000000000001001"   // () = j_const_1_B1 (9); 
001031  1 0  "10101000011010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[3],DMb_stat); 

// m801, jump target: m810 (next offset: 1036)
001032  1 0  "00001001001010100000000000000001"   // (R[10],MC) = _pl_const_1_B1 (R[9]); 
001033  1 0  "10101000011010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[3],DMb_stat); 
001034  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
001035  1 0  "01011101001000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[9],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m759;   next: m810 (next offset: 1040)
001036  1 0  "00000001101010100101000000010010"   // (R[10]) = _ls_1_B1 (R[13],R[10]); 
001037  1 0  "00000001001010100100100000001010"   // (R[9]) = _or_1_B1 (R[10],R[9]); 
001038  1 0  "10101000101010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[5],DMb_stat); 
001039  1 0  "10101000100011000000000000000000"   // (DMb_stat) = store_1_B1 (R[12],R[4],DMb_stat); 

// m810;   next: m812, jump target: m585 (next offset: 1045)
001040  1 0  "00001000111010010000000000000001"   // (R[9],MC) = _pl_const_1_B1 (R[7]); 
001041  1 0  "00000001001010000011100000010000"   // (R[7]) = _le_1_B1 (R[9],R[8]); 
001042  1 0  "00100000111000001111111000000101"   // () = nez_br_const_1_B1 (R[7],-507); 
001043  1 0  "00001000001010101111111011000100"   // (R[10],MC) = _pl_rd_res_reg_const_1_B1 (-316,SP); 
001044  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m812;   next: m816, jump target: m870 (next offset: 1049)
001045  1 0  "01100101000001110000000000111111"   // (R[7]) = _eq_const_1_B1 (R[8]); 
001046  1 0  "00100000111000000000000001101011"   // () = nez_br_const_1_B1 (R[7],107); 
001047  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001048  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m816;   next: m821, jump target: m819 (next offset: 1056)
001049  1 0  "01010000100010010000000000000000"   // (R[9]) = load_1_B1 (R[4],DMb_stat); 
001050  1 0  "00111000001010001111111111110011"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
001051  1 0  "00000001000010010101000000000001"   // (R[10],) = _pl_1_B1 (R[8],R[9]); 
001052  1 0  "10010001010011000000000000010000"   // (R[12]) = _lt_const_1_B1 (R[10]); 
001053  1 0  "00100001100000000000000001100000"   // () = nez_br_const_1_B1 (R[12],96); 
001054  1 0  "01001100001010111111111111011010"   // (R[11]) = stack_load_bndl_B2 (__spill_DMh[-38],SP,-38); 
001055  1 0  "01010000101001110000000000000000"   // (R[7]) = load_1_B1 (R[5],DMb_stat); 

// m821;   next: m826, jump target: m824 (next offset: 1070)
001056  1 0  "01010100000010100000000000010000"   // (R[10]) = const_1_B2 (); 
001057  1 0  "00000001010010010100100000011000"   // (R[9],MC) = _mi_1_B1 (R[10],R[9]); 
001058  1 0  "00000001000010010100000000011000"   // (R[8],MC) = _mi_2_B1 (R[8],R[9]); 
001059  1 0  "10101000100010000000000000000000"   // (DMb_stat) = store_1_B1 (R[8],R[4],DMb_stat); 
001060  1 0  "10101000101010110000000000000000"   // (DMb_stat) = store_3_B1 (R[11],R[5],DMb_stat); 
001061  1 0  "00000000111010010010000000010010"   // (R[4]) = _ls_1_B1 (R[7],R[9]); 
001062  1 0  "00000001011010000010100000010111"   // (R[5]) = _rs_1_B1 (R[11],R[8]); 
001063  1 0  "00000000100001010011100000001010"   // (R[7]) = _or_1_B1 (R[4],R[5]); 
001064  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001065  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001066  1 0  "10011100111010000000000000001000"   // (R[8]) = _rs_const_1_B1 (R[7]); 
001067  1 0  "00100000101000000000000000001110"   // () = nez_br_const_1_B1 (R[5],14); 
001068  1 0  "00010000111001110000000011111111"   // (R[7]) = _ad_const_1_B1 (R[7]); 
001069  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 

// m826;   next: m827 (next offset: 1075)
001070  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001071  1 0  "01011100001010001111111111111110"   // (__spill_DMb[-2]) = stack_store_bndl_B1 (R[8],SP,-2); 
001072  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001073  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001074  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m827 subroutine call;   next: m828 (next offset: 1075)

// m828, jump target: m830 (next offset: 1083)
001075  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001076  1 0  "00111000001010001111111111111110"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-2],SP,-2); 
001077  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001078  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001079  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001080  1 0  "00000000100010000000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[8],R[4],DMb_stat); 
001081  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001082  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 

// m824;   next: m830 (next offset: 1086)
001083  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001084  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001085  1 0  "01011100100010000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m830;   next: m834, jump target: m843 (next offset: 1090)
001086  1 0  "10010101000001000000000011111111"   // (R[4]) = _ne_const_1_B1 (R[8]); 
001087  1 0  "00100000100000000000000000010100"   // () = nez_br_const_1_B1 (R[4],20); 
001088  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001089  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m834;   next: m839, jump target: m837 (next offset: 1095)
001090  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001091  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001092  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
001093  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001094  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m839;   next: m840 (next offset: 1099)
001095  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001096  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001097  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001098  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m840 subroutine call;   next: m841 (next offset: 1099)

// m841, jump target: m1009 (next offset: 1106)
001099  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001100  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001101  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001102  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
001103  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
001104  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001105  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m837;   next: m1009 (next offset: 1109)
001106  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001107  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001108  1 0  "01011100100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m1009;   next: m845 (next offset: 1109)

// m843;   next: m845 (next offset: 1109)

// m845;   next: m850, jump target: m848 (next offset: 1115)
001109  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
001110  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001111  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001112  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
001113  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001114  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m850;   next: m851 (next offset: 1119)
001115  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001116  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001117  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001118  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m851 subroutine call;   next: m852 (next offset: 1119)

// m852, jump target: m854 (next offset: 1126)
001119  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001120  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001121  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001122  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001123  1 0  "00000000100001110000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[7],R[4],DMb_stat); 
001124  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001125  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 

// m848;   next: m854 (next offset: 1129)
001126  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001127  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001128  1 0  "01011100100001110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[7],R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m854;   next: m858, jump target: m1012 (next offset: 1133)
001129  1 0  "10010100111001000000000011111111"   // (R[4]) = _ne_const_1_B1 (R[7]); 
001130  1 0  "00100000100000000000000000010111"   // () = nez_br_const_1_B1 (R[4],23); 
001131  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001132  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m858;   next: m863, jump target: m861 (next offset: 1138)
001133  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001134  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001135  1 0  "00100000101000000000000000001001"   // () = nez_br_const_1_B1 (R[5],9); 
001136  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001137  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m863;   next: m864 (next offset: 1141)
001138  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001139  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001140  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m864 subroutine call;   next: m865 (next offset: 1141)

// m865, jump target: m1012 (next offset: 1146)
001141  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001142  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001143  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
001144  1 0  "00100100000000000000000000001010"   // () = j_const_1_B1 (10); 
001145  1 0  "10101000101001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[5],DMb_stat); 

// m861, jump target: m1012 (next offset: 1151)
001146  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001147  1 0  "00001000100000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[4]); 
001148  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 
001149  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
001150  1 0  "01011100100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m819;   next: m1012 (next offset: 1155)
001151  1 0  "00000000111010000001100000010010"   // (R[3]) = _ls_2_B1 (R[7],R[8]); 
001152  1 0  "00000000011010110001100000001010"   // (R[3]) = _or_2_B1 (R[3],R[11]); 
001153  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 
001154  1 0  "10101000100010100000000000000000"   // (DMb_stat) = store_1_B1 (R[10],R[4],DMb_stat); 

// m1012;   next: m1013 (next offset: 1155)

// m870;   next: m1013 (next offset: 1155)

// m1013, jump target: m874 (next offset: 1157)
001155  1 0  "00100100000000000000000001101110"   // () = j_const_1_B1 (110); 
001156  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m504;   next: m509, jump target: m507 (next offset: 1165)
001157  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
001158  1 0  "01010000100010100000000000000000"   // (R[10]) = load_1_B1 (R[4],DMb_stat); 
001159  1 0  "00111000001010011111111111110011"   // (R[9]) = stack_load_bndl_B1 (__spill_DMb[-13],SP,-13); 
001160  1 0  "00000001001010100101100000000001"   // (R[11],) = _pl_1_B1 (R[9],R[10]); 
001161  1 0  "10010001011011000000000000010000"   // (R[12]) = _lt_const_1_B1 (R[11]); 
001162  1 0  "00100001100000000000000001100001"   // () = nez_br_const_1_B1 (R[12],97); 
001163  1 0  "01010000101010000000000000000000"   // (R[8]) = load_1_B1 (R[5],DMb_stat); 
001164  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m509;   next: m514, jump target: m512 (next offset: 1179)
001165  1 0  "01010100000010110000000000010000"   // (R[11]) = const_1_B2 (); 
001166  1 0  "00000001011010100101000000011000"   // (R[10],MC) = _mi_1_B1 (R[11],R[10]); 
001167  1 0  "00000001001010100100100000011000"   // (R[9],MC) = _mi_2_B1 (R[9],R[10]); 
001168  1 0  "10101000100010010000000000000000"   // (DMb_stat) = store_1_B1 (R[9],R[4],DMb_stat); 
001169  1 0  "10101000101001110000000000000000"   // (DMb_stat) = store_3_B1 (R[7],R[5],DMb_stat); 
001170  1 0  "00000001000010100010000000010010"   // (R[4]) = _ls_1_B1 (R[8],R[10]); 
001171  1 0  "00000000111010010010100000010111"   // (R[5]) = _rs_1_B1 (R[7],R[9]); 
001172  1 0  "00000000100001010011100000001010"   // (R[7]) = _or_1_B1 (R[4],R[5]); 
001173  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001174  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001175  1 0  "10011100111010000000000000001000"   // (R[8]) = _rs_const_1_B1 (R[7]); 
001176  1 0  "00100000101000000000000000001110"   // () = nez_br_const_1_B1 (R[5],14); 
001177  1 0  "00010000111001110000000011111111"   // (R[7]) = _ad_const_1_B1 (R[7]); 
001178  1 0  "00010001000010000000000011111111"   // (R[8]) = _ad_const_1_B1 (R[8]); 

// m514;   next: m515 (next offset: 1184)
001179  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001180  1 0  "01011100001010001111111111111110"   // (__spill_DMb[-2]) = stack_store_bndl_B1 (R[8],SP,-2); 
001181  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001182  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001183  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m515 subroutine call;   next: m516 (next offset: 1184)

// m516, jump target: m518 (next offset: 1192)
001184  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001185  1 0  "00111000001010001111111111111110"   // (R[8]) = stack_load_bndl_B1 (__spill_DMb[-2],SP,-2); 
001186  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001187  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001188  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001189  1 0  "00000000100010000000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[8],R[4],DMb_stat); 
001190  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001191  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 

// m512;   next: m518 (next offset: 1195)
001192  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001193  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001194  1 0  "01011100100010000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[8],R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m518;   next: m522, jump target: m531 (next offset: 1199)
001195  1 0  "10010101000001000000000011111111"   // (R[4]) = _ne_const_1_B1 (R[8]); 
001196  1 0  "00100000100000000000000000010100"   // () = nez_br_const_1_B1 (R[4],20); 
001197  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001198  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m522;   next: m527, jump target: m525 (next offset: 1204)
001199  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001200  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001201  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
001202  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001203  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m527;   next: m528 (next offset: 1208)
001204  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001205  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001206  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001207  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m528 subroutine call;   next: m529 (next offset: 1208)

// m529, jump target: m996 (next offset: 1215)
001208  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001209  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001210  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001211  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
001212  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 
001213  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001214  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 

// m525;   next: m996 (next offset: 1218)
001215  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001216  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001217  1 0  "01011100100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m996;   next: m533 (next offset: 1218)

// m531;   next: m533 (next offset: 1218)

// m533;   next: m538, jump target: m536 (next offset: 1224)
001218  1 0  "00000000000000000000000000000000"  .swstall "dm_addr_conflict"   // () = vd_nop_ID (); 
001219  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001220  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001221  1 0  "00100000101000000000000000001100"   // () = nez_br_const_1_B1 (R[5],12); 
001222  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001223  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m538;   next: m539 (next offset: 1228)
001224  1 0  "01011100001001111111111111111111"   // (__spill_DMb[-1]) = stack_store_bndl_B1 (R[7],SP,-1); 
001225  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001226  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001227  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m539 subroutine call;   next: m540 (next offset: 1228)

// m540, jump target: m542 (next offset: 1235)
001228  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001229  1 0  "00111000001001111111111111111111"   // (R[7]) = stack_load_bndl_B1 (__spill_DMb[-1],SP,-1); 
001230  1 0  "01010000001001101111111111101100"   // (R[6]) = stack_load_bndl_B3 (__spill_DMw[-20],SP,-20); 
001231  1 0  "01010000001000111111111111100100"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001232  1 0  "00000000100001110000100000110101"   // (R[4],DMb_stat) = store__pl_const_1_B1 (R[7],R[4],DMb_stat); 
001233  1 0  "00100100000000000000000000000100"   // () = j_const_1_B1 (4); 
001234  1 0  "10101000011001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[3],DMb_stat); 

// m536;   next: m542 (next offset: 1238)
001235  1 0  "00001000100001010000000000000001"   // (R[5],MC) = _pl_const_1_B1 (R[4]); 
001236  1 0  "10101000011001010000000000000000"   // (DMb_stat) = store_1_B1 (R[5],R[3],DMb_stat); 
001237  1 0  "01011100100001110000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_2_B1 (R[7],R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m542;   next: m546, jump target: m555 (next offset: 1242)
001238  1 0  "10010100111001000000000011111111"   // (R[4]) = _ne_const_1_B1 (R[7]); 
001239  1 0  "00100000100000000000000000010010"   // () = nez_br_const_1_B1 (R[4],18); 
001240  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001241  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m546;   next: m551, jump target: m549 (next offset: 1247)
001242  1 0  "01010000011001000000000000000000"   // (R[4]) = load_1_B1 (R[3],DMb_stat); 
001243  1 0  "00000000100001100010100000010100"   // (R[5]) = _lt_1_B1 (R[4],R[6]); 
001244  1 0  "00100000101000000000000000001001"   // () = nez_br_const_1_B1 (R[5],9); 
001245  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 
001246  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

// m551;   next: m552 (next offset: 1250)
001247  1 0  "01010100000001010000000100000000"   // (R[5]) = const_2_B2 (); 
001248  1 0  "00101000000000000000000000000000"   // (LR) = jal_const_1_B1 (0); 
001249  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 

// m552 subroutine call;   next: m553 (next offset: 1250)

// m553, jump target: m997 (next offset: 1255)
001250  1 0  "01010000001001001111111111101000"   // (R[4]) = stack_load_bndl_B3 (__spill_DMw[-24],SP,-24); 
001251  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001252  1 0  "00000000100000000000100000110101"   // (R[4],DMb_stat) = store_const__pl_const_1_B1 (R[4],DMb_stat); 
001253  1 0  "00100100000000000000000000000101"   // () = j_const_1_B1 (5); 
001254  1 0  "10101000101001000000000000000000"   // (DMb_stat) = store_1_B1 (R[4],R[5],DMb_stat); 

// m549;   next: m997 (next offset: 1259)
001255  1 0  "01010000001001011111111111100100"   // (R[5]) = stack_load_bndl_B3 (__spill_DMw[-28],SP,-28); 
001256  1 0  "00001000100000110000000000000001"   // (R[3],MC) = _pl_const_1_B1 (R[4]); 
001257  1 0  "10101000101000110000000000000000"   // (DMb_stat) = store_1_B1 (R[3],R[5],DMb_stat); 
001258  1 0  "01011100100000000000000000000000"   // (DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat) = store_const_1_B1 (R[4],DMb[-188],DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat,DMb_stat); 

// m997;   next: m998 (next offset: 1259)

// m555;   next: m998 (next offset: 1259)

// m998, jump target: m874 (next offset: 1261)
001259  1 0  "00100100000000000000000000000110"   // () = j_const_1_B1 (6); 
001260  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 

// m507;   next: m874 (next offset: 1266)
001261  1 0  "00000001000010010001100000010010"   // (R[3]) = _ls_2_B1 (R[8],R[9]); 
001262  1 0  "00000000011001110011000000001010"   // (R[6]) = _or_2_B1 (R[3],R[7]); 
001263  1 0  "01010000001000111111111111111000"   // (R[3]) = stack_load_bndl_B3 (__spill_DMw[-8],SP,-8); 
001264  1 0  "10101000100010110000000000000000"   // (DMb_stat) = store_1_B1 (R[11],R[4],DMb_stat); 
001265  1 0  "10101000101001100000000000000000"   // (DMb_stat) = store_1_B1 (R[6],R[5],DMb_stat); 

// m874 (next offset: /)
001266  1 0  "00110000011000000000000000000000"   // () = __rts_jr_1_B1 (R[3]); 
001267  1 0  "00001000001000011111111010111100"   // (SP,MC) = _pl_rd_res_reg_const_wr_res_reg_1_B1 (-324,SP,SP); 
001268  1 0  "00000000000000000000000000000000"  .swstall "delay_slot"   // () = vd_nop_ID (); 

